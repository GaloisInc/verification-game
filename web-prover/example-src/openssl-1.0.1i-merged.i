/* Generated by Frama-C */
typedef __builtin_va_list va_list;
typedef unsigned int ino_t;
typedef unsigned int gid_t;
typedef unsigned int uid_t;
typedef long time_t;
typedef unsigned int blkcnt_t;
typedef unsigned int blksize_t;
typedef unsigned int dev_t;
typedef unsigned int mode_t;
typedef unsigned int nlink_t;
typedef long off_t;
struct stat {
   dev_t st_dev ;
   ino_t st_ino ;
   mode_t st_mode ;
   nlink_t st_nlink ;
   uid_t st_uid ;
   gid_t st_gid ;
   dev_t st_rdev ;
   off_t st_size ;
   time_t st_atime ;
   time_t st_mtime ;
   time_t st_ctime ;
   blksize_t st_blksize ;
   blkcnt_t st_blocks ;
   char *__fc_real_data ;
   int __fc_real_data_max_size ;
};
typedef unsigned int size_t;
struct __fc_FILE {
   unsigned int __fc_stdio_id ;
   unsigned int __fc_maxsz ;
   unsigned int __fc_writepos ;
   unsigned int __fc_readpos ;
   int __fc_is_a_socket ;
   int mode ;
   struct stat *__fc_inode ;
};
typedef struct __fc_FILE FILE;
struct __fc_pos_t {
   unsigned long __fc_stdio_position ;
};
typedef struct __fc_pos_t fpos_t;
typedef int wchar_t;
struct __fc_div_t {
   int quot ;
   int rem ;
};
typedef struct __fc_div_t div_t;
struct __fc_ldiv_t {
   long quot ;
   long rem ;
};
typedef struct __fc_ldiv_t ldiv_t;
struct __fc_lldiv_t {
   long long quot ;
   long long rem ;
};
typedef struct __fc_lldiv_t lldiv_t;
struct __anonstruct_fd_set_1 {
   char __fc_fd_set ;
};
typedef struct __anonstruct_fd_set_1 fd_set;
typedef unsigned int clock_t;
struct tm {
   int tm_sec ;
   int tm_min ;
   int tm_hour ;
   int tm_mday ;
   int tm_mon ;
   int tm_year ;
   int tm_wday ;
   int tm_yday ;
   int tm_isdst ;
};
struct option {
   char const *name ;
   int has_arg ;
   int *flag ;
   int val ;
};
struct bignum_st;
typedef struct bignum_st BIGNUM;
/* FramaC_size(BIGNUM) = 5 */
struct bignum_st {
   unsigned long *d ;
   int top ;
   int dmax ;
   int neg ;
   int flags ;
};
struct bignum_ctx;
typedef struct bignum_ctx BN_CTX;
/* FramaC_size(BN_POOL_ITEM) = 16 * FramaC_size(BIGNUM) + 2
                             = 16 * 5 + 2
                             = 82 */
struct bignum_pool_item {
   BIGNUM vals[16] ;
   struct bignum_pool_item *prev ;
   struct bignum_pool_item *next ;
};
typedef struct bignum_pool_item BN_POOL_ITEM;
/* FramaC_size(BN_POOL) = 5 */
struct bignum_pool {
   BN_POOL_ITEM *head ;
   BN_POOL_ITEM *current ;
   BN_POOL_ITEM *tail ;
   unsigned int used ;
   unsigned int size ;
};
typedef struct bignum_pool BN_POOL;
/* FramaC_size(BN_STACK) = 3 */
struct bignum_ctx_stack {
   unsigned int *indexes ;
   unsigned int depth ;
   unsigned int size ;
};
typedef struct bignum_ctx_stack BN_STACK;
/* FramaC_size(BN_CTX) = FramaC_size(BN_POOL) + FramaC_size(BN_STACK) + 3
                       = 5 + 3 + 3
                       = 11 */
struct bignum_ctx {
   BN_POOL pool ;
   BN_STACK stack ;
   unsigned int used ;
   int err_stack ;
   int too_many ;
};
extern int __FC_errno;

extern FILE *__fc_stdin;

extern FILE *__fc_stdout;

/*@ assigns \nothing; */
extern int remove(char const *filename);

/*@ assigns \nothing; */
extern int rename(char const *old, char const *new);

/*@ ensures
      \result ≡ \null ∨
      (\valid(\result) ∧ \fresh{Old, Here}(\result,sizeof(FILE)));
    assigns \nothing;
 */
extern FILE *tmpfile(void);

/*@ assigns \result, *(s+(..));
    assigns \result \from *(s+(..));
    assigns *(s+(..)) \from \nothing;
 */
extern char *tmpnam(char *s);

/*@ ensures \result ≡ 0 ∨ \result ≡ -1;
    assigns *stream;
    assigns *stream \from \nothing;
 */
extern int fclose(FILE *stream);

/*@ ensures \result ≡ 0 ∨ \result ≡ -1;
    assigns *stream;
    assigns *stream \from \nothing;
 */
extern int fflush(FILE *stream);

FILE __fc_fopen[2];
FILE const *_p__fc_fopen = (FILE const *)(__fc_fopen);
/*@ ensures
      \result ≡ \null ∨
      ((\result ≡ (FILE *)__fc_fopen ∨ \result ≡ &__fc_fopen[1]) ∧
       \fresh{Old, Here}(\result,sizeof(FILE)));
    assigns \result;
    assigns \result \from *(filename+(..)), *(mode+(..)), _p__fc_fopen;
 */
extern FILE *fopen(char const *filename, char const *mode);

/*@ ensures
      \result ≡ \null ∨
      (\valid(\result) ∧ \fresh{Old, Here}(\result,sizeof(FILE)));
    assigns \result;
    assigns \result \from fildes, *(mode+(..));
 */
extern FILE *fdopen(int fildes, char const *mode);

/*@ ensures \result ≡ \null ∨ \result ≡ \old(stream);
    assigns *stream;
 */
extern FILE *freopen(char const *filename, char const *mode, FILE *stream);

/*@ assigns *stream;
    assigns *stream \from buf; */
extern void setbuf(FILE *stream, char *buf);

/*@ assigns *stream;
    assigns *stream \from buf, mode, size; */
extern int setvbuf(FILE *stream, char *buf, int mode, size_t size);

/*@ assigns *stream; */
extern int fprintf(FILE *stream, char const *format , ...);

/*@ assigns *stream; */
extern int fscanf(FILE *stream, char const *format , ...);

/*@ assigns *__fc_stdout;
    assigns *__fc_stdout \from *(format+(..)); */
extern int printf(char const *format , ...);

/*@ assigns *__fc_stdin; */
extern int scanf(char const *format , ...);

/*@ assigns *(s+(0 .. n-1)); */
extern int snprintf(char *s, size_t n, char const *format , ...);

/*@ assigns *(s+(0 ..)); */
extern int sprintf(char *s, char const *format , ...);

/*@ assigns *stream;
    assigns *stream \from *(format+(..)), arg; */
extern int vfprintf(FILE *stream, char const *format, va_list arg);

/*@ assigns *stream;
    assigns *stream \from *(format+(..)), *stream; */
extern int vfscanf(FILE *stream, char const *format, va_list arg);

/*@ assigns *__fc_stdout;
    assigns *__fc_stdout \from arg; */
extern int vprintf(char const *format, va_list arg);

/*@ assigns *__fc_stdin;
    assigns *__fc_stdin \from *(format+(..)); */
extern int vscanf(char const *format, va_list arg);

/*@ assigns *(s+(0 .. n-1));
    assigns *(s+(0 .. n-1)) \from *(format+(..)), arg;
 */
extern int vsnprintf(char *s, size_t n, char const *format, va_list arg);

/*@ assigns *(s+(0 ..));
    assigns *(s+(0 ..)) \from *(format+(..)), arg; */
extern int vsprintf(char *s, char const *format, va_list arg);

/*@ assigns *stream; */
extern int fgetc(FILE *stream);

/*@ ensures \result ≡ \null ∨ \result ≡ \old(s);
    assigns *(s+(0 .. n-1)), *stream, \result;
    assigns *(s+(0 .. n-1)) \from *stream;
    assigns *stream \from *stream;
    assigns \result \from s, n, *stream;
 */
extern char *fgets(char *s, int n, FILE *stream);

/*@ assigns *stream; */
extern int fputc(int c, FILE *stream);

/*@ assigns *stream;
    assigns *stream \from *(s+(..)); */
extern int fputs(char const *s, FILE *stream);

/*@ assigns \result, *stream;
    assigns \result \from *stream;
    assigns *stream \from *stream;
 */
extern int getc(FILE *stream);

/*@ assigns \result;
    assigns \result \from *__fc_stdin; */
extern int getchar(void);

/*@ ensures \result ≡ \old(s) ∨ \result ≡ \null;
    assigns *(s+(..)), \result;
    assigns *(s+(..)) \from *__fc_stdin;
    assigns \result \from s, __fc_stdin;
 */
extern char *gets(char *s);

/*@ assigns *stream;
    assigns *stream \from c; */
extern int putc(int c, FILE *stream);

/*@ assigns *__fc_stdout;
    assigns *__fc_stdout \from c; */
extern int putchar(int c);

/*@ assigns *__fc_stdout;
    assigns *__fc_stdout \from *(s+(..)); */
extern int puts(char const *s);

/*@ assigns *stream;
    assigns *stream \from c; */
extern int ungetc(int c, FILE *stream);

/*@ assigns *((char *)ptr+(0 .. nmemb*size-1));
    assigns *((char *)ptr+(0 .. nmemb*size-1)) \from *stream;
 */
extern size_t fread(void *ptr, size_t size, size_t nmemb, FILE *stream);

/*@ assigns *stream;
    assigns *stream \from *((char *)ptr+(0 .. nmemb*size-1));
 */
extern size_t fwrite(void const *ptr, size_t size, size_t nmemb, FILE *stream);

/*@ assigns *pos;
    assigns *pos \from *stream; */
extern int fgetpos(FILE *stream, fpos_t *pos);

/*@ assigns *stream, __FC_errno;
    assigns *stream \from offset, whence; */
extern int fseek(FILE *stream, long offset, int whence);

/*@ assigns *stream;
    assigns *stream \from *pos; */
extern int fsetpos(FILE *stream, fpos_t const *pos);

/*@ assigns \result, __FC_errno;
    assigns \result \from *stream;
    assigns __FC_errno \from *stream;
 */
extern long ftell(FILE *stream);

/*@ assigns *stream;
    assigns *stream \from \nothing; */
extern void rewind(FILE *stream);

/*@ assigns *stream;
    assigns *stream \from \nothing; */
extern void clearerr(FILE *stream);

/*@ assigns \result;
    assigns \result \from *stream; */
extern int feof(FILE *stream);

/*@ assigns \result;
    assigns \result \from *stream; */
extern int fileno(FILE *stream);

/*@ assigns *stream;
    assigns *stream \from \nothing; */
extern void flockfile(FILE *stream);

/*@ assigns *stream;
    assigns *stream \from \nothing; */
extern void funlockfile(FILE *stream);

/*@ assigns \result, *stream;
    assigns \result \from \nothing;
    assigns *stream \from \nothing;
 */
extern int ftrylockfile(FILE *stream);

/*@ assigns \result;
    assigns \result \from *stream; */
extern int ferror(FILE *stream);

/*@ assigns __fc_stdout;
    assigns __fc_stdout \from __FC_errno, *(s+(..)); */
extern void perror(char const *s);

/*@ assigns \result, *stream;
    assigns \result \from *stream;
    assigns *stream \from *stream;
 */
extern int getc_unlocked(FILE *stream);

/*@ assigns \result;
    assigns \result \from *__fc_stdin; */
extern int getchar_unlocked(void);

/*@ assigns *stream;
    assigns *stream \from c; */
extern int putc_unlocked(int c, FILE *stream);

/*@ assigns *__fc_stdout;
    assigns *__fc_stdout \from c; */
extern int putchar_unlocked(int c);

/*@ assigns *stream;
    assigns *stream \from \nothing; */
extern void clearerr_unlocked(FILE *stream);

/*@ assigns \result;
    assigns \result \from *stream; */
extern int feof_unlocked(FILE *stream);

/*@ assigns \result;
    assigns \result \from *stream; */
extern int ferror_unlocked(FILE *stream);

/*@ assigns \result;
    assigns \result \from *stream; */
extern int fileno_unlocked(FILE *stream);

/*@ assigns \result;
    assigns \result \from *(nptr+(..)); */
extern double atof(char const *nptr);

/*@ assigns \result;
    assigns \result \from *(nptr+(..)); */
extern int atoi(char const *nptr);

/*@ assigns \result;
    assigns \result \from *(nptr+(..)); */
extern long atol(char const *nptr);

/*@ assigns \result;
    assigns \result \from *(nptr+(..)); */
extern long long atoll(char const *nptr);

/*@ assigns \result, *endptr;
    assigns \result \from *(nptr+(0 ..)), nptr;
    assigns *endptr \from *(nptr+(0 ..)), nptr;
 */
extern double strtod(char const *nptr, char **endptr);

/*@ assigns \result, *endptr;
    assigns \result \from *(nptr+(0 ..)), nptr;
    assigns *endptr \from *(nptr+(0 ..)), nptr;
 */
extern float strtof(char const *nptr, char **endptr);

/*@ assigns \result, *endptr;
    assigns \result \from *(nptr+(0 ..)), nptr;
    assigns *endptr \from *(nptr+(0 ..)), nptr;
 */
extern long double strtold(char const *nptr, char **endptr);

/*@ assigns \result, *endptr;
    assigns \result \from *(nptr+(0 ..));
    assigns *endptr \from *(nptr+(0 ..));
 */
extern long strtol(char const *nptr, char **endptr, int base);

/*@ assigns \result, *endptr;
    assigns \result \from *(nptr+(0 ..));
    assigns *endptr \from *(nptr+(0 ..));
 */
extern long long strtoll(char const *nptr, char **endptr, int base);

/*@ assigns \result, *endptr;
    assigns \result \from *(nptr+(0 ..));
    assigns *endptr \from *(nptr+(0 ..));
 */
extern unsigned long strtoul(char const *nptr, char **endptr, int base);

/*@ assigns \result, *endptr;
    assigns \result \from *(nptr+(0 ..));
    assigns *endptr \from *(nptr+(0 ..));
 */
extern unsigned long long strtoull(char const *nptr, char **endptr, int base);

int __fc_random_counter __attribute__((__unused__));
unsigned long const __fc_rand_max = (unsigned long)32767;
/*@ ensures 0 ≤ \result ∧ \result ≤ __fc_rand_max;
    assigns \result, __fc_random_counter;
    assigns \result \from __fc_random_counter;
 */
extern int rand(void);

/*@ assigns __fc_random_counter;
    assigns __fc_random_counter \from seed; */
extern void srand(unsigned int seed);

/*@ ghost extern int __fc_heap_status; */

/*@
axiomatic
  dynamic_allocation {
  predicate is_allocable{L}(size_t n) 
    reads __fc_heap_status;
  
  }
 */
/*@ assigns __fc_heap_status, \result;
    assigns __fc_heap_status \from size, __fc_heap_status;
    assigns \result \from size, __fc_heap_status;
    allocates \result;
    
    behavior allocation:
      assumes is_allocable(size);
      ensures \fresh{Old, Here}(\result,\old(size));
      assigns __fc_heap_status, \result;
      assigns __fc_heap_status \from size, __fc_heap_status;
      assigns \result \from size, __fc_heap_status;
    
    behavior no_allocation:
      assumes ¬is_allocable(size);
      ensures \result ≡ \null;
      assigns \result;
      assigns \result \from \nothing;
      allocates \nothing;
    
    complete behaviors no_allocation, allocation;
    disjoint behaviors no_allocation, allocation;
 */
extern void *malloc(size_t size);

/*@ assigns __fc_heap_status;
    assigns __fc_heap_status \from __fc_heap_status;
    frees p;
    
    behavior deallocation:
      assumes p ≢ \null;
      requires freeable: \freeable(p);
      ensures \allocable(\old(p));
      assigns __fc_heap_status;
      assigns __fc_heap_status \from __fc_heap_status;
    
    behavior no_deallocation:
      assumes p ≡ \null;
      assigns \nothing;
      allocates \nothing;
    
    complete behaviors no_deallocation, deallocation;
    disjoint behaviors no_deallocation, deallocation;
 */
extern void free(void *p);

/*@ ensures \false;
    assigns \nothing; */
extern void abort(void);

/*@ assigns \result;
    assigns \result \from \nothing; */
extern int atexit(void (*func)(void));

/*@ assigns \result;
    assigns \result \from \nothing; */
extern int at_quick_exit(void (*func)(void));

/*@ ensures \false;
    assigns \nothing; */
extern void exit(int status);

/*@ ensures \false;
    assigns \nothing; */
extern void _Exit(int status);

/*@ ensures \result ≡ \null ∨ \valid(\result);
    assigns \nothing; */
extern char *getenv(char const *name);

/*@ ensures \false;
    assigns \nothing; */
extern void quick_exit(int status);

/*@ assigns \result;
    assigns \result \from *(string+(..)); */
extern int system(char const *string);

/*@ assigns *((char *)\result+(..));
    assigns *((char *)\result+(..))
      \from *((char *)key+(..)), *((char *)base+(..)), nmemb, size, *compar;
 */
extern void *bsearch(void const *key, void const *base, size_t nmemb,
                     size_t size, int (*compar)(void const *, void const *));

/*@ assigns *((char *)base+(..));
    assigns *((char *)base+(..))
      \from *((char *)base+(..)), nmemb, size, *compar;
 */
extern void qsort(void *base, size_t nmemb, size_t size,
                  int (*compar)(void const *, void const *));

/*@ requires abs_representable: (int)(-j) ≡ -j;
    assigns \result;
    assigns \result \from j;
 */
extern int abs(int j);

/*@ requires abs_representable: (long)(-j) ≡ -j;
    assigns \result;
    assigns \result \from j;
 */
extern long labs(long j);

/*@ requires abs_representable: (long long)(-j) ≡ -j;
    assigns \result;
    assigns \result \from j;
 */
extern long long llabs(long long j);

/*@ assigns \result;
    assigns \result \from numer, denom; */
extern div_t div(int numer, int denom);

/*@ assigns \result;
    assigns \result \from numer, denom; */
extern ldiv_t ldiv(long numer, long denom);

/*@ assigns \result;
    assigns \result \from numer, denom; */
extern lldiv_t lldiv(long long numer, long long denom);

/*@ assigns \result;
    assigns \result \from *(s+(0 ..)), n; */
extern int mblen(char const *s, size_t n);

/*@ assigns \result, *(pwc+(0 .. n-1));
    assigns \result \from *(s+(0 .. n-1)), n;
    assigns *(pwc+(0 .. n-1)) \from *(s+(0 .. n-1)), n;
 */
extern int mbtowc(wchar_t *pwc, char const *s, size_t n);

/*@ assigns \result, *(s+(0 ..));
    assigns \result \from wc;
    assigns *(s+(0 ..)) \from wc;
 */
extern int wctomb(char *s, wchar_t wc);

/*@ assigns \result, *(pwcs+(0 .. n-1));
    assigns \result \from *(s+(0 .. n-1)), n;
    assigns *(pwcs+(0 .. n-1)) \from *(s+(0 .. n-1)), n;
 */
extern size_t mbstowcs(wchar_t *pwcs, char const *s, size_t n);

/*@ assigns \result, *(s+(0 .. n-1));
    assigns \result \from *(pwcs+(0 .. n-1)), n;
    assigns *(s+(0 .. n-1)) \from *(pwcs+(0 .. n-1)), n;
 */
extern size_t wcstombs(char *s, wchar_t const *pwcs, size_t n);

/*@
axiomatic
  MemCmp {
  logic ℤ memcmp{L}(char *s1, char *s2, ℤ n)
    
    reads *(s1+(0 .. n-1)), *(s2+(0 .. n-1));
  
  axiom
  memcmp_zero{L}:
                 ∀ char *s1, char *s2;
                   (∀ ℤ n;
                      memcmp{L}(s1, s2, n) ≡ 0 ⇔
                      (∀ ℤ i; 0 ≤ i ∧ i < n ⇒ *(s1+i) ≡ *(s2+i)));
  
  }
 */
/*@
axiomatic
  MemChr {
  logic 𝔹 memchr{L}(char *s, ℤ c, ℤ n) ;
  
  axiom
  memchr_def{L}:
                ∀ char *s;
                  (∀ ℤ c;
                     (∀ ℤ n;
                        memchr{L}(s, c, n) ≡ \true ⇔
                        (∃ int i; (0 ≤ i ∧ i < n) ∧ *(s+i) ≡ c)));
  
  }
 */
/*@
axiomatic
  MemSet {
  logic 𝔹 memset{L}(char *s, ℤ c, ℤ n) ;
  
  axiom
  memset_def{L}:
                ∀ char *s;
                  (∀ ℤ c;
                     (∀ ℤ n;
                        memset{L}(s, c, n) ≡ \true ⇔
                        (∀ ℤ i; 0 ≤ i ∧ i < n ⇒ *(s+i) ≡ c)));
  
  }
 */
/*@
axiomatic
  StrLen {
  logic ℤ strlen{L}(char *s) ;
  
  axiom
  strlen_pos_or_null{L}:
                        ∀ char *s;
                          (∀ ℤ i;
                             (0 ≤ i ∧
                              (∀ ℤ j;
                                 0 ≤ j ∧ j < i ⇒ *(s+j) ≢ '\000'))
                             ∧ *(s+i) ≡ '\000' ⇒ strlen{L}(s) ≡ i);
  
  axiom
  strlen_neg{L}:
                ∀ char *s;
                  (∀ ℤ i; 0 ≤ i ⇒ *(s+i) ≢ '\000') ⇒
                  strlen{L}(s) < 0;
  
  axiom
  strlen_before_null{L}:
                        ∀ char *s;
                          (∀ ℤ i;
                             0 ≤ i ∧ i < strlen{L}(s) ⇒
                             *(s+i) ≢ '\000');
  
  axiom
  strlen_at_null{L}:
                    ∀ char *s;
                      0 ≤ strlen{L}(s) ⇒ *(s+strlen{L}(s)) ≡ '\000';
  
  axiom
  strlen_not_zero{L}:
                     ∀ char *s;
                       (∀ ℤ i;
                          (0 ≤ i ∧ i ≤ strlen{L}(s)) ∧
                          *(s+i) ≢ '\000' ⇒ i < strlen{L}(s));
  
  axiom
  strlen_zero{L}:
                 ∀ char *s;
                   (∀ ℤ i;
                      (0 ≤ i ∧ i ≤ strlen{L}(s)) ∧ *(s+i) ≡ '\000'
                      ⇒ i ≡ strlen{L}(s));
  
  axiom
  strlen_sup{L}:
                ∀ char *s;
                  (∀ ℤ i;
                     0 ≤ i ∧ *(s+i) ≡ '\000' ⇒
                     0 ≤ strlen{L}(s) ∧ strlen{L}(s) ≤ i);
  
  axiom
  strlen_shift{L}:
                  ∀ char *s;
                    (∀ ℤ i;
                       0 ≤ i ∧ i ≤ strlen{L}(s) ⇒
                       strlen{L}(s+i) ≡ strlen{L}(s)-i);
  
  axiom
  strlen_create{L}:
                   ∀ char *s;
                     (∀ ℤ i;
                        0 ≤ i ∧ *(s+i) ≡ '\000' ⇒
                        0 ≤ strlen{L}(s) ∧ strlen{L}(s) ≤ i);
  
  axiom
  strlen_create_shift{L}:
                         ∀ char *s;
                           (∀ ℤ i;
                              (∀ ℤ k;
                                 (0 ≤ k ∧ k ≤ i) ∧ *(s+i) ≡ '\000'
                                 ⇒
                                 0 ≤ strlen{L}(s+k) ∧
                                 strlen{L}(s+k) ≤ i-k));
  
  axiom
  memcmp_strlen_left{L}:
                        ∀ char *s1, char *s2;
                          (∀ ℤ n;
                             memcmp{L}(s1, s2, n) ≡ 0 ∧ strlen{L}(s1) < n
                             ⇒ strlen{L}(s1) ≡ strlen{L}(s2));
  
  axiom
  memcmp_strlen_right{L}:
                         ∀ char *s1, char *s2;
                           (∀ ℤ n;
                              memcmp{L}(s1, s2, n) ≡ 0 ∧
                              strlen{L}(s2) < n ⇒
                              strlen{L}(s1) ≡ strlen{L}(s2));
  
  axiom
  memcmp_strlen_shift_left{L}:
                              ∀ char *s1, char *s2;
                                (∀ ℤ k, ℤ n;
                                   (memcmp{L}(s1, s2+k, n) ≡ 0 ∧ 0 ≤ k)
                                   ∧ strlen{L}(s1) < n ⇒
                                   0 ≤ strlen{L}(s2) ∧
                                   strlen{L}(s2) ≤ k+strlen{L}(s1));
  
  axiom
  memcmp_strlen_shift_right{L}:
                               ∀ char *s1, char *s2;
                                 (∀ ℤ k, ℤ n;
                                    (memcmp{L}(s1+k, s2, n) ≡ 0 ∧ 0 ≤ k)
                                    ∧ strlen{L}(s2) < n ⇒
                                    0 ≤ strlen{L}(s1) ∧
                                    strlen{L}(s1) ≤ k+strlen{L}(s2));
  
  }
 */
/*@
axiomatic
  StrCmp {
  logic ℤ strcmp{L}(char *s1, char *s2) ;
  
  axiom
  strcmp_zero{L}:
                 ∀ char *s1, char *s2;
                   strcmp{L}(s1, s2) ≡ 0 ⇔
                   strlen{L}(s1) ≡ strlen{L}(s2) ∧
                   (∀ ℤ i;
                      0 ≤ i ∧ i ≤ strlen{L}(s1) ⇒ *(s1+i) ≡ *(s2+i));
  
  }
 */
/*@
axiomatic
  StrNCmp {
  logic ℤ strncmp{L}(char *s1, char *s2, ℤ n) ;
  
  axiom
  strncmp_zero{L}:
                  ∀ char *s1, char *s2;
                    (∀ ℤ n;
                       strncmp{L}(s1, s2, n) ≡ 0 ⇔
                       (strlen{L}(s1) < n ∧ strcmp{L}(s1, s2) ≡ 0) ∨
                       (∀ ℤ i; 0 ≤ i ∧ i < n ⇒ *(s1+i) ≡ *(s2+i)));
  
  }
 */
/*@
axiomatic
  StrChr {
  logic 𝔹 strchr{L}(char *s, ℤ c) ;
  
  axiom
  strchr_def{L}:
                ∀ char *s;
                  (∀ ℤ c;
                     strchr{L}(s, c) ≡ \true ⇔
                     (∃ ℤ i;
                        (0 ≤ i ∧ i ≤ strlen{L}(s)) ∧ *(s+i) ≡ c));
  
  }
 */
/*@
axiomatic
  WcsLen {
  logic ℤ wcslen{L}(wchar_t *s) ;
  
  axiom
  wcslen_pos_or_null{L}:
                        ∀ wchar_t *s;
                          (∀ ℤ i;
                             (0 ≤ i ∧
                              (∀ ℤ j; 0 ≤ j ∧ j < i ⇒ *(s+j) ≢ 0))
                             ∧ *(s+i) ≡ 0 ⇒ wcslen{L}(s) ≡ i);
  
  axiom
  wcslen_neg{L}:
                ∀ wchar_t *s;
                  (∀ ℤ i; 0 ≤ i ⇒ *(s+i) ≢ 0) ⇒ wcslen{L}(s) < 0;
  
  axiom
  wcslen_before_null{L}:
                        ∀ wchar_t *s;
                          (∀ int i;
                             0 ≤ i ∧ i < wcslen{L}(s) ⇒ *(s+i) ≢ 0);
  
  axiom
  wcslen_at_null{L}:
                    ∀ wchar_t *s;
                      0 ≤ wcslen{L}(s) ⇒ *(s+wcslen{L}(s)) ≡ 0;
  
  axiom
  wcslen_not_zero{L}:
                     ∀ wchar_t *s;
                       (∀ int i;
                          (0 ≤ i ∧ i ≤ wcslen{L}(s)) ∧ *(s+i) ≢ 0
                          ⇒ i < wcslen{L}(s));
  
  axiom
  wcslen_zero{L}:
                 ∀ wchar_t *s;
                   (∀ int i;
                      (0 ≤ i ∧ i ≤ wcslen{L}(s)) ∧ *(s+i) ≡ 0 ⇒
                      i ≡ wcslen{L}(s));
  
  axiom
  wcslen_sup{L}:
                ∀ wchar_t *s;
                  (∀ int i;
                     0 ≤ i ∧ *(s+i) ≡ 0 ⇒
                     0 ≤ wcslen{L}(s) ∧ wcslen{L}(s) ≤ i);
  
  axiom
  wcslen_shift{L}:
                  ∀ wchar_t *s;
                    (∀ int i;
                       0 ≤ i ∧ i ≤ wcslen{L}(s) ⇒
                       wcslen{L}(s+i) ≡ wcslen{L}(s)-i);
  
  axiom
  wcslen_create{L}:
                   ∀ wchar_t *s;
                     (∀ int i;
                        0 ≤ i ∧ *(s+i) ≡ 0 ⇒
                        0 ≤ wcslen{L}(s) ∧ wcslen{L}(s) ≤ i);
  
  axiom
  wcslen_create_shift{L}:
                         ∀ wchar_t *s;
                           (∀ int i;
                              (∀ int k;
                                 (0 ≤ k ∧ k ≤ i) ∧ *(s+i) ≡ 0 ⇒
                                 0 ≤ wcslen{L}(s+k) ∧
                                 wcslen{L}(s+k) ≤ i-k));
  
  }
 */
/*@
axiomatic
  WcsCmp {
  logic ℤ wcscmp{L}(wchar_t *s1, wchar_t *s2) ;
  
  axiom
  wcscmp_zero{L}:
                 ∀ wchar_t *s1, wchar_t *s2;
                   wcscmp{L}(s1, s2) ≡ 0 ⇔
                   wcslen{L}(s1) ≡ wcslen{L}(s2) ∧
                   (∀ ℤ i;
                      0 ≤ i ∧ i ≤ wcslen{L}(s1) ⇒ *(s1+i) ≡ *(s2+i));
  
  }
 */
/*@
axiomatic
  WcsNCmp {
  logic ℤ wcsncmp{L}(wchar_t *s1, wchar_t *s2, ℤ n) ;
  
  axiom
  wcsncmp_zero{L}:
                  ∀ wchar_t *s1, wchar_t *s2;
                    (∀ ℤ n;
                       wcsncmp{L}(s1, s2, n) ≡ 0 ⇔
                       (wcslen{L}(s1) < n ∧ wcscmp{L}(s1, s2) ≡ 0) ∨
                       (∀ ℤ i; 0 ≤ i ∧ i < n ⇒ *(s1+i) ≡ *(s2+i)));
  
  }
 */
/*@ logic ℤ minimum(ℤ i, ℤ j) = i<j? i: j;
 */
/*@ logic ℤ maximum(ℤ i, ℤ j) = i<j? j: i;
 */
/*@
predicate valid_string{L}(char *s) =
  0 ≤ strlen{L}(s) ∧ \valid{L}(s+(0 .. strlen{L}(s)));
 */
/*@
predicate valid_string_or_null{L}(char *s) =
  s ≡ \null ∨ valid_string{L}(s);
 */
/*@
predicate valid_wstring{L}(wchar_t *s) =
  0 ≤ wcslen{L}(s) ∧ \valid{L}(s+(0 .. wcslen{L}(s)));
 */
/*@
predicate valid_wstring_or_null{L}(wchar_t *s) =
  s ≡ \null ∨ valid_wstring{L}(s);
 */
/*@ requires \valid_read((char *)s1+(0 .. n-1));
    requires \valid_read((char *)s2+(0 .. n-1));
    ensures \result ≡ memcmp((char *)\old(s1), (char *)\old(s2), \old(n));
    assigns \result;
    assigns \result \from *((char *)s1+(0 .. n-1)), *((char *)s2+(0 .. n-1));
 */
extern int memcmp(void const *s1, void const *s2, size_t n);

/*@ requires \valid_read((char *)s+(0 .. n-1));
    assigns \result;
    assigns \result \from s, c, *((char *)s+(0 .. n-1));
    
    behavior found:
      assumes memchr((char *)s, c, n) ≡ \true;
      ensures \base_addr(\result) ≡ \base_addr(\old(s));
      ensures (int)*((char *)\result) ≡ \old(c);
    
    behavior not_found:
      assumes ¬(memchr((char *)s, c, n) ≡ \true);
      ensures \result ≡ \null;
 */
extern void *memchr(void const *s, int c, size_t n);


/* No specification of full semantics, but probably better to leave
 * that out for now. */
/*@ requires valid_dst: \valid((char *)dest+(0 .. n-1));
    requires valid_src: \valid_read((char *)src+(0 .. n-1));
    requires \separated((char *)dest+(0 .. n-1), (char *)src+(0 .. n-1));
    ensures \result ≡ \old(dest);
    assigns *((char *)dest+(0 .. n-1)), \result;
    assigns *((char *)dest+(0 .. n-1)) \from *((char *)src+(0 .. n-1));
    assigns \result \from dest;
 */
/* void *memcpy(void *dest, void const *src, size_t n) { return (void*)0; } */
/* Special cases for the types where it is used */
void *memcpy_unsigned_int(unsigned int *dest, unsigned int const *src, size_t n) { return (void*)0; }

/*@ requires valid_dst: \valid((char *)dest+(0 .. n-1));
    requires valid_src: \valid_read((char *)src+(0 .. n-1));
    ensures memcmp((char *)\old(dest), (char *)\old(src), \old(n)) ≡ 0;
    ensures \result ≡ \old(dest);
    assigns *((char *)dest+(0 .. n-1)), \result;
    assigns *((char *)dest+(0 .. n-1)) \from *((char *)src+(0 .. n-1));
    assigns \result \from dest;
 */
extern void *memmove(void *dest, void const *src, size_t n);

/* No specification of full semantics, but probably better to leave
 * that out for now. */
/*@ requires \valid((char *)s+(0 .. n-1));
    ensures \result ≡ \old(s);
    assigns *((char *)s+(0 .. n-1)), \result;
    assigns *((char *)s+(0 .. n-1)) \from c;
    assigns \result \from s;
 */
/* void *memset(void *s, int c, size_t n) { return (void*)0; } */
/* Special cases for the different types at which `memset` is called */
void *memset_BIGNUM(BIGNUM *s, int c, size_t n) { return (void*)0; }
void *memset_unsigned_long(unsigned long *s, int c, size_t n) { return (void*)0; }

/*@ requires valid_string_src: valid_string(s);
    ensures \result ≡ strlen(\old(s));
    assigns \result;
    assigns \result \from *(s+(0 ..));
 */
extern size_t strlen(char const *s);

/*@ requires valid_string_src: valid_string(s1);
    requires valid_string_src: valid_string(s2);
    ensures \result ≡ strcmp(\old(s1), \old(s2));
    assigns \result;
    assigns \result \from *(s1+(0 ..)), *(s2+(0 ..));
 */
extern int strcmp(char const *s1, char const *s2);

/*@ requires valid_string_src: valid_string(s1);
    requires valid_string_src: valid_string(s2);
    ensures \result ≡ strncmp(\old(s1), \old(s2), \old(n));
    assigns \result;
    assigns \result \from *(s1+(0 .. n-1)), *(s2+(0 .. n-1));
 */
extern int strncmp(char const *s1, char const *s2, size_t n);

/*@ requires valid_string(s1) ∧ valid_string(s2);
    assigns \nothing; */
extern int strcoll(char const *s1, char const *s2);

/*@ requires valid_string_src: valid_string(s);
    assigns \result;
    assigns \result \from s, *(s+(0 ..)), c;
    
    behavior found:
      assumes strchr(s, c) ≡ \true;
      ensures (int)*\result ≡ \old(c);
      ensures \base_addr(\result) ≡ \base_addr(\old(s));
      ensures \old(s) ≤ \result ∧ \result < \old(s)+strlen(\old(s));
      ensures valid_string(\result);
      ensures
        ∀ char *p; \old(s) ≤ p ∧ p < \result ⇒ (int)*p ≢ \old(c);
    
    behavior not_found:
      assumes ¬(strchr(s, c) ≡ \true);
      ensures \result ≡ \null;
    
    behavior default:
      ensures
        \result ≡ \null ∨ \base_addr(\result) ≡ \base_addr(\old(s));
 */
extern char *strchr(char const *s, int c);

/*@ requires valid_string_src: valid_string(s);
    assigns \result;
    assigns \result \from s, *(s+(0 ..)), c;
    
    behavior found:
      assumes strchr(s, c) ≡ \true;
      ensures (int)*\result ≡ \old(c);
      ensures \base_addr(\result) ≡ \base_addr(\old(s));
      ensures valid_string(\result);
    
    behavior not_found:
      assumes ¬(strchr(s, c) ≡ \true);
      ensures \result ≡ \null;
    
    behavior default:
      ensures
        \result ≡ \null ∨ \base_addr(\result) ≡ \base_addr(\old(s));
 */
extern char *strrchr(char const *s, int c);

/*@ requires valid_string(s) ∧ valid_string(reject);
    ensures 0 ≤ \result ∧ \result ≤ strlen(\old(s));
    assigns \nothing;
 */
extern size_t strcspn(char const *s, char const *reject);

/*@ requires valid_string(s) ∧ valid_string(accept);
    ensures 0 ≤ \result ∧ \result ≤ strlen(\old(s));
    assigns \nothing;
 */
extern size_t strspn(char const *s, char const *accept);

/*@ requires valid_string(s) ∧ valid_string(accept);
    ensures
      \result ≡ (char *)0 ∨ \base_addr(\result) ≡ \base_addr(\old(s));
    assigns \nothing;
 */
extern char *strpbrk(char const *s, char const *accept);

/*@ requires valid_string(haystack) ∧ valid_string(needle);
    ensures
      \result ≡ (char *)0 ∨
      (\base_addr(\result) ≡ \base_addr(\old(haystack)) ∧
       memcmp(\result, \old(needle), strlen(\old(needle))) ≡ 0);
    assigns \result;
    assigns \result
      \from haystack, *(haystack+(0 ..)), needle, *(needle+(0 ..));
 */
extern char *strstr(char const *haystack, char const *needle);

/*@ requires (valid_string(s) ∨ s ≡ \null) ∧ valid_string(delim);
    assigns \nothing;
 */
extern char *strtok(char *s, char const *delim);

/*@ requires
      (\valid(stringp) ∧ valid_string(*stringp)) ∧ valid_string(delim);
    assigns *stringp, \result;
    assigns *stringp \from *(delim+(..)), *(*(stringp+(..)));
    assigns \result \from *(delim+(..)), *(*(stringp+(..)));
 */
extern char *strsep(char **stringp, char const *delim);

/*@ ensures valid_string(\result);
    assigns \result;
    assigns \result \from errnum;
 */
extern char *strerror(int errnum);

/*@ requires valid_string_src: valid_string(src);
    requires room_string: \valid(dest+(0 .. strlen(src)));
    ensures strcmp(\old(dest), \old(src)) ≡ 0;
    ensures \result ≡ \old(dest);
    assigns *(dest+(0 .. strlen{Old}(src))), \result;
    assigns *(dest+(0 .. strlen{Old}(src)))
      \from *(src+(0 .. strlen{Old}(src)));
    assigns \result \from dest;
 */
extern char *strcpy(char *dest, char const *src);

/*@ requires valid_string_src: valid_string(src);
    ensures \result ≡ \old(dest);
    assigns *(dest+(0 .. n-1));
    
    behavior complete:
      assumes strlen(src) < n;
      ensures strcmp(\old(dest), \old(src)) ≡ 0;
      assigns *(dest+(0 .. n-1));
    
    behavior partial:
      assumes n ≤ strlen(src);
      ensures memcmp(\old(dest), \old(src), \old(n)) ≡ 0;
      assigns *(dest+(0 .. n-1));
 */
extern char *strncpy(char *dest, char const *src, size_t n);

/*@ requires valid_string_src: valid_string(src);
    requires valid_string_dst: valid_string(dest);
    requires room_string: \valid(dest+(0 .. strlen(dest)+strlen(src)));
    ensures strlen(\old(dest)) ≡ \old(strlen(dest)+strlen(src));
    ensures \result ≡ \old(dest);
    assigns *(dest+(strlen{Old}(dest) .. strlen{Old}(dest)+strlen{Old}(src))),
            \result;
    assigns *(dest+(strlen{Old}(dest) .. strlen{Old}(dest)+strlen{Old}(src)))
      \from *(src+(0 .. strlen{Old}(src)));
    assigns \result \from dest;
 */
extern char *strcat(char *dest, char const *src);

/*@ requires valid_string_src: valid_string(src) ∨ \valid(src+(0 .. n-1));
    requires valid_string_dst: valid_string(dest);
    requires room_string: \valid(dest+(strlen(dest) .. strlen(dest)+n));
    ensures \result ≡ \old(dest);
    assigns *(dest+(strlen{Old}(dest) .. strlen{Old}(dest)+n));
    assigns *(dest+(strlen{Old}(dest) .. strlen{Old}(dest)+n))
      \from *(src+(0 .. n));
    
    behavior complete:
      assumes valid_string(src) ∧ strlen(src) ≤ n;
      ensures strlen(\old(dest)) ≡ \old(strlen(dest)+strlen(src));
      assigns *(dest+(strlen{Old}(dest) .. strlen{Old}(dest)+strlen{Old}(src)));
      assigns
      *(dest+(strlen{Old}(dest) .. strlen{Old}(dest)+strlen{Old}(src)))
        \from *(src+(0 .. strlen{Old}(src)));
    
    behavior partial:
      assumes ¬(valid_string(src) ∧ strlen(src) ≤ n);
      ensures strlen(\old(dest)) ≡ \old(strlen(dest))+\old(n);
 */
extern char *strncat(char *dest, char const *src, size_t n);

/*@ requires \valid(dest+(0 .. n-1));
    requires valid_string_src: valid_string(src);
    assigns *(dest+(0 .. n-1));
 */
extern size_t strxfrm(char *dest, char const *src, size_t n);

/*@ requires valid_string_src: valid_string(s);
    ensures
      \valid(\result+(0 .. strlen(\old(s)))) ∧
      strcmp(\result, \old(s)) ≡ 0;
    assigns \nothing;
 */
extern char *strdup(char const *s);

/*@ requires valid_string_src: valid_string(s);
    ensures
      ((\valid(\result+(0 .. minimum(strlen(\old(s)), \old(n)))) ∧
        valid_string(\result))
       ∧ strlen(\result) ≤ \old(n))
      ∧ strncmp(\result, \old(s), \old(n)) ≡ 0;
    assigns \nothing;
 */
extern char *strndup(char const *s, size_t n);

/*@ assigns *fdset;
    assigns *fdset \from *fdset, fd; */
extern void FD_CLR(int fd, fd_set *fdset);

/*@ assigns \nothing; */
extern int FD_ISSET(int fd, fd_set *fdset);

/*@ assigns *fdset;
    assigns *fdset \from *fdset, fd; */
extern void FD_SET(int fd, fd_set *fdset);

/*@ assigns *fdset;
    assigns *fdset \from \nothing; */
extern void FD_ZERO(fd_set *fdset);

/*@ assigns \nothing; */
extern clock_t clock(void);

/*@ assigns \result;
    assigns \result \from time1, time0; */
extern double difftime(time_t time1, time_t time0);

/*@ assigns *timeptr, \result;
    assigns *timeptr \from *timeptr;
    assigns \result \from *timeptr;
 */
extern time_t mktime(struct tm *timeptr);

/*@ assigns *timer, \result;
    assigns *timer \from \nothing;
    assigns \result \from \nothing;
 */
extern time_t time(time_t *timer);

struct tm __fc_time_tm;
struct tm * const __fc_time_tm_ptr = & __fc_time_tm;
/*@ ensures \result ≡ &__fc_time_tm ∨ \result ≡ \null;
    assigns \result, __fc_time_tm;
    assigns \result \from __fc_time_tm_ptr;
    assigns __fc_time_tm \from *timer;
 */
extern struct tm *gmtime(time_t const *timer);

/*@ ensures \result ≡ &__fc_time_tm ∨ \result ≡ \null;
    assigns \result, __fc_time_tm;
    assigns \result \from __fc_time_tm_ptr;
    assigns __fc_time_tm \from *timer;
 */
extern struct tm *localtime(time_t const *timer);

extern char *optarg;

extern int optind;

extern int opterr;

extern int optopt;

/*@ assigns \result, *optarg, optind, opterr, optopt;
    assigns \result \from argc, *(argv+(0 .. argc-1)), *(optstring+(0 ..));
    assigns *optarg \from argc, *(argv+(0 .. argc-1)), *(optstring+(0 ..));
    assigns optind \from argc, *(argv+(0 .. argc-1)), *(optstring+(0 ..));
    assigns opterr \from argc, *(argv+(0 .. argc-1)), *(optstring+(0 ..));
    assigns optopt \from argc, *(argv+(0 .. argc-1)), *(optstring+(0 ..));
 */
extern int getopt(int argc, char * const *argv, char const *optstring);

/*@ assigns \result, *optarg, optind, opterr, optopt,
            *((longopts+(0 ..))->flag);
    assigns \result
      \from argc, *(argv+(0 .. argc-1)), *(shortopts+(0 ..)),
            *(longopts+(0 ..));
    assigns *optarg
      \from argc, *(argv+(0 .. argc-1)), *(shortopts+(0 ..)),
            *(longopts+(0 ..));
    assigns optind
      \from argc, *(argv+(0 .. argc-1)), *(shortopts+(0 ..)),
            *(longopts+(0 ..));
    assigns opterr
      \from argc, *(argv+(0 .. argc-1)), *(shortopts+(0 ..)),
            *(longopts+(0 ..));
    assigns optopt
      \from argc, *(argv+(0 .. argc-1)), *(shortopts+(0 ..)),
            *(longopts+(0 ..));
    assigns *((longopts+(0 ..))->flag)
      \from argc, *(argv+(0 .. argc-1)), *(shortopts+(0 ..)),
            *(longopts+(0 ..));
 */
extern int getopt_long(int argc, char * const *argv, char const *shortopts,
                       struct option const *longopts, int *longind);

/*@ assigns \result, *optarg, optind, opterr, optopt,
            *((longopts+(0 ..))->flag);
    assigns \result
      \from argc, *(argv+(0 .. argc-1)), *(shortopts+(0 ..)),
            *(longopts+(0 ..));
    assigns *optarg
      \from argc, *(argv+(0 .. argc-1)), *(shortopts+(0 ..)),
            *(longopts+(0 ..));
    assigns optind
      \from argc, *(argv+(0 .. argc-1)), *(shortopts+(0 ..)),
            *(longopts+(0 ..));
    assigns opterr
      \from argc, *(argv+(0 .. argc-1)), *(shortopts+(0 ..)),
            *(longopts+(0 ..));
    assigns optopt
      \from argc, *(argv+(0 .. argc-1)), *(shortopts+(0 ..)),
            *(longopts+(0 ..));
    assigns *((longopts+(0 ..))->flag)
      \from argc, *(argv+(0 .. argc-1)), *(shortopts+(0 ..)),
            *(longopts+(0 ..));
 */
extern int getopt_long_only(int argc, char * const *argv,
                            char const *shortopts,
                            struct option const *longopts, int *longind);


/* No specification of full semantics, but probably better to leave
 * that out for now. */
/*@ requires \valid_read(file);
    ensures \true;
    assigns \nothing;
 */
void ERR_put_error(int lib, int func, int reason, char const *file,
                          int line) { return; }

int BN_sub(BIGNUM *r, BIGNUM const *a, BIGNUM const *b);

int BN_usub(BIGNUM *r, BIGNUM const *a, BIGNUM const *b);

int BN_uadd(BIGNUM *r, BIGNUM const *a, BIGNUM const *b);

int BN_add(BIGNUM *r, BIGNUM const *a, BIGNUM const *b);

int BN_ucmp(BIGNUM const *a, BIGNUM const *b);

BIGNUM *bn_expand2(BIGNUM *b, int words);

unsigned long bn_add_words(unsigned long *r, unsigned long const *a,
                           unsigned long const *b, int n);

int BN_add(BIGNUM *r, BIGNUM const *a, BIGNUM const *b)
{
  int __retres;
  BIGNUM const *tmp;
  int a_neg;
  int ret;
  a_neg = a->neg;
  if (a_neg ^ b->neg) {
    int tmp_2;
    if (a_neg) {
      tmp = a;
      a = b;
      b = tmp;
    }
    tmp_2 = BN_ucmp(a,b);
    if (tmp_2 < 0) {
      int tmp_0;
      tmp_0 = BN_usub(r,b,a);
      if (! tmp_0) {
        __retres = 0;
        goto return_label;
      }
      r->neg = 1;
    }
    else {
      int tmp_1;
      tmp_1 = BN_usub(r,a,b);
      if (! tmp_1) {
        __retres = 0;
        goto return_label;
      }
      r->neg = 0;
    }
    __retres = 1;
    goto return_label;
  }
  ret = BN_uadd(r,a,b);
  r->neg = a_neg;
  __retres = ret;
  return_label: return __retres;
}

int BN_uadd(BIGNUM *r, BIGNUM const *a, BIGNUM const *b)
{
  int __retres;
  int max;
  int min;
  int dif;
  unsigned long *ap;
  unsigned long *bp;
  unsigned long *rp;
  unsigned long carry;
  unsigned long t1;
  unsigned long t2;
  BIGNUM const *tmp;
  BIGNUM *tmp_1;
  if (a->top < b->top) {
    tmp = a;
    a = b;
    b = tmp;
  }
  max = a->top;
  min = b->top;
  dif = max - min;
  if (max + 1 <= r->dmax) tmp_1 = r; else tmp_1 = bn_expand2(r,max + 1);
  if (tmp_1 == (void *)0) {
    __retres = 0;
    goto return_label;
  }
  r->top = max;
  ap = a->d;
  bp = b->d;
  rp = r->d;
  carry = bn_add_words(rp,(unsigned long const *)ap,
                       (unsigned long const *)bp,min);
  rp += min;
  ap += min;
  bp += min;
  if (carry) {
    while (dif) {
      unsigned long *tmp_2;
      unsigned long *tmp_3;
      dif --;
      {
        /*sequence*/
        tmp_2 = ap;
        ap ++;
        t1 = *tmp_2;
      }
      t2 = (t1 + (unsigned long)1) & 0xffffffffffffffffL;
      {
        /*sequence*/
        tmp_3 = rp;
        rp ++;
        *tmp_3 = t2;
      }
      if (t2) {
        carry = (unsigned long)0;
        break;
      }
    }
    if (carry) {
      *rp = (unsigned long)1;
      (r->top) ++;
    }
  }
  if (dif) 
    if (rp != ap) 
      while (1) {
        int tmp_6;
        unsigned long *tmp_4;
        unsigned long *tmp_5;
        {
          /*sequence*/
          tmp_6 = dif;
          dif --;
          ;
        }
        if (! tmp_6) break;
        {
          /*sequence*/
          tmp_4 = rp;
          rp ++;
          tmp_5 = ap;
          ap ++;
          *tmp_4 = *tmp_5;
        }
      }
  r->neg = 0;
  __retres = 1;
  return_label: return __retres;
}

int BN_usub(BIGNUM *r, BIGNUM const *a, BIGNUM const *b)
{
  int __retres;
  int max;
  int min;
  int dif;
  register unsigned long t1;
  register unsigned long t2;
  register unsigned long *ap;
  register unsigned long *bp;
  register unsigned long *rp;
  int i;
  int carry;
  BIGNUM *tmp_0;
  max = a->top;
  min = b->top;
  dif = max - min;
  if (dif < 0) {
    ERR_put_error(3,115,100,"crypto/bn/bn_add.c",184);
    __retres = 0;
    goto return_label;
  }
  if (max <= r->dmax) tmp_0 = r; else tmp_0 = bn_expand2(r,max);
  if (tmp_0 == (void *)0) {
    __retres = 0;
    goto return_label;
  }
  ap = a->d;
  bp = b->d;
  rp = r->d;
  carry = 0;
  i = min;
  while (i != 0) {
    {
      unsigned long *tmp_1;
      unsigned long *tmp_2;
      unsigned long *tmp_3;
      {
        /*sequence*/
        tmp_1 = ap;
        ap ++;
        t1 = *tmp_1;
      }
      {
        /*sequence*/
        tmp_2 = bp;
        bp ++;
        t2 = *tmp_2;
      }
      if (carry) {
        carry = t1 <= t2;
        t1 = ((t1 - t2) - (unsigned long)1) & 0xffffffffffffffffL;
      }
      else {
        carry = t1 < t2;
        t1 = (t1 - t2) & 0xffffffffffffffffL;
      }
      {
        /*sequence*/
        tmp_3 = rp;
        rp ++;
        *tmp_3 = t1 & 0xffffffffffffffffL;
      }
    }
    i --;
  }
  if (carry) {
    if (! dif) {
      __retres = 0;
      goto return_label;
    }
    while (dif) {
      unsigned long *tmp_4;
      unsigned long *tmp_5;
      dif --;
      {
        /*sequence*/
        tmp_4 = ap;
        ap ++;
        t1 = *tmp_4;
      }
      t2 = (t1 - (unsigned long)1) & 0xffffffffffffffffL;
      {
        /*sequence*/
        tmp_5 = rp;
        rp ++;
        *tmp_5 = t2;
      }
      if (t1) break;
    }
  }
  if (rp != ap) 
    while (1) {
      int tmp_6;
      int tmp_7;
      int tmp_8;
      int tmp_9;
      {
        /*sequence*/
        tmp_6 = dif;
        dif --;
        ;
      }
      if (! tmp_6) break;
      *(rp + 0) = *(ap + 0);
      {
        /*sequence*/
        tmp_7 = dif;
        dif --;
        ;
      }
      if (! tmp_7) break;
      *(rp + 1) = *(ap + 1);
      {
        /*sequence*/
        tmp_8 = dif;
        dif --;
        ;
      }
      if (! tmp_8) break;
      *(rp + 2) = *(ap + 2);
      {
        /*sequence*/
        tmp_9 = dif;
        dif --;
        ;
      }
      if (! tmp_9) break;
      *(rp + 3) = *(ap + 3);
      rp += 4;
      ap += 4;
    }
  r->top = max;
  r->neg = 0;
  {
    unsigned long *ftl;
    int tmp_top;
    tmp_top = r->top;
    if (tmp_top > 0) {
      ftl = r->d + (tmp_top - 1);
      while (tmp_top > 0) {
        unsigned long *tmp_10;
        {
          /*sequence*/
          tmp_10 = ftl;
          ftl --;
          ;
        }
        if (*tmp_10) break;
        tmp_top --;
      }
      r->top = tmp_top;
    }
  }
  __retres = 1;
  return_label: return __retres;
}

int BN_sub(BIGNUM *r, BIGNUM const *a, BIGNUM const *b)
{
  int __retres;
  int max;
  int add;
  int neg;
  BIGNUM const *tmp;
  BIGNUM *tmp_2;
  int tmp_5;
  add = 0;
  neg = 0;
  if (a->neg) 
    if (b->neg) {
      tmp = a;
      a = b;
      b = tmp;
    }
    else {
      add = 1;
      neg = 1;
    }
  else 
    if (b->neg) {
      add = 1;
      neg = 0;
    }
  if (add) {
    int tmp_0;
    tmp_0 = BN_uadd(r,a,b);
    if (! tmp_0) {
      __retres = 0;
      goto return_label;
    }
    r->neg = neg;
    __retres = 1;
    goto return_label;
  }
  if (a->top > b->top) max = a->top; else max = b->top;
  if (max <= r->dmax) tmp_2 = r; else tmp_2 = bn_expand2(r,max);
  if (tmp_2 == (void *)0) {
    __retres = 0;
    goto return_label;
  }
  tmp_5 = BN_ucmp(a,b);
  if (tmp_5 < 0) {
    int tmp_3;
    tmp_3 = BN_usub(r,b,a);
    if (! tmp_3) {
      __retres = 0;
      goto return_label;
    }
    r->neg = 1;
  }
  else {
    int tmp_4;
    tmp_4 = BN_usub(r,a,b);
    if (! tmp_4) {
      __retres = 0;
      goto return_label;
    }
    r->neg = 0;
  }
  __retres = 1;
  return_label: return __retres;
}

/*@ terminates \false;
    assigns \nothing; */
extern void __FC_assert(char const *file, int line, char const *expr);

int BN_num_bits_word(unsigned long l);

unsigned long bn_mul_add_words(unsigned long *rp, unsigned long const *ap,
                               int num, unsigned long w);

unsigned long bn_mul_words(unsigned long *rp, unsigned long const *ap,
                           int num, unsigned long w);

void bn_sqr_words(unsigned long *r, unsigned long const *a, int n);

unsigned long bn_div_words(unsigned long h, unsigned long l, unsigned long d);

unsigned long bn_sub_words(unsigned long *r, unsigned long const *a,
                           unsigned long const *b, int n);

void bn_mul_comba8(unsigned long *r, unsigned long *a, unsigned long *b);

void bn_mul_comba4(unsigned long *r, unsigned long *a, unsigned long *b);

void bn_sqr_comba8(unsigned long *r, unsigned long const *a);

void bn_sqr_comba4(unsigned long *r, unsigned long const *a);

int bn_mul_mont(unsigned long *rp, unsigned long const *ap,
                unsigned long const *bp, unsigned long const *np,
                unsigned long const *n0, int num);

unsigned long bn_mul_add_words(unsigned long *rp, unsigned long const *ap,
                               int num, unsigned long w)
{
  unsigned long __retres;
  unsigned long c;
  unsigned long bl;
  unsigned long bh;
  c = (unsigned long)0;
  if (num <= 0) {
    __retres = (unsigned long)0;
    goto return_label;
  }
  bl = w & (unsigned long)0xffffffffL;
  bh = (w >> 32) & (unsigned long)0xffffffffL;
  while (num & ~ 3) {
    {
      unsigned long l;
      unsigned long h;
      h = *(ap + 0);
      l = h & (unsigned long)0xffffffffL;
      h = (h >> 32) & (unsigned long)0xffffffffL;
      {
        unsigned long m;
        unsigned long m1;
        unsigned long lt;
        unsigned long ht;
        lt = l;
        ht = h;
        m = bh * lt;
        lt = bl * lt;
        m1 = bl * ht;
        ht = bh * ht;
        m = (m + m1) & 0xffffffffffffffffL;
        if (m < m1) ht += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
        ht += (m >> 32) & (unsigned long)0xffffffffL;
        m1 = (m << 32) & 0xffffffffffffffffL;
        lt = (lt + m1) & 0xffffffffffffffffL;
        if (lt < m1) ht ++;
        l = lt;
        h = ht;
      }
      l = (l + c) & 0xffffffffffffffffL;
      if (l < c) h ++;
      c = *(rp + 0);
      l = (l + c) & 0xffffffffffffffffL;
      if (l < c) h ++;
      c = h & 0xffffffffffffffffL;
      *(rp + 0) = l;
    }
    {
      unsigned long l_0;
      unsigned long h_0;
      h_0 = *(ap + 1);
      l_0 = h_0 & (unsigned long)0xffffffffL;
      h_0 = (h_0 >> 32) & (unsigned long)0xffffffffL;
      {
        unsigned long m_0;
        unsigned long m1_0;
        unsigned long lt_0;
        unsigned long ht_0;
        lt_0 = l_0;
        ht_0 = h_0;
        m_0 = bh * lt_0;
        lt_0 = bl * lt_0;
        m1_0 = bl * ht_0;
        ht_0 = bh * ht_0;
        m_0 = (m_0 + m1_0) & 0xffffffffffffffffL;
        if (m_0 < m1_0) ht_0 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
        ht_0 += (m_0 >> 32) & (unsigned long)0xffffffffL;
        m1_0 = (m_0 << 32) & 0xffffffffffffffffL;
        lt_0 = (lt_0 + m1_0) & 0xffffffffffffffffL;
        if (lt_0 < m1_0) ht_0 ++;
        l_0 = lt_0;
        h_0 = ht_0;
      }
      l_0 = (l_0 + c) & 0xffffffffffffffffL;
      if (l_0 < c) h_0 ++;
      c = *(rp + 1);
      l_0 = (l_0 + c) & 0xffffffffffffffffL;
      if (l_0 < c) h_0 ++;
      c = h_0 & 0xffffffffffffffffL;
      *(rp + 1) = l_0;
    }
    {
      unsigned long l_1;
      unsigned long h_1;
      h_1 = *(ap + 2);
      l_1 = h_1 & (unsigned long)0xffffffffL;
      h_1 = (h_1 >> 32) & (unsigned long)0xffffffffL;
      {
        unsigned long m_1;
        unsigned long m1_1;
        unsigned long lt_1;
        unsigned long ht_1;
        lt_1 = l_1;
        ht_1 = h_1;
        m_1 = bh * lt_1;
        lt_1 = bl * lt_1;
        m1_1 = bl * ht_1;
        ht_1 = bh * ht_1;
        m_1 = (m_1 + m1_1) & 0xffffffffffffffffL;
        if (m_1 < m1_1) ht_1 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
        ht_1 += (m_1 >> 32) & (unsigned long)0xffffffffL;
        m1_1 = (m_1 << 32) & 0xffffffffffffffffL;
        lt_1 = (lt_1 + m1_1) & 0xffffffffffffffffL;
        if (lt_1 < m1_1) ht_1 ++;
        l_1 = lt_1;
        h_1 = ht_1;
      }
      l_1 = (l_1 + c) & 0xffffffffffffffffL;
      if (l_1 < c) h_1 ++;
      c = *(rp + 2);
      l_1 = (l_1 + c) & 0xffffffffffffffffL;
      if (l_1 < c) h_1 ++;
      c = h_1 & 0xffffffffffffffffL;
      *(rp + 2) = l_1;
    }
    {
      unsigned long l_2;
      unsigned long h_2;
      h_2 = *(ap + 3);
      l_2 = h_2 & (unsigned long)0xffffffffL;
      h_2 = (h_2 >> 32) & (unsigned long)0xffffffffL;
      {
        unsigned long m_2;
        unsigned long m1_2;
        unsigned long lt_2;
        unsigned long ht_2;
        lt_2 = l_2;
        ht_2 = h_2;
        m_2 = bh * lt_2;
        lt_2 = bl * lt_2;
        m1_2 = bl * ht_2;
        ht_2 = bh * ht_2;
        m_2 = (m_2 + m1_2) & 0xffffffffffffffffL;
        if (m_2 < m1_2) ht_2 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
        ht_2 += (m_2 >> 32) & (unsigned long)0xffffffffL;
        m1_2 = (m_2 << 32) & 0xffffffffffffffffL;
        lt_2 = (lt_2 + m1_2) & 0xffffffffffffffffL;
        if (lt_2 < m1_2) ht_2 ++;
        l_2 = lt_2;
        h_2 = ht_2;
      }
      l_2 = (l_2 + c) & 0xffffffffffffffffL;
      if (l_2 < c) h_2 ++;
      c = *(rp + 3);
      l_2 = (l_2 + c) & 0xffffffffffffffffL;
      if (l_2 < c) h_2 ++;
      c = h_2 & 0xffffffffffffffffL;
      *(rp + 3) = l_2;
    }
    ap += 4;
    rp += 4;
    num -= 4;
  }
  while (num) {
    {
      unsigned long l_3;
      unsigned long h_3;
      h_3 = *(ap + 0);
      l_3 = h_3 & (unsigned long)0xffffffffL;
      h_3 = (h_3 >> 32) & (unsigned long)0xffffffffL;
      {
        unsigned long m_3;
        unsigned long m1_3;
        unsigned long lt_3;
        unsigned long ht_3;
        lt_3 = l_3;
        ht_3 = h_3;
        m_3 = bh * lt_3;
        lt_3 = bl * lt_3;
        m1_3 = bl * ht_3;
        ht_3 = bh * ht_3;
        m_3 = (m_3 + m1_3) & 0xffffffffffffffffL;
        if (m_3 < m1_3) ht_3 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
        ht_3 += (m_3 >> 32) & (unsigned long)0xffffffffL;
        m1_3 = (m_3 << 32) & 0xffffffffffffffffL;
        lt_3 = (lt_3 + m1_3) & 0xffffffffffffffffL;
        if (lt_3 < m1_3) ht_3 ++;
        l_3 = lt_3;
        h_3 = ht_3;
      }
      l_3 = (l_3 + c) & 0xffffffffffffffffL;
      if (l_3 < c) h_3 ++;
      c = *(rp + 0);
      l_3 = (l_3 + c) & 0xffffffffffffffffL;
      if (l_3 < c) h_3 ++;
      c = h_3 & 0xffffffffffffffffL;
      *(rp + 0) = l_3;
    }
    ap ++;
    rp ++;
    num --;
  }
  __retres = c;
  return_label: return __retres;
}

unsigned long bn_mul_words(unsigned long *rp, unsigned long const *ap,
                           int num, unsigned long w)
{
  unsigned long __retres;
  unsigned long carry;
  unsigned long bl;
  unsigned long bh;
  carry = (unsigned long)0;
  if (num <= 0) {
    __retres = (unsigned long)0;
    goto return_label;
  }
  bl = w & (unsigned long)0xffffffffL;
  bh = (w >> 32) & (unsigned long)0xffffffffL;
  while (num & ~ 3) {
    {
      unsigned long l;
      unsigned long h;
      h = *(ap + 0);
      l = h & (unsigned long)0xffffffffL;
      h = (h >> 32) & (unsigned long)0xffffffffL;
      {
        unsigned long m;
        unsigned long m1;
        unsigned long lt;
        unsigned long ht;
        lt = l;
        ht = h;
        m = bh * lt;
        lt = bl * lt;
        m1 = bl * ht;
        ht = bh * ht;
        m = (m + m1) & 0xffffffffffffffffL;
        if (m < m1) ht += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
        ht += (m >> 32) & (unsigned long)0xffffffffL;
        m1 = (m << 32) & 0xffffffffffffffffL;
        lt = (lt + m1) & 0xffffffffffffffffL;
        if (lt < m1) ht ++;
        l = lt;
        h = ht;
      }
      l += carry;
      if ((l & 0xffffffffffffffffL) < carry) h ++;
      carry = h & 0xffffffffffffffffL;
      *(rp + 0) = l & 0xffffffffffffffffL;
    }
    {
      unsigned long l_0;
      unsigned long h_0;
      h_0 = *(ap + 1);
      l_0 = h_0 & (unsigned long)0xffffffffL;
      h_0 = (h_0 >> 32) & (unsigned long)0xffffffffL;
      {
        unsigned long m_0;
        unsigned long m1_0;
        unsigned long lt_0;
        unsigned long ht_0;
        lt_0 = l_0;
        ht_0 = h_0;
        m_0 = bh * lt_0;
        lt_0 = bl * lt_0;
        m1_0 = bl * ht_0;
        ht_0 = bh * ht_0;
        m_0 = (m_0 + m1_0) & 0xffffffffffffffffL;
        if (m_0 < m1_0) ht_0 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
        ht_0 += (m_0 >> 32) & (unsigned long)0xffffffffL;
        m1_0 = (m_0 << 32) & 0xffffffffffffffffL;
        lt_0 = (lt_0 + m1_0) & 0xffffffffffffffffL;
        if (lt_0 < m1_0) ht_0 ++;
        l_0 = lt_0;
        h_0 = ht_0;
      }
      l_0 += carry;
      if ((l_0 & 0xffffffffffffffffL) < carry) h_0 ++;
      carry = h_0 & 0xffffffffffffffffL;
      *(rp + 1) = l_0 & 0xffffffffffffffffL;
    }
    {
      unsigned long l_1;
      unsigned long h_1;
      h_1 = *(ap + 2);
      l_1 = h_1 & (unsigned long)0xffffffffL;
      h_1 = (h_1 >> 32) & (unsigned long)0xffffffffL;
      {
        unsigned long m_1;
        unsigned long m1_1;
        unsigned long lt_1;
        unsigned long ht_1;
        lt_1 = l_1;
        ht_1 = h_1;
        m_1 = bh * lt_1;
        lt_1 = bl * lt_1;
        m1_1 = bl * ht_1;
        ht_1 = bh * ht_1;
        m_1 = (m_1 + m1_1) & 0xffffffffffffffffL;
        if (m_1 < m1_1) ht_1 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
        ht_1 += (m_1 >> 32) & (unsigned long)0xffffffffL;
        m1_1 = (m_1 << 32) & 0xffffffffffffffffL;
        lt_1 = (lt_1 + m1_1) & 0xffffffffffffffffL;
        if (lt_1 < m1_1) ht_1 ++;
        l_1 = lt_1;
        h_1 = ht_1;
      }
      l_1 += carry;
      if ((l_1 & 0xffffffffffffffffL) < carry) h_1 ++;
      carry = h_1 & 0xffffffffffffffffL;
      *(rp + 2) = l_1 & 0xffffffffffffffffL;
    }
    {
      unsigned long l_2;
      unsigned long h_2;
      h_2 = *(ap + 3);
      l_2 = h_2 & (unsigned long)0xffffffffL;
      h_2 = (h_2 >> 32) & (unsigned long)0xffffffffL;
      {
        unsigned long m_2;
        unsigned long m1_2;
        unsigned long lt_2;
        unsigned long ht_2;
        lt_2 = l_2;
        ht_2 = h_2;
        m_2 = bh * lt_2;
        lt_2 = bl * lt_2;
        m1_2 = bl * ht_2;
        ht_2 = bh * ht_2;
        m_2 = (m_2 + m1_2) & 0xffffffffffffffffL;
        if (m_2 < m1_2) ht_2 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
        ht_2 += (m_2 >> 32) & (unsigned long)0xffffffffL;
        m1_2 = (m_2 << 32) & 0xffffffffffffffffL;
        lt_2 = (lt_2 + m1_2) & 0xffffffffffffffffL;
        if (lt_2 < m1_2) ht_2 ++;
        l_2 = lt_2;
        h_2 = ht_2;
      }
      l_2 += carry;
      if ((l_2 & 0xffffffffffffffffL) < carry) h_2 ++;
      carry = h_2 & 0xffffffffffffffffL;
      *(rp + 3) = l_2 & 0xffffffffffffffffL;
    }
    ap += 4;
    rp += 4;
    num -= 4;
  }
  while (num) {
    {
      unsigned long l_3;
      unsigned long h_3;
      h_3 = *(ap + 0);
      l_3 = h_3 & (unsigned long)0xffffffffL;
      h_3 = (h_3 >> 32) & (unsigned long)0xffffffffL;
      {
        unsigned long m_3;
        unsigned long m1_3;
        unsigned long lt_3;
        unsigned long ht_3;
        lt_3 = l_3;
        ht_3 = h_3;
        m_3 = bh * lt_3;
        lt_3 = bl * lt_3;
        m1_3 = bl * ht_3;
        ht_3 = bh * ht_3;
        m_3 = (m_3 + m1_3) & 0xffffffffffffffffL;
        if (m_3 < m1_3) ht_3 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
        ht_3 += (m_3 >> 32) & (unsigned long)0xffffffffL;
        m1_3 = (m_3 << 32) & 0xffffffffffffffffL;
        lt_3 = (lt_3 + m1_3) & 0xffffffffffffffffL;
        if (lt_3 < m1_3) ht_3 ++;
        l_3 = lt_3;
        h_3 = ht_3;
      }
      l_3 += carry;
      if ((l_3 & 0xffffffffffffffffL) < carry) h_3 ++;
      carry = h_3 & 0xffffffffffffffffL;
      *(rp + 0) = l_3 & 0xffffffffffffffffL;
    }
    ap ++;
    rp ++;
    num --;
  }
  __retres = carry;
  return_label: return __retres;
}

void bn_sqr_words(unsigned long *r, unsigned long const *a, int n)
{
  if (n <= 0) goto return_label;
  while (n & ~ 3) {
    {
      unsigned long l;
      unsigned long h;
      unsigned long m;
      h = *(a + 0);
      l = h & (unsigned long)0xffffffffL;
      h = (h >> 32) & (unsigned long)0xffffffffL;
      m = l * h;
      l *= l;
      h *= h;
      h += (m & 0xffffffff80000000L) >> (32 - 1);
      m = (m & (unsigned long)0xffffffffL) << (32 + 1);
      l = (l + m) & 0xffffffffffffffffL;
      if (l < m) h ++;
      *(r + 0) = l;
      *(r + 1) = h;
    }
    {
      unsigned long l_0;
      unsigned long h_0;
      unsigned long m_0;
      h_0 = *(a + 1);
      l_0 = h_0 & (unsigned long)0xffffffffL;
      h_0 = (h_0 >> 32) & (unsigned long)0xffffffffL;
      m_0 = l_0 * h_0;
      l_0 *= l_0;
      h_0 *= h_0;
      h_0 += (m_0 & 0xffffffff80000000L) >> (32 - 1);
      m_0 = (m_0 & (unsigned long)0xffffffffL) << (32 + 1);
      l_0 = (l_0 + m_0) & 0xffffffffffffffffL;
      if (l_0 < m_0) h_0 ++;
      *(r + 2) = l_0;
      *(r + 3) = h_0;
    }
    {
      unsigned long l_1;
      unsigned long h_1;
      unsigned long m_1;
      h_1 = *(a + 2);
      l_1 = h_1 & (unsigned long)0xffffffffL;
      h_1 = (h_1 >> 32) & (unsigned long)0xffffffffL;
      m_1 = l_1 * h_1;
      l_1 *= l_1;
      h_1 *= h_1;
      h_1 += (m_1 & 0xffffffff80000000L) >> (32 - 1);
      m_1 = (m_1 & (unsigned long)0xffffffffL) << (32 + 1);
      l_1 = (l_1 + m_1) & 0xffffffffffffffffL;
      if (l_1 < m_1) h_1 ++;
      *(r + 4) = l_1;
      *(r + 5) = h_1;
    }
    {
      unsigned long l_2;
      unsigned long h_2;
      unsigned long m_2;
      h_2 = *(a + 3);
      l_2 = h_2 & (unsigned long)0xffffffffL;
      h_2 = (h_2 >> 32) & (unsigned long)0xffffffffL;
      m_2 = l_2 * h_2;
      l_2 *= l_2;
      h_2 *= h_2;
      h_2 += (m_2 & 0xffffffff80000000L) >> (32 - 1);
      m_2 = (m_2 & (unsigned long)0xffffffffL) << (32 + 1);
      l_2 = (l_2 + m_2) & 0xffffffffffffffffL;
      if (l_2 < m_2) h_2 ++;
      *(r + 6) = l_2;
      *(r + 7) = h_2;
    }
    a += 4;
    r += 8;
    n -= 4;
  }
  while (n) {
    {
      unsigned long l_3;
      unsigned long h_3;
      unsigned long m_3;
      h_3 = *(a + 0);
      l_3 = h_3 & (unsigned long)0xffffffffL;
      h_3 = (h_3 >> 32) & (unsigned long)0xffffffffL;
      m_3 = l_3 * h_3;
      l_3 *= l_3;
      h_3 *= h_3;
      h_3 += (m_3 & 0xffffffff80000000L) >> (32 - 1);
      m_3 = (m_3 & (unsigned long)0xffffffffL) << (32 + 1);
      l_3 = (l_3 + m_3) & 0xffffffffffffffffL;
      if (l_3 < m_3) h_3 ++;
      *(r + 0) = l_3;
      *(r + 1) = h_3;
    }
    a ++;
    r += 2;
    n --;
  }
  return_label: return;
}

unsigned long bn_div_words(unsigned long h, unsigned long l, unsigned long d)
{
  unsigned long __retres;
  unsigned long dh;
  unsigned long dl;
  unsigned long q;
  unsigned long ret;
  unsigned long th;
  unsigned long tl;
  unsigned long t;
  int i;
  int count;
  ret = (unsigned long)0;
  count = 2;
  if (d == (unsigned long)0) {
    __retres = 0xffffffffffffffffL;
    goto return_label;
  }
  i = BN_num_bits_word(d);
  i = 64 - i;
  if (h >= d) h -= d;
  if (i) {
    d <<= i;
    h = (h << i) | (l >> (64 - i));
    l <<= i;
  }
  dh = (d & 0xffffffff00000000L) >> 32;
  dl = d & (unsigned long)0xffffffffL;
  while (1) {
    if (h >> 32 == dh) q = (unsigned long)0xffffffffL; else q = h / dh;
    th = q * dh;
    tl = dl * q;
    while (1) {
      t = h - th;
      if (t & 0xffffffff00000000L) break;
      else 
        if (tl <= ((t << 32) | ((l & 0xffffffff00000000L) >> 32))) break;
      q --;
      th -= dh;
      tl -= dl;
    }
    t = tl >> 32;
    tl = (tl << 32) & 0xffffffff00000000L;
    th += t;
    if (l < tl) th ++;
    l -= tl;
    if (h < th) {
      h += d;
      q --;
    }
    h -= th;
    count --;
    if (count == 0) break;
    ret = q << 32;
    h = ((h << 32) | (l >> 32)) & 0xffffffffffffffffL;
    l = (l & (unsigned long)0xffffffffL) << 32;
  }
  ret |= q;
  __retres = ret;
  return_label: return __retres;
}

unsigned long bn_add_words(unsigned long *r, unsigned long const *a,
                           unsigned long const *b, int n)
{
  unsigned long __retres;
  unsigned long c;
  unsigned long l;
  unsigned long t;
  if (n <= 0) {
    __retres = (unsigned long)0;
    goto return_label;
  }
  c = (unsigned long)0;
  while (n & ~ 3) {
    t = *(a + 0);
    t = (t + c) & 0xffffffffffffffffL;
    c = (unsigned long)(t < c);
    l = (t + *(b + 0)) & 0xffffffffffffffffL;
    c += (unsigned long)(l < t);
    *(r + 0) = l;
    t = *(a + 1);
    t = (t + c) & 0xffffffffffffffffL;
    c = (unsigned long)(t < c);
    l = (t + *(b + 1)) & 0xffffffffffffffffL;
    c += (unsigned long)(l < t);
    *(r + 1) = l;
    t = *(a + 2);
    t = (t + c) & 0xffffffffffffffffL;
    c = (unsigned long)(t < c);
    l = (t + *(b + 2)) & 0xffffffffffffffffL;
    c += (unsigned long)(l < t);
    *(r + 2) = l;
    t = *(a + 3);
    t = (t + c) & 0xffffffffffffffffL;
    c = (unsigned long)(t < c);
    l = (t + *(b + 3)) & 0xffffffffffffffffL;
    c += (unsigned long)(l < t);
    *(r + 3) = l;
    a += 4;
    b += 4;
    r += 4;
    n -= 4;
  }
  while (n) {
    t = *(a + 0);
    t = (t + c) & 0xffffffffffffffffL;
    c = (unsigned long)(t < c);
    l = (t + *(b + 0)) & 0xffffffffffffffffL;
    c += (unsigned long)(l < t);
    *(r + 0) = l;
    a ++;
    b ++;
    r ++;
    n --;
  }
  __retres = c;
  return_label: return __retres;
}

unsigned long bn_sub_words(unsigned long *r, unsigned long const *a,
                           unsigned long const *b, int n)
{
  unsigned long __retres;
  unsigned long t1;
  unsigned long t2;
  int c;
  c = 0;
  if (n <= 0) {
    __retres = (unsigned long)0;
    goto return_label;
  }
  while (n & ~ 3) {
    t1 = *(a + 0);
    t2 = *(b + 0);
    *(r + 0) = ((t1 - t2) - (unsigned long)c) & 0xffffffffffffffffL;
    if (t1 != t2) c = t1 < t2;
    t1 = *(a + 1);
    t2 = *(b + 1);
    *(r + 1) = ((t1 - t2) - (unsigned long)c) & 0xffffffffffffffffL;
    if (t1 != t2) c = t1 < t2;
    t1 = *(a + 2);
    t2 = *(b + 2);
    *(r + 2) = ((t1 - t2) - (unsigned long)c) & 0xffffffffffffffffL;
    if (t1 != t2) c = t1 < t2;
    t1 = *(a + 3);
    t2 = *(b + 3);
    *(r + 3) = ((t1 - t2) - (unsigned long)c) & 0xffffffffffffffffL;
    if (t1 != t2) c = t1 < t2;
    a += 4;
    b += 4;
    r += 4;
    n -= 4;
  }
  while (n) {
    t1 = *(a + 0);
    t2 = *(b + 0);
    *(r + 0) = ((t1 - t2) - (unsigned long)c) & 0xffffffffffffffffL;
    if (t1 != t2) c = t1 < t2;
    a ++;
    b ++;
    r ++;
    n --;
  }
  __retres = (unsigned long)c;
  return_label: return __retres;
}

void bn_mul_comba8(unsigned long *r, unsigned long *a, unsigned long *b)
{
  unsigned long bl;
  unsigned long bh;
  unsigned long t1;
  unsigned long t2;
  unsigned long c1;
  unsigned long c2;
  unsigned long c3;
  c1 = (unsigned long)0;
  c2 = (unsigned long)0;
  c3 = (unsigned long)0;
  t1 = *(a + 0) & (unsigned long)0xffffffffL;
  t2 = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 0) & (unsigned long)0xffffffffL;
  bh = (*(b + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m;
    unsigned long m1;
    unsigned long lt;
    unsigned long ht;
    lt = t1;
    ht = t2;
    m = bh * lt;
    lt = bl * lt;
    m1 = bl * ht;
    ht = bh * ht;
    m = (m + m1) & 0xffffffffffffffffL;
    if (m < m1) ht += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht += (m >> 32) & (unsigned long)0xffffffffL;
    m1 = (m << 32) & 0xffffffffffffffffL;
    lt = (lt + m1) & 0xffffffffffffffffL;
    if (lt < m1) ht ++;
    t1 = lt;
    t2 = ht;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 0) = c1;
  c1 = (unsigned long)0;
  t1 = *(a + 0) & (unsigned long)0xffffffffL;
  t2 = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 1) & (unsigned long)0xffffffffL;
  bh = (*(b + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_0;
    unsigned long m1_0;
    unsigned long lt_0;
    unsigned long ht_0;
    lt_0 = t1;
    ht_0 = t2;
    m_0 = bh * lt_0;
    lt_0 = bl * lt_0;
    m1_0 = bl * ht_0;
    ht_0 = bh * ht_0;
    m_0 = (m_0 + m1_0) & 0xffffffffffffffffL;
    if (m_0 < m1_0) ht_0 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_0 += (m_0 >> 32) & (unsigned long)0xffffffffL;
    m1_0 = (m_0 << 32) & 0xffffffffffffffffL;
    lt_0 = (lt_0 + m1_0) & 0xffffffffffffffffL;
    if (lt_0 < m1_0) ht_0 ++;
    t1 = lt_0;
    t2 = ht_0;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 0) & (unsigned long)0xffffffffL;
  bh = (*(b + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_1;
    unsigned long m1_1;
    unsigned long lt_1;
    unsigned long ht_1;
    lt_1 = t1;
    ht_1 = t2;
    m_1 = bh * lt_1;
    lt_1 = bl * lt_1;
    m1_1 = bl * ht_1;
    ht_1 = bh * ht_1;
    m_1 = (m_1 + m1_1) & 0xffffffffffffffffL;
    if (m_1 < m1_1) ht_1 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_1 += (m_1 >> 32) & (unsigned long)0xffffffffL;
    m1_1 = (m_1 << 32) & 0xffffffffffffffffL;
    lt_1 = (lt_1 + m1_1) & 0xffffffffffffffffL;
    if (lt_1 < m1_1) ht_1 ++;
    t1 = lt_1;
    t2 = ht_1;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 1) = c2;
  c2 = (unsigned long)0;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 0) & (unsigned long)0xffffffffL;
  bh = (*(b + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_2;
    unsigned long m1_2;
    unsigned long lt_2;
    unsigned long ht_2;
    lt_2 = t1;
    ht_2 = t2;
    m_2 = bh * lt_2;
    lt_2 = bl * lt_2;
    m1_2 = bl * ht_2;
    ht_2 = bh * ht_2;
    m_2 = (m_2 + m1_2) & 0xffffffffffffffffL;
    if (m_2 < m1_2) ht_2 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_2 += (m_2 >> 32) & (unsigned long)0xffffffffL;
    m1_2 = (m_2 << 32) & 0xffffffffffffffffL;
    lt_2 = (lt_2 + m1_2) & 0xffffffffffffffffL;
    if (lt_2 < m1_2) ht_2 ++;
    t1 = lt_2;
    t2 = ht_2;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 1) & (unsigned long)0xffffffffL;
  bh = (*(b + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_3;
    unsigned long m1_3;
    unsigned long lt_3;
    unsigned long ht_3;
    lt_3 = t1;
    ht_3 = t2;
    m_3 = bh * lt_3;
    lt_3 = bl * lt_3;
    m1_3 = bl * ht_3;
    ht_3 = bh * ht_3;
    m_3 = (m_3 + m1_3) & 0xffffffffffffffffL;
    if (m_3 < m1_3) ht_3 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_3 += (m_3 >> 32) & (unsigned long)0xffffffffL;
    m1_3 = (m_3 << 32) & 0xffffffffffffffffL;
    lt_3 = (lt_3 + m1_3) & 0xffffffffffffffffL;
    if (lt_3 < m1_3) ht_3 ++;
    t1 = lt_3;
    t2 = ht_3;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 0) & (unsigned long)0xffffffffL;
  t2 = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 2) & (unsigned long)0xffffffffL;
  bh = (*(b + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_4;
    unsigned long m1_4;
    unsigned long lt_4;
    unsigned long ht_4;
    lt_4 = t1;
    ht_4 = t2;
    m_4 = bh * lt_4;
    lt_4 = bl * lt_4;
    m1_4 = bl * ht_4;
    ht_4 = bh * ht_4;
    m_4 = (m_4 + m1_4) & 0xffffffffffffffffL;
    if (m_4 < m1_4) ht_4 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_4 += (m_4 >> 32) & (unsigned long)0xffffffffL;
    m1_4 = (m_4 << 32) & 0xffffffffffffffffL;
    lt_4 = (lt_4 + m1_4) & 0xffffffffffffffffL;
    if (lt_4 < m1_4) ht_4 ++;
    t1 = lt_4;
    t2 = ht_4;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 2) = c3;
  c3 = (unsigned long)0;
  t1 = *(a + 0) & (unsigned long)0xffffffffL;
  t2 = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 3) & (unsigned long)0xffffffffL;
  bh = (*(b + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_5;
    unsigned long m1_5;
    unsigned long lt_5;
    unsigned long ht_5;
    lt_5 = t1;
    ht_5 = t2;
    m_5 = bh * lt_5;
    lt_5 = bl * lt_5;
    m1_5 = bl * ht_5;
    ht_5 = bh * ht_5;
    m_5 = (m_5 + m1_5) & 0xffffffffffffffffL;
    if (m_5 < m1_5) ht_5 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_5 += (m_5 >> 32) & (unsigned long)0xffffffffL;
    m1_5 = (m_5 << 32) & 0xffffffffffffffffL;
    lt_5 = (lt_5 + m1_5) & 0xffffffffffffffffL;
    if (lt_5 < m1_5) ht_5 ++;
    t1 = lt_5;
    t2 = ht_5;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 2) & (unsigned long)0xffffffffL;
  bh = (*(b + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_6;
    unsigned long m1_6;
    unsigned long lt_6;
    unsigned long ht_6;
    lt_6 = t1;
    ht_6 = t2;
    m_6 = bh * lt_6;
    lt_6 = bl * lt_6;
    m1_6 = bl * ht_6;
    ht_6 = bh * ht_6;
    m_6 = (m_6 + m1_6) & 0xffffffffffffffffL;
    if (m_6 < m1_6) ht_6 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_6 += (m_6 >> 32) & (unsigned long)0xffffffffL;
    m1_6 = (m_6 << 32) & 0xffffffffffffffffL;
    lt_6 = (lt_6 + m1_6) & 0xffffffffffffffffL;
    if (lt_6 < m1_6) ht_6 ++;
    t1 = lt_6;
    t2 = ht_6;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 1) & (unsigned long)0xffffffffL;
  bh = (*(b + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_7;
    unsigned long m1_7;
    unsigned long lt_7;
    unsigned long ht_7;
    lt_7 = t1;
    ht_7 = t2;
    m_7 = bh * lt_7;
    lt_7 = bl * lt_7;
    m1_7 = bl * ht_7;
    ht_7 = bh * ht_7;
    m_7 = (m_7 + m1_7) & 0xffffffffffffffffL;
    if (m_7 < m1_7) ht_7 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_7 += (m_7 >> 32) & (unsigned long)0xffffffffL;
    m1_7 = (m_7 << 32) & 0xffffffffffffffffL;
    lt_7 = (lt_7 + m1_7) & 0xffffffffffffffffL;
    if (lt_7 < m1_7) ht_7 ++;
    t1 = lt_7;
    t2 = ht_7;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 0) & (unsigned long)0xffffffffL;
  bh = (*(b + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_8;
    unsigned long m1_8;
    unsigned long lt_8;
    unsigned long ht_8;
    lt_8 = t1;
    ht_8 = t2;
    m_8 = bh * lt_8;
    lt_8 = bl * lt_8;
    m1_8 = bl * ht_8;
    ht_8 = bh * ht_8;
    m_8 = (m_8 + m1_8) & 0xffffffffffffffffL;
    if (m_8 < m1_8) ht_8 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_8 += (m_8 >> 32) & (unsigned long)0xffffffffL;
    m1_8 = (m_8 << 32) & 0xffffffffffffffffL;
    lt_8 = (lt_8 + m1_8) & 0xffffffffffffffffL;
    if (lt_8 < m1_8) ht_8 ++;
    t1 = lt_8;
    t2 = ht_8;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 3) = c1;
  c1 = (unsigned long)0;
  t1 = *(a + 4) & (unsigned long)0xffffffffL;
  t2 = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 0) & (unsigned long)0xffffffffL;
  bh = (*(b + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_9;
    unsigned long m1_9;
    unsigned long lt_9;
    unsigned long ht_9;
    lt_9 = t1;
    ht_9 = t2;
    m_9 = bh * lt_9;
    lt_9 = bl * lt_9;
    m1_9 = bl * ht_9;
    ht_9 = bh * ht_9;
    m_9 = (m_9 + m1_9) & 0xffffffffffffffffL;
    if (m_9 < m1_9) ht_9 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_9 += (m_9 >> 32) & (unsigned long)0xffffffffL;
    m1_9 = (m_9 << 32) & 0xffffffffffffffffL;
    lt_9 = (lt_9 + m1_9) & 0xffffffffffffffffL;
    if (lt_9 < m1_9) ht_9 ++;
    t1 = lt_9;
    t2 = ht_9;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 1) & (unsigned long)0xffffffffL;
  bh = (*(b + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_10;
    unsigned long m1_10;
    unsigned long lt_10;
    unsigned long ht_10;
    lt_10 = t1;
    ht_10 = t2;
    m_10 = bh * lt_10;
    lt_10 = bl * lt_10;
    m1_10 = bl * ht_10;
    ht_10 = bh * ht_10;
    m_10 = (m_10 + m1_10) & 0xffffffffffffffffL;
    if (m_10 < m1_10) ht_10 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_10 += (m_10 >> 32) & (unsigned long)0xffffffffL;
    m1_10 = (m_10 << 32) & 0xffffffffffffffffL;
    lt_10 = (lt_10 + m1_10) & 0xffffffffffffffffL;
    if (lt_10 < m1_10) ht_10 ++;
    t1 = lt_10;
    t2 = ht_10;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 2) & (unsigned long)0xffffffffL;
  bh = (*(b + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_11;
    unsigned long m1_11;
    unsigned long lt_11;
    unsigned long ht_11;
    lt_11 = t1;
    ht_11 = t2;
    m_11 = bh * lt_11;
    lt_11 = bl * lt_11;
    m1_11 = bl * ht_11;
    ht_11 = bh * ht_11;
    m_11 = (m_11 + m1_11) & 0xffffffffffffffffL;
    if (m_11 < m1_11) ht_11 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_11 += (m_11 >> 32) & (unsigned long)0xffffffffL;
    m1_11 = (m_11 << 32) & 0xffffffffffffffffL;
    lt_11 = (lt_11 + m1_11) & 0xffffffffffffffffL;
    if (lt_11 < m1_11) ht_11 ++;
    t1 = lt_11;
    t2 = ht_11;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 3) & (unsigned long)0xffffffffL;
  bh = (*(b + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_12;
    unsigned long m1_12;
    unsigned long lt_12;
    unsigned long ht_12;
    lt_12 = t1;
    ht_12 = t2;
    m_12 = bh * lt_12;
    lt_12 = bl * lt_12;
    m1_12 = bl * ht_12;
    ht_12 = bh * ht_12;
    m_12 = (m_12 + m1_12) & 0xffffffffffffffffL;
    if (m_12 < m1_12) ht_12 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_12 += (m_12 >> 32) & (unsigned long)0xffffffffL;
    m1_12 = (m_12 << 32) & 0xffffffffffffffffL;
    lt_12 = (lt_12 + m1_12) & 0xffffffffffffffffL;
    if (lt_12 < m1_12) ht_12 ++;
    t1 = lt_12;
    t2 = ht_12;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 0) & (unsigned long)0xffffffffL;
  t2 = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 4) & (unsigned long)0xffffffffL;
  bh = (*(b + 4) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_13;
    unsigned long m1_13;
    unsigned long lt_13;
    unsigned long ht_13;
    lt_13 = t1;
    ht_13 = t2;
    m_13 = bh * lt_13;
    lt_13 = bl * lt_13;
    m1_13 = bl * ht_13;
    ht_13 = bh * ht_13;
    m_13 = (m_13 + m1_13) & 0xffffffffffffffffL;
    if (m_13 < m1_13) ht_13 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_13 += (m_13 >> 32) & (unsigned long)0xffffffffL;
    m1_13 = (m_13 << 32) & 0xffffffffffffffffL;
    lt_13 = (lt_13 + m1_13) & 0xffffffffffffffffL;
    if (lt_13 < m1_13) ht_13 ++;
    t1 = lt_13;
    t2 = ht_13;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 4) = c2;
  c2 = (unsigned long)0;
  t1 = *(a + 0) & (unsigned long)0xffffffffL;
  t2 = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 5) & (unsigned long)0xffffffffL;
  bh = (*(b + 5) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_14;
    unsigned long m1_14;
    unsigned long lt_14;
    unsigned long ht_14;
    lt_14 = t1;
    ht_14 = t2;
    m_14 = bh * lt_14;
    lt_14 = bl * lt_14;
    m1_14 = bl * ht_14;
    ht_14 = bh * ht_14;
    m_14 = (m_14 + m1_14) & 0xffffffffffffffffL;
    if (m_14 < m1_14) ht_14 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_14 += (m_14 >> 32) & (unsigned long)0xffffffffL;
    m1_14 = (m_14 << 32) & 0xffffffffffffffffL;
    lt_14 = (lt_14 + m1_14) & 0xffffffffffffffffL;
    if (lt_14 < m1_14) ht_14 ++;
    t1 = lt_14;
    t2 = ht_14;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 4) & (unsigned long)0xffffffffL;
  bh = (*(b + 4) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_15;
    unsigned long m1_15;
    unsigned long lt_15;
    unsigned long ht_15;
    lt_15 = t1;
    ht_15 = t2;
    m_15 = bh * lt_15;
    lt_15 = bl * lt_15;
    m1_15 = bl * ht_15;
    ht_15 = bh * ht_15;
    m_15 = (m_15 + m1_15) & 0xffffffffffffffffL;
    if (m_15 < m1_15) ht_15 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_15 += (m_15 >> 32) & (unsigned long)0xffffffffL;
    m1_15 = (m_15 << 32) & 0xffffffffffffffffL;
    lt_15 = (lt_15 + m1_15) & 0xffffffffffffffffL;
    if (lt_15 < m1_15) ht_15 ++;
    t1 = lt_15;
    t2 = ht_15;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 3) & (unsigned long)0xffffffffL;
  bh = (*(b + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_16;
    unsigned long m1_16;
    unsigned long lt_16;
    unsigned long ht_16;
    lt_16 = t1;
    ht_16 = t2;
    m_16 = bh * lt_16;
    lt_16 = bl * lt_16;
    m1_16 = bl * ht_16;
    ht_16 = bh * ht_16;
    m_16 = (m_16 + m1_16) & 0xffffffffffffffffL;
    if (m_16 < m1_16) ht_16 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_16 += (m_16 >> 32) & (unsigned long)0xffffffffL;
    m1_16 = (m_16 << 32) & 0xffffffffffffffffL;
    lt_16 = (lt_16 + m1_16) & 0xffffffffffffffffL;
    if (lt_16 < m1_16) ht_16 ++;
    t1 = lt_16;
    t2 = ht_16;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 2) & (unsigned long)0xffffffffL;
  bh = (*(b + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_17;
    unsigned long m1_17;
    unsigned long lt_17;
    unsigned long ht_17;
    lt_17 = t1;
    ht_17 = t2;
    m_17 = bh * lt_17;
    lt_17 = bl * lt_17;
    m1_17 = bl * ht_17;
    ht_17 = bh * ht_17;
    m_17 = (m_17 + m1_17) & 0xffffffffffffffffL;
    if (m_17 < m1_17) ht_17 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_17 += (m_17 >> 32) & (unsigned long)0xffffffffL;
    m1_17 = (m_17 << 32) & 0xffffffffffffffffL;
    lt_17 = (lt_17 + m1_17) & 0xffffffffffffffffL;
    if (lt_17 < m1_17) ht_17 ++;
    t1 = lt_17;
    t2 = ht_17;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 4) & (unsigned long)0xffffffffL;
  t2 = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 1) & (unsigned long)0xffffffffL;
  bh = (*(b + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_18;
    unsigned long m1_18;
    unsigned long lt_18;
    unsigned long ht_18;
    lt_18 = t1;
    ht_18 = t2;
    m_18 = bh * lt_18;
    lt_18 = bl * lt_18;
    m1_18 = bl * ht_18;
    ht_18 = bh * ht_18;
    m_18 = (m_18 + m1_18) & 0xffffffffffffffffL;
    if (m_18 < m1_18) ht_18 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_18 += (m_18 >> 32) & (unsigned long)0xffffffffL;
    m1_18 = (m_18 << 32) & 0xffffffffffffffffL;
    lt_18 = (lt_18 + m1_18) & 0xffffffffffffffffL;
    if (lt_18 < m1_18) ht_18 ++;
    t1 = lt_18;
    t2 = ht_18;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 5) & (unsigned long)0xffffffffL;
  t2 = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 0) & (unsigned long)0xffffffffL;
  bh = (*(b + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_19;
    unsigned long m1_19;
    unsigned long lt_19;
    unsigned long ht_19;
    lt_19 = t1;
    ht_19 = t2;
    m_19 = bh * lt_19;
    lt_19 = bl * lt_19;
    m1_19 = bl * ht_19;
    ht_19 = bh * ht_19;
    m_19 = (m_19 + m1_19) & 0xffffffffffffffffL;
    if (m_19 < m1_19) ht_19 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_19 += (m_19 >> 32) & (unsigned long)0xffffffffL;
    m1_19 = (m_19 << 32) & 0xffffffffffffffffL;
    lt_19 = (lt_19 + m1_19) & 0xffffffffffffffffL;
    if (lt_19 < m1_19) ht_19 ++;
    t1 = lt_19;
    t2 = ht_19;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 5) = c3;
  c3 = (unsigned long)0;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 0) & (unsigned long)0xffffffffL;
  bh = (*(b + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_20;
    unsigned long m1_20;
    unsigned long lt_20;
    unsigned long ht_20;
    lt_20 = t1;
    ht_20 = t2;
    m_20 = bh * lt_20;
    lt_20 = bl * lt_20;
    m1_20 = bl * ht_20;
    ht_20 = bh * ht_20;
    m_20 = (m_20 + m1_20) & 0xffffffffffffffffL;
    if (m_20 < m1_20) ht_20 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_20 += (m_20 >> 32) & (unsigned long)0xffffffffL;
    m1_20 = (m_20 << 32) & 0xffffffffffffffffL;
    lt_20 = (lt_20 + m1_20) & 0xffffffffffffffffL;
    if (lt_20 < m1_20) ht_20 ++;
    t1 = lt_20;
    t2 = ht_20;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 5) & (unsigned long)0xffffffffL;
  t2 = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 1) & (unsigned long)0xffffffffL;
  bh = (*(b + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_21;
    unsigned long m1_21;
    unsigned long lt_21;
    unsigned long ht_21;
    lt_21 = t1;
    ht_21 = t2;
    m_21 = bh * lt_21;
    lt_21 = bl * lt_21;
    m1_21 = bl * ht_21;
    ht_21 = bh * ht_21;
    m_21 = (m_21 + m1_21) & 0xffffffffffffffffL;
    if (m_21 < m1_21) ht_21 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_21 += (m_21 >> 32) & (unsigned long)0xffffffffL;
    m1_21 = (m_21 << 32) & 0xffffffffffffffffL;
    lt_21 = (lt_21 + m1_21) & 0xffffffffffffffffL;
    if (lt_21 < m1_21) ht_21 ++;
    t1 = lt_21;
    t2 = ht_21;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 4) & (unsigned long)0xffffffffL;
  t2 = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 2) & (unsigned long)0xffffffffL;
  bh = (*(b + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_22;
    unsigned long m1_22;
    unsigned long lt_22;
    unsigned long ht_22;
    lt_22 = t1;
    ht_22 = t2;
    m_22 = bh * lt_22;
    lt_22 = bl * lt_22;
    m1_22 = bl * ht_22;
    ht_22 = bh * ht_22;
    m_22 = (m_22 + m1_22) & 0xffffffffffffffffL;
    if (m_22 < m1_22) ht_22 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_22 += (m_22 >> 32) & (unsigned long)0xffffffffL;
    m1_22 = (m_22 << 32) & 0xffffffffffffffffL;
    lt_22 = (lt_22 + m1_22) & 0xffffffffffffffffL;
    if (lt_22 < m1_22) ht_22 ++;
    t1 = lt_22;
    t2 = ht_22;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 3) & (unsigned long)0xffffffffL;
  bh = (*(b + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_23;
    unsigned long m1_23;
    unsigned long lt_23;
    unsigned long ht_23;
    lt_23 = t1;
    ht_23 = t2;
    m_23 = bh * lt_23;
    lt_23 = bl * lt_23;
    m1_23 = bl * ht_23;
    ht_23 = bh * ht_23;
    m_23 = (m_23 + m1_23) & 0xffffffffffffffffL;
    if (m_23 < m1_23) ht_23 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_23 += (m_23 >> 32) & (unsigned long)0xffffffffL;
    m1_23 = (m_23 << 32) & 0xffffffffffffffffL;
    lt_23 = (lt_23 + m1_23) & 0xffffffffffffffffL;
    if (lt_23 < m1_23) ht_23 ++;
    t1 = lt_23;
    t2 = ht_23;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 4) & (unsigned long)0xffffffffL;
  bh = (*(b + 4) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_24;
    unsigned long m1_24;
    unsigned long lt_24;
    unsigned long ht_24;
    lt_24 = t1;
    ht_24 = t2;
    m_24 = bh * lt_24;
    lt_24 = bl * lt_24;
    m1_24 = bl * ht_24;
    ht_24 = bh * ht_24;
    m_24 = (m_24 + m1_24) & 0xffffffffffffffffL;
    if (m_24 < m1_24) ht_24 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_24 += (m_24 >> 32) & (unsigned long)0xffffffffL;
    m1_24 = (m_24 << 32) & 0xffffffffffffffffL;
    lt_24 = (lt_24 + m1_24) & 0xffffffffffffffffL;
    if (lt_24 < m1_24) ht_24 ++;
    t1 = lt_24;
    t2 = ht_24;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 5) & (unsigned long)0xffffffffL;
  bh = (*(b + 5) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_25;
    unsigned long m1_25;
    unsigned long lt_25;
    unsigned long ht_25;
    lt_25 = t1;
    ht_25 = t2;
    m_25 = bh * lt_25;
    lt_25 = bl * lt_25;
    m1_25 = bl * ht_25;
    ht_25 = bh * ht_25;
    m_25 = (m_25 + m1_25) & 0xffffffffffffffffL;
    if (m_25 < m1_25) ht_25 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_25 += (m_25 >> 32) & (unsigned long)0xffffffffL;
    m1_25 = (m_25 << 32) & 0xffffffffffffffffL;
    lt_25 = (lt_25 + m1_25) & 0xffffffffffffffffL;
    if (lt_25 < m1_25) ht_25 ++;
    t1 = lt_25;
    t2 = ht_25;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 0) & (unsigned long)0xffffffffL;
  t2 = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 6) & (unsigned long)0xffffffffL;
  bh = (*(b + 6) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_26;
    unsigned long m1_26;
    unsigned long lt_26;
    unsigned long ht_26;
    lt_26 = t1;
    ht_26 = t2;
    m_26 = bh * lt_26;
    lt_26 = bl * lt_26;
    m1_26 = bl * ht_26;
    ht_26 = bh * ht_26;
    m_26 = (m_26 + m1_26) & 0xffffffffffffffffL;
    if (m_26 < m1_26) ht_26 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_26 += (m_26 >> 32) & (unsigned long)0xffffffffL;
    m1_26 = (m_26 << 32) & 0xffffffffffffffffL;
    lt_26 = (lt_26 + m1_26) & 0xffffffffffffffffL;
    if (lt_26 < m1_26) ht_26 ++;
    t1 = lt_26;
    t2 = ht_26;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 6) = c1;
  c1 = (unsigned long)0;
  t1 = *(a + 0) & (unsigned long)0xffffffffL;
  t2 = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 7) & (unsigned long)0xffffffffL;
  bh = (*(b + 7) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_27;
    unsigned long m1_27;
    unsigned long lt_27;
    unsigned long ht_27;
    lt_27 = t1;
    ht_27 = t2;
    m_27 = bh * lt_27;
    lt_27 = bl * lt_27;
    m1_27 = bl * ht_27;
    ht_27 = bh * ht_27;
    m_27 = (m_27 + m1_27) & 0xffffffffffffffffL;
    if (m_27 < m1_27) ht_27 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_27 += (m_27 >> 32) & (unsigned long)0xffffffffL;
    m1_27 = (m_27 << 32) & 0xffffffffffffffffL;
    lt_27 = (lt_27 + m1_27) & 0xffffffffffffffffL;
    if (lt_27 < m1_27) ht_27 ++;
    t1 = lt_27;
    t2 = ht_27;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 6) & (unsigned long)0xffffffffL;
  bh = (*(b + 6) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_28;
    unsigned long m1_28;
    unsigned long lt_28;
    unsigned long ht_28;
    lt_28 = t1;
    ht_28 = t2;
    m_28 = bh * lt_28;
    lt_28 = bl * lt_28;
    m1_28 = bl * ht_28;
    ht_28 = bh * ht_28;
    m_28 = (m_28 + m1_28) & 0xffffffffffffffffL;
    if (m_28 < m1_28) ht_28 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_28 += (m_28 >> 32) & (unsigned long)0xffffffffL;
    m1_28 = (m_28 << 32) & 0xffffffffffffffffL;
    lt_28 = (lt_28 + m1_28) & 0xffffffffffffffffL;
    if (lt_28 < m1_28) ht_28 ++;
    t1 = lt_28;
    t2 = ht_28;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 5) & (unsigned long)0xffffffffL;
  bh = (*(b + 5) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_29;
    unsigned long m1_29;
    unsigned long lt_29;
    unsigned long ht_29;
    lt_29 = t1;
    ht_29 = t2;
    m_29 = bh * lt_29;
    lt_29 = bl * lt_29;
    m1_29 = bl * ht_29;
    ht_29 = bh * ht_29;
    m_29 = (m_29 + m1_29) & 0xffffffffffffffffL;
    if (m_29 < m1_29) ht_29 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_29 += (m_29 >> 32) & (unsigned long)0xffffffffL;
    m1_29 = (m_29 << 32) & 0xffffffffffffffffL;
    lt_29 = (lt_29 + m1_29) & 0xffffffffffffffffL;
    if (lt_29 < m1_29) ht_29 ++;
    t1 = lt_29;
    t2 = ht_29;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 4) & (unsigned long)0xffffffffL;
  bh = (*(b + 4) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_30;
    unsigned long m1_30;
    unsigned long lt_30;
    unsigned long ht_30;
    lt_30 = t1;
    ht_30 = t2;
    m_30 = bh * lt_30;
    lt_30 = bl * lt_30;
    m1_30 = bl * ht_30;
    ht_30 = bh * ht_30;
    m_30 = (m_30 + m1_30) & 0xffffffffffffffffL;
    if (m_30 < m1_30) ht_30 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_30 += (m_30 >> 32) & (unsigned long)0xffffffffL;
    m1_30 = (m_30 << 32) & 0xffffffffffffffffL;
    lt_30 = (lt_30 + m1_30) & 0xffffffffffffffffL;
    if (lt_30 < m1_30) ht_30 ++;
    t1 = lt_30;
    t2 = ht_30;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 4) & (unsigned long)0xffffffffL;
  t2 = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 3) & (unsigned long)0xffffffffL;
  bh = (*(b + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_31;
    unsigned long m1_31;
    unsigned long lt_31;
    unsigned long ht_31;
    lt_31 = t1;
    ht_31 = t2;
    m_31 = bh * lt_31;
    lt_31 = bl * lt_31;
    m1_31 = bl * ht_31;
    ht_31 = bh * ht_31;
    m_31 = (m_31 + m1_31) & 0xffffffffffffffffL;
    if (m_31 < m1_31) ht_31 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_31 += (m_31 >> 32) & (unsigned long)0xffffffffL;
    m1_31 = (m_31 << 32) & 0xffffffffffffffffL;
    lt_31 = (lt_31 + m1_31) & 0xffffffffffffffffL;
    if (lt_31 < m1_31) ht_31 ++;
    t1 = lt_31;
    t2 = ht_31;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 5) & (unsigned long)0xffffffffL;
  t2 = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 2) & (unsigned long)0xffffffffL;
  bh = (*(b + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_32;
    unsigned long m1_32;
    unsigned long lt_32;
    unsigned long ht_32;
    lt_32 = t1;
    ht_32 = t2;
    m_32 = bh * lt_32;
    lt_32 = bl * lt_32;
    m1_32 = bl * ht_32;
    ht_32 = bh * ht_32;
    m_32 = (m_32 + m1_32) & 0xffffffffffffffffL;
    if (m_32 < m1_32) ht_32 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_32 += (m_32 >> 32) & (unsigned long)0xffffffffL;
    m1_32 = (m_32 << 32) & 0xffffffffffffffffL;
    lt_32 = (lt_32 + m1_32) & 0xffffffffffffffffL;
    if (lt_32 < m1_32) ht_32 ++;
    t1 = lt_32;
    t2 = ht_32;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 1) & (unsigned long)0xffffffffL;
  bh = (*(b + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_33;
    unsigned long m1_33;
    unsigned long lt_33;
    unsigned long ht_33;
    lt_33 = t1;
    ht_33 = t2;
    m_33 = bh * lt_33;
    lt_33 = bl * lt_33;
    m1_33 = bl * ht_33;
    ht_33 = bh * ht_33;
    m_33 = (m_33 + m1_33) & 0xffffffffffffffffL;
    if (m_33 < m1_33) ht_33 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_33 += (m_33 >> 32) & (unsigned long)0xffffffffL;
    m1_33 = (m_33 << 32) & 0xffffffffffffffffL;
    lt_33 = (lt_33 + m1_33) & 0xffffffffffffffffL;
    if (lt_33 < m1_33) ht_33 ++;
    t1 = lt_33;
    t2 = ht_33;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 0) & (unsigned long)0xffffffffL;
  bh = (*(b + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_34;
    unsigned long m1_34;
    unsigned long lt_34;
    unsigned long ht_34;
    lt_34 = t1;
    ht_34 = t2;
    m_34 = bh * lt_34;
    lt_34 = bl * lt_34;
    m1_34 = bl * ht_34;
    ht_34 = bh * ht_34;
    m_34 = (m_34 + m1_34) & 0xffffffffffffffffL;
    if (m_34 < m1_34) ht_34 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_34 += (m_34 >> 32) & (unsigned long)0xffffffffL;
    m1_34 = (m_34 << 32) & 0xffffffffffffffffL;
    lt_34 = (lt_34 + m1_34) & 0xffffffffffffffffL;
    if (lt_34 < m1_34) ht_34 ++;
    t1 = lt_34;
    t2 = ht_34;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 7) = c2;
  c2 = (unsigned long)0;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 1) & (unsigned long)0xffffffffL;
  bh = (*(b + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_35;
    unsigned long m1_35;
    unsigned long lt_35;
    unsigned long ht_35;
    lt_35 = t1;
    ht_35 = t2;
    m_35 = bh * lt_35;
    lt_35 = bl * lt_35;
    m1_35 = bl * ht_35;
    ht_35 = bh * ht_35;
    m_35 = (m_35 + m1_35) & 0xffffffffffffffffL;
    if (m_35 < m1_35) ht_35 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_35 += (m_35 >> 32) & (unsigned long)0xffffffffL;
    m1_35 = (m_35 << 32) & 0xffffffffffffffffL;
    lt_35 = (lt_35 + m1_35) & 0xffffffffffffffffL;
    if (lt_35 < m1_35) ht_35 ++;
    t1 = lt_35;
    t2 = ht_35;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 2) & (unsigned long)0xffffffffL;
  bh = (*(b + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_36;
    unsigned long m1_36;
    unsigned long lt_36;
    unsigned long ht_36;
    lt_36 = t1;
    ht_36 = t2;
    m_36 = bh * lt_36;
    lt_36 = bl * lt_36;
    m1_36 = bl * ht_36;
    ht_36 = bh * ht_36;
    m_36 = (m_36 + m1_36) & 0xffffffffffffffffL;
    if (m_36 < m1_36) ht_36 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_36 += (m_36 >> 32) & (unsigned long)0xffffffffL;
    m1_36 = (m_36 << 32) & 0xffffffffffffffffL;
    lt_36 = (lt_36 + m1_36) & 0xffffffffffffffffL;
    if (lt_36 < m1_36) ht_36 ++;
    t1 = lt_36;
    t2 = ht_36;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 5) & (unsigned long)0xffffffffL;
  t2 = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 3) & (unsigned long)0xffffffffL;
  bh = (*(b + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_37;
    unsigned long m1_37;
    unsigned long lt_37;
    unsigned long ht_37;
    lt_37 = t1;
    ht_37 = t2;
    m_37 = bh * lt_37;
    lt_37 = bl * lt_37;
    m1_37 = bl * ht_37;
    ht_37 = bh * ht_37;
    m_37 = (m_37 + m1_37) & 0xffffffffffffffffL;
    if (m_37 < m1_37) ht_37 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_37 += (m_37 >> 32) & (unsigned long)0xffffffffL;
    m1_37 = (m_37 << 32) & 0xffffffffffffffffL;
    lt_37 = (lt_37 + m1_37) & 0xffffffffffffffffL;
    if (lt_37 < m1_37) ht_37 ++;
    t1 = lt_37;
    t2 = ht_37;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 4) & (unsigned long)0xffffffffL;
  t2 = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 4) & (unsigned long)0xffffffffL;
  bh = (*(b + 4) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_38;
    unsigned long m1_38;
    unsigned long lt_38;
    unsigned long ht_38;
    lt_38 = t1;
    ht_38 = t2;
    m_38 = bh * lt_38;
    lt_38 = bl * lt_38;
    m1_38 = bl * ht_38;
    ht_38 = bh * ht_38;
    m_38 = (m_38 + m1_38) & 0xffffffffffffffffL;
    if (m_38 < m1_38) ht_38 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_38 += (m_38 >> 32) & (unsigned long)0xffffffffL;
    m1_38 = (m_38 << 32) & 0xffffffffffffffffL;
    lt_38 = (lt_38 + m1_38) & 0xffffffffffffffffL;
    if (lt_38 < m1_38) ht_38 ++;
    t1 = lt_38;
    t2 = ht_38;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 5) & (unsigned long)0xffffffffL;
  bh = (*(b + 5) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_39;
    unsigned long m1_39;
    unsigned long lt_39;
    unsigned long ht_39;
    lt_39 = t1;
    ht_39 = t2;
    m_39 = bh * lt_39;
    lt_39 = bl * lt_39;
    m1_39 = bl * ht_39;
    ht_39 = bh * ht_39;
    m_39 = (m_39 + m1_39) & 0xffffffffffffffffL;
    if (m_39 < m1_39) ht_39 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_39 += (m_39 >> 32) & (unsigned long)0xffffffffL;
    m1_39 = (m_39 << 32) & 0xffffffffffffffffL;
    lt_39 = (lt_39 + m1_39) & 0xffffffffffffffffL;
    if (lt_39 < m1_39) ht_39 ++;
    t1 = lt_39;
    t2 = ht_39;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 6) & (unsigned long)0xffffffffL;
  bh = (*(b + 6) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_40;
    unsigned long m1_40;
    unsigned long lt_40;
    unsigned long ht_40;
    lt_40 = t1;
    ht_40 = t2;
    m_40 = bh * lt_40;
    lt_40 = bl * lt_40;
    m1_40 = bl * ht_40;
    ht_40 = bh * ht_40;
    m_40 = (m_40 + m1_40) & 0xffffffffffffffffL;
    if (m_40 < m1_40) ht_40 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_40 += (m_40 >> 32) & (unsigned long)0xffffffffL;
    m1_40 = (m_40 << 32) & 0xffffffffffffffffL;
    lt_40 = (lt_40 + m1_40) & 0xffffffffffffffffL;
    if (lt_40 < m1_40) ht_40 ++;
    t1 = lt_40;
    t2 = ht_40;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 7) & (unsigned long)0xffffffffL;
  bh = (*(b + 7) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_41;
    unsigned long m1_41;
    unsigned long lt_41;
    unsigned long ht_41;
    lt_41 = t1;
    ht_41 = t2;
    m_41 = bh * lt_41;
    lt_41 = bl * lt_41;
    m1_41 = bl * ht_41;
    ht_41 = bh * ht_41;
    m_41 = (m_41 + m1_41) & 0xffffffffffffffffL;
    if (m_41 < m1_41) ht_41 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_41 += (m_41 >> 32) & (unsigned long)0xffffffffL;
    m1_41 = (m_41 << 32) & 0xffffffffffffffffL;
    lt_41 = (lt_41 + m1_41) & 0xffffffffffffffffL;
    if (lt_41 < m1_41) ht_41 ++;
    t1 = lt_41;
    t2 = ht_41;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 8) = c3;
  c3 = (unsigned long)0;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 7) & (unsigned long)0xffffffffL;
  bh = (*(b + 7) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_42;
    unsigned long m1_42;
    unsigned long lt_42;
    unsigned long ht_42;
    lt_42 = t1;
    ht_42 = t2;
    m_42 = bh * lt_42;
    lt_42 = bl * lt_42;
    m1_42 = bl * ht_42;
    ht_42 = bh * ht_42;
    m_42 = (m_42 + m1_42) & 0xffffffffffffffffL;
    if (m_42 < m1_42) ht_42 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_42 += (m_42 >> 32) & (unsigned long)0xffffffffL;
    m1_42 = (m_42 << 32) & 0xffffffffffffffffL;
    lt_42 = (lt_42 + m1_42) & 0xffffffffffffffffL;
    if (lt_42 < m1_42) ht_42 ++;
    t1 = lt_42;
    t2 = ht_42;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 6) & (unsigned long)0xffffffffL;
  bh = (*(b + 6) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_43;
    unsigned long m1_43;
    unsigned long lt_43;
    unsigned long ht_43;
    lt_43 = t1;
    ht_43 = t2;
    m_43 = bh * lt_43;
    lt_43 = bl * lt_43;
    m1_43 = bl * ht_43;
    ht_43 = bh * ht_43;
    m_43 = (m_43 + m1_43) & 0xffffffffffffffffL;
    if (m_43 < m1_43) ht_43 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_43 += (m_43 >> 32) & (unsigned long)0xffffffffL;
    m1_43 = (m_43 << 32) & 0xffffffffffffffffL;
    lt_43 = (lt_43 + m1_43) & 0xffffffffffffffffL;
    if (lt_43 < m1_43) ht_43 ++;
    t1 = lt_43;
    t2 = ht_43;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 4) & (unsigned long)0xffffffffL;
  t2 = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 5) & (unsigned long)0xffffffffL;
  bh = (*(b + 5) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_44;
    unsigned long m1_44;
    unsigned long lt_44;
    unsigned long ht_44;
    lt_44 = t1;
    ht_44 = t2;
    m_44 = bh * lt_44;
    lt_44 = bl * lt_44;
    m1_44 = bl * ht_44;
    ht_44 = bh * ht_44;
    m_44 = (m_44 + m1_44) & 0xffffffffffffffffL;
    if (m_44 < m1_44) ht_44 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_44 += (m_44 >> 32) & (unsigned long)0xffffffffL;
    m1_44 = (m_44 << 32) & 0xffffffffffffffffL;
    lt_44 = (lt_44 + m1_44) & 0xffffffffffffffffL;
    if (lt_44 < m1_44) ht_44 ++;
    t1 = lt_44;
    t2 = ht_44;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 5) & (unsigned long)0xffffffffL;
  t2 = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 4) & (unsigned long)0xffffffffL;
  bh = (*(b + 4) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_45;
    unsigned long m1_45;
    unsigned long lt_45;
    unsigned long ht_45;
    lt_45 = t1;
    ht_45 = t2;
    m_45 = bh * lt_45;
    lt_45 = bl * lt_45;
    m1_45 = bl * ht_45;
    ht_45 = bh * ht_45;
    m_45 = (m_45 + m1_45) & 0xffffffffffffffffL;
    if (m_45 < m1_45) ht_45 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_45 += (m_45 >> 32) & (unsigned long)0xffffffffL;
    m1_45 = (m_45 << 32) & 0xffffffffffffffffL;
    lt_45 = (lt_45 + m1_45) & 0xffffffffffffffffL;
    if (lt_45 < m1_45) ht_45 ++;
    t1 = lt_45;
    t2 = ht_45;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 3) & (unsigned long)0xffffffffL;
  bh = (*(b + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_46;
    unsigned long m1_46;
    unsigned long lt_46;
    unsigned long ht_46;
    lt_46 = t1;
    ht_46 = t2;
    m_46 = bh * lt_46;
    lt_46 = bl * lt_46;
    m1_46 = bl * ht_46;
    ht_46 = bh * ht_46;
    m_46 = (m_46 + m1_46) & 0xffffffffffffffffL;
    if (m_46 < m1_46) ht_46 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_46 += (m_46 >> 32) & (unsigned long)0xffffffffL;
    m1_46 = (m_46 << 32) & 0xffffffffffffffffL;
    lt_46 = (lt_46 + m1_46) & 0xffffffffffffffffL;
    if (lt_46 < m1_46) ht_46 ++;
    t1 = lt_46;
    t2 = ht_46;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 2) & (unsigned long)0xffffffffL;
  bh = (*(b + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_47;
    unsigned long m1_47;
    unsigned long lt_47;
    unsigned long ht_47;
    lt_47 = t1;
    ht_47 = t2;
    m_47 = bh * lt_47;
    lt_47 = bl * lt_47;
    m1_47 = bl * ht_47;
    ht_47 = bh * ht_47;
    m_47 = (m_47 + m1_47) & 0xffffffffffffffffL;
    if (m_47 < m1_47) ht_47 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_47 += (m_47 >> 32) & (unsigned long)0xffffffffL;
    m1_47 = (m_47 << 32) & 0xffffffffffffffffL;
    lt_47 = (lt_47 + m1_47) & 0xffffffffffffffffL;
    if (lt_47 < m1_47) ht_47 ++;
    t1 = lt_47;
    t2 = ht_47;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 9) = c1;
  c1 = (unsigned long)0;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 3) & (unsigned long)0xffffffffL;
  bh = (*(b + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_48;
    unsigned long m1_48;
    unsigned long lt_48;
    unsigned long ht_48;
    lt_48 = t1;
    ht_48 = t2;
    m_48 = bh * lt_48;
    lt_48 = bl * lt_48;
    m1_48 = bl * ht_48;
    ht_48 = bh * ht_48;
    m_48 = (m_48 + m1_48) & 0xffffffffffffffffL;
    if (m_48 < m1_48) ht_48 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_48 += (m_48 >> 32) & (unsigned long)0xffffffffL;
    m1_48 = (m_48 << 32) & 0xffffffffffffffffL;
    lt_48 = (lt_48 + m1_48) & 0xffffffffffffffffL;
    if (lt_48 < m1_48) ht_48 ++;
    t1 = lt_48;
    t2 = ht_48;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 4) & (unsigned long)0xffffffffL;
  bh = (*(b + 4) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_49;
    unsigned long m1_49;
    unsigned long lt_49;
    unsigned long ht_49;
    lt_49 = t1;
    ht_49 = t2;
    m_49 = bh * lt_49;
    lt_49 = bl * lt_49;
    m1_49 = bl * ht_49;
    ht_49 = bh * ht_49;
    m_49 = (m_49 + m1_49) & 0xffffffffffffffffL;
    if (m_49 < m1_49) ht_49 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_49 += (m_49 >> 32) & (unsigned long)0xffffffffL;
    m1_49 = (m_49 << 32) & 0xffffffffffffffffL;
    lt_49 = (lt_49 + m1_49) & 0xffffffffffffffffL;
    if (lt_49 < m1_49) ht_49 ++;
    t1 = lt_49;
    t2 = ht_49;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 5) & (unsigned long)0xffffffffL;
  t2 = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 5) & (unsigned long)0xffffffffL;
  bh = (*(b + 5) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_50;
    unsigned long m1_50;
    unsigned long lt_50;
    unsigned long ht_50;
    lt_50 = t1;
    ht_50 = t2;
    m_50 = bh * lt_50;
    lt_50 = bl * lt_50;
    m1_50 = bl * ht_50;
    ht_50 = bh * ht_50;
    m_50 = (m_50 + m1_50) & 0xffffffffffffffffL;
    if (m_50 < m1_50) ht_50 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_50 += (m_50 >> 32) & (unsigned long)0xffffffffL;
    m1_50 = (m_50 << 32) & 0xffffffffffffffffL;
    lt_50 = (lt_50 + m1_50) & 0xffffffffffffffffL;
    if (lt_50 < m1_50) ht_50 ++;
    t1 = lt_50;
    t2 = ht_50;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 4) & (unsigned long)0xffffffffL;
  t2 = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 6) & (unsigned long)0xffffffffL;
  bh = (*(b + 6) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_51;
    unsigned long m1_51;
    unsigned long lt_51;
    unsigned long ht_51;
    lt_51 = t1;
    ht_51 = t2;
    m_51 = bh * lt_51;
    lt_51 = bl * lt_51;
    m1_51 = bl * ht_51;
    ht_51 = bh * ht_51;
    m_51 = (m_51 + m1_51) & 0xffffffffffffffffL;
    if (m_51 < m1_51) ht_51 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_51 += (m_51 >> 32) & (unsigned long)0xffffffffL;
    m1_51 = (m_51 << 32) & 0xffffffffffffffffL;
    lt_51 = (lt_51 + m1_51) & 0xffffffffffffffffL;
    if (lt_51 < m1_51) ht_51 ++;
    t1 = lt_51;
    t2 = ht_51;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 7) & (unsigned long)0xffffffffL;
  bh = (*(b + 7) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_52;
    unsigned long m1_52;
    unsigned long lt_52;
    unsigned long ht_52;
    lt_52 = t1;
    ht_52 = t2;
    m_52 = bh * lt_52;
    lt_52 = bl * lt_52;
    m1_52 = bl * ht_52;
    ht_52 = bh * ht_52;
    m_52 = (m_52 + m1_52) & 0xffffffffffffffffL;
    if (m_52 < m1_52) ht_52 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_52 += (m_52 >> 32) & (unsigned long)0xffffffffL;
    m1_52 = (m_52 << 32) & 0xffffffffffffffffL;
    lt_52 = (lt_52 + m1_52) & 0xffffffffffffffffL;
    if (lt_52 < m1_52) ht_52 ++;
    t1 = lt_52;
    t2 = ht_52;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 10) = c2;
  c2 = (unsigned long)0;
  t1 = *(a + 4) & (unsigned long)0xffffffffL;
  t2 = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 7) & (unsigned long)0xffffffffL;
  bh = (*(b + 7) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_53;
    unsigned long m1_53;
    unsigned long lt_53;
    unsigned long ht_53;
    lt_53 = t1;
    ht_53 = t2;
    m_53 = bh * lt_53;
    lt_53 = bl * lt_53;
    m1_53 = bl * ht_53;
    ht_53 = bh * ht_53;
    m_53 = (m_53 + m1_53) & 0xffffffffffffffffL;
    if (m_53 < m1_53) ht_53 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_53 += (m_53 >> 32) & (unsigned long)0xffffffffL;
    m1_53 = (m_53 << 32) & 0xffffffffffffffffL;
    lt_53 = (lt_53 + m1_53) & 0xffffffffffffffffL;
    if (lt_53 < m1_53) ht_53 ++;
    t1 = lt_53;
    t2 = ht_53;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 5) & (unsigned long)0xffffffffL;
  t2 = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 6) & (unsigned long)0xffffffffL;
  bh = (*(b + 6) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_54;
    unsigned long m1_54;
    unsigned long lt_54;
    unsigned long ht_54;
    lt_54 = t1;
    ht_54 = t2;
    m_54 = bh * lt_54;
    lt_54 = bl * lt_54;
    m1_54 = bl * ht_54;
    ht_54 = bh * ht_54;
    m_54 = (m_54 + m1_54) & 0xffffffffffffffffL;
    if (m_54 < m1_54) ht_54 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_54 += (m_54 >> 32) & (unsigned long)0xffffffffL;
    m1_54 = (m_54 << 32) & 0xffffffffffffffffL;
    lt_54 = (lt_54 + m1_54) & 0xffffffffffffffffL;
    if (lt_54 < m1_54) ht_54 ++;
    t1 = lt_54;
    t2 = ht_54;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 5) & (unsigned long)0xffffffffL;
  bh = (*(b + 5) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_55;
    unsigned long m1_55;
    unsigned long lt_55;
    unsigned long ht_55;
    lt_55 = t1;
    ht_55 = t2;
    m_55 = bh * lt_55;
    lt_55 = bl * lt_55;
    m1_55 = bl * ht_55;
    ht_55 = bh * ht_55;
    m_55 = (m_55 + m1_55) & 0xffffffffffffffffL;
    if (m_55 < m1_55) ht_55 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_55 += (m_55 >> 32) & (unsigned long)0xffffffffL;
    m1_55 = (m_55 << 32) & 0xffffffffffffffffL;
    lt_55 = (lt_55 + m1_55) & 0xffffffffffffffffL;
    if (lt_55 < m1_55) ht_55 ++;
    t1 = lt_55;
    t2 = ht_55;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 4) & (unsigned long)0xffffffffL;
  bh = (*(b + 4) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_56;
    unsigned long m1_56;
    unsigned long lt_56;
    unsigned long ht_56;
    lt_56 = t1;
    ht_56 = t2;
    m_56 = bh * lt_56;
    lt_56 = bl * lt_56;
    m1_56 = bl * ht_56;
    ht_56 = bh * ht_56;
    m_56 = (m_56 + m1_56) & 0xffffffffffffffffL;
    if (m_56 < m1_56) ht_56 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_56 += (m_56 >> 32) & (unsigned long)0xffffffffL;
    m1_56 = (m_56 << 32) & 0xffffffffffffffffL;
    lt_56 = (lt_56 + m1_56) & 0xffffffffffffffffL;
    if (lt_56 < m1_56) ht_56 ++;
    t1 = lt_56;
    t2 = ht_56;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 11) = c3;
  c3 = (unsigned long)0;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 5) & (unsigned long)0xffffffffL;
  bh = (*(b + 5) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_57;
    unsigned long m1_57;
    unsigned long lt_57;
    unsigned long ht_57;
    lt_57 = t1;
    ht_57 = t2;
    m_57 = bh * lt_57;
    lt_57 = bl * lt_57;
    m1_57 = bl * ht_57;
    ht_57 = bh * ht_57;
    m_57 = (m_57 + m1_57) & 0xffffffffffffffffL;
    if (m_57 < m1_57) ht_57 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_57 += (m_57 >> 32) & (unsigned long)0xffffffffL;
    m1_57 = (m_57 << 32) & 0xffffffffffffffffL;
    lt_57 = (lt_57 + m1_57) & 0xffffffffffffffffL;
    if (lt_57 < m1_57) ht_57 ++;
    t1 = lt_57;
    t2 = ht_57;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 6) & (unsigned long)0xffffffffL;
  bh = (*(b + 6) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_58;
    unsigned long m1_58;
    unsigned long lt_58;
    unsigned long ht_58;
    lt_58 = t1;
    ht_58 = t2;
    m_58 = bh * lt_58;
    lt_58 = bl * lt_58;
    m1_58 = bl * ht_58;
    ht_58 = bh * ht_58;
    m_58 = (m_58 + m1_58) & 0xffffffffffffffffL;
    if (m_58 < m1_58) ht_58 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_58 += (m_58 >> 32) & (unsigned long)0xffffffffL;
    m1_58 = (m_58 << 32) & 0xffffffffffffffffL;
    lt_58 = (lt_58 + m1_58) & 0xffffffffffffffffL;
    if (lt_58 < m1_58) ht_58 ++;
    t1 = lt_58;
    t2 = ht_58;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 5) & (unsigned long)0xffffffffL;
  t2 = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 7) & (unsigned long)0xffffffffL;
  bh = (*(b + 7) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_59;
    unsigned long m1_59;
    unsigned long lt_59;
    unsigned long ht_59;
    lt_59 = t1;
    ht_59 = t2;
    m_59 = bh * lt_59;
    lt_59 = bl * lt_59;
    m1_59 = bl * ht_59;
    ht_59 = bh * ht_59;
    m_59 = (m_59 + m1_59) & 0xffffffffffffffffL;
    if (m_59 < m1_59) ht_59 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_59 += (m_59 >> 32) & (unsigned long)0xffffffffL;
    m1_59 = (m_59 << 32) & 0xffffffffffffffffL;
    lt_59 = (lt_59 + m1_59) & 0xffffffffffffffffL;
    if (lt_59 < m1_59) ht_59 ++;
    t1 = lt_59;
    t2 = ht_59;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 12) = c1;
  c1 = (unsigned long)0;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 7) & (unsigned long)0xffffffffL;
  bh = (*(b + 7) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_60;
    unsigned long m1_60;
    unsigned long lt_60;
    unsigned long ht_60;
    lt_60 = t1;
    ht_60 = t2;
    m_60 = bh * lt_60;
    lt_60 = bl * lt_60;
    m1_60 = bl * ht_60;
    ht_60 = bh * ht_60;
    m_60 = (m_60 + m1_60) & 0xffffffffffffffffL;
    if (m_60 < m1_60) ht_60 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_60 += (m_60 >> 32) & (unsigned long)0xffffffffL;
    m1_60 = (m_60 << 32) & 0xffffffffffffffffL;
    lt_60 = (lt_60 + m1_60) & 0xffffffffffffffffL;
    if (lt_60 < m1_60) ht_60 ++;
    t1 = lt_60;
    t2 = ht_60;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 6) & (unsigned long)0xffffffffL;
  bh = (*(b + 6) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_61;
    unsigned long m1_61;
    unsigned long lt_61;
    unsigned long ht_61;
    lt_61 = t1;
    ht_61 = t2;
    m_61 = bh * lt_61;
    lt_61 = bl * lt_61;
    m1_61 = bl * ht_61;
    ht_61 = bh * ht_61;
    m_61 = (m_61 + m1_61) & 0xffffffffffffffffL;
    if (m_61 < m1_61) ht_61 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_61 += (m_61 >> 32) & (unsigned long)0xffffffffL;
    m1_61 = (m_61 << 32) & 0xffffffffffffffffL;
    lt_61 = (lt_61 + m1_61) & 0xffffffffffffffffL;
    if (lt_61 < m1_61) ht_61 ++;
    t1 = lt_61;
    t2 = ht_61;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 13) = c2;
  c2 = (unsigned long)0;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 7) & (unsigned long)0xffffffffL;
  bh = (*(b + 7) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_62;
    unsigned long m1_62;
    unsigned long lt_62;
    unsigned long ht_62;
    lt_62 = t1;
    ht_62 = t2;
    m_62 = bh * lt_62;
    lt_62 = bl * lt_62;
    m1_62 = bl * ht_62;
    ht_62 = bh * ht_62;
    m_62 = (m_62 + m1_62) & 0xffffffffffffffffL;
    if (m_62 < m1_62) ht_62 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_62 += (m_62 >> 32) & (unsigned long)0xffffffffL;
    m1_62 = (m_62 << 32) & 0xffffffffffffffffL;
    lt_62 = (lt_62 + m1_62) & 0xffffffffffffffffL;
    if (lt_62 < m1_62) ht_62 ++;
    t1 = lt_62;
    t2 = ht_62;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 14) = c3;
  *(r + 15) = c1;
  return;
}

void bn_mul_comba4(unsigned long *r, unsigned long *a, unsigned long *b)
{
  unsigned long bl;
  unsigned long bh;
  unsigned long t1;
  unsigned long t2;
  unsigned long c1;
  unsigned long c2;
  unsigned long c3;
  c1 = (unsigned long)0;
  c2 = (unsigned long)0;
  c3 = (unsigned long)0;
  t1 = *(a + 0) & (unsigned long)0xffffffffL;
  t2 = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 0) & (unsigned long)0xffffffffL;
  bh = (*(b + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m;
    unsigned long m1;
    unsigned long lt;
    unsigned long ht;
    lt = t1;
    ht = t2;
    m = bh * lt;
    lt = bl * lt;
    m1 = bl * ht;
    ht = bh * ht;
    m = (m + m1) & 0xffffffffffffffffL;
    if (m < m1) ht += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht += (m >> 32) & (unsigned long)0xffffffffL;
    m1 = (m << 32) & 0xffffffffffffffffL;
    lt = (lt + m1) & 0xffffffffffffffffL;
    if (lt < m1) ht ++;
    t1 = lt;
    t2 = ht;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 0) = c1;
  c1 = (unsigned long)0;
  t1 = *(a + 0) & (unsigned long)0xffffffffL;
  t2 = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 1) & (unsigned long)0xffffffffL;
  bh = (*(b + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_0;
    unsigned long m1_0;
    unsigned long lt_0;
    unsigned long ht_0;
    lt_0 = t1;
    ht_0 = t2;
    m_0 = bh * lt_0;
    lt_0 = bl * lt_0;
    m1_0 = bl * ht_0;
    ht_0 = bh * ht_0;
    m_0 = (m_0 + m1_0) & 0xffffffffffffffffL;
    if (m_0 < m1_0) ht_0 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_0 += (m_0 >> 32) & (unsigned long)0xffffffffL;
    m1_0 = (m_0 << 32) & 0xffffffffffffffffL;
    lt_0 = (lt_0 + m1_0) & 0xffffffffffffffffL;
    if (lt_0 < m1_0) ht_0 ++;
    t1 = lt_0;
    t2 = ht_0;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 0) & (unsigned long)0xffffffffL;
  bh = (*(b + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_1;
    unsigned long m1_1;
    unsigned long lt_1;
    unsigned long ht_1;
    lt_1 = t1;
    ht_1 = t2;
    m_1 = bh * lt_1;
    lt_1 = bl * lt_1;
    m1_1 = bl * ht_1;
    ht_1 = bh * ht_1;
    m_1 = (m_1 + m1_1) & 0xffffffffffffffffL;
    if (m_1 < m1_1) ht_1 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_1 += (m_1 >> 32) & (unsigned long)0xffffffffL;
    m1_1 = (m_1 << 32) & 0xffffffffffffffffL;
    lt_1 = (lt_1 + m1_1) & 0xffffffffffffffffL;
    if (lt_1 < m1_1) ht_1 ++;
    t1 = lt_1;
    t2 = ht_1;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 1) = c2;
  c2 = (unsigned long)0;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 0) & (unsigned long)0xffffffffL;
  bh = (*(b + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_2;
    unsigned long m1_2;
    unsigned long lt_2;
    unsigned long ht_2;
    lt_2 = t1;
    ht_2 = t2;
    m_2 = bh * lt_2;
    lt_2 = bl * lt_2;
    m1_2 = bl * ht_2;
    ht_2 = bh * ht_2;
    m_2 = (m_2 + m1_2) & 0xffffffffffffffffL;
    if (m_2 < m1_2) ht_2 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_2 += (m_2 >> 32) & (unsigned long)0xffffffffL;
    m1_2 = (m_2 << 32) & 0xffffffffffffffffL;
    lt_2 = (lt_2 + m1_2) & 0xffffffffffffffffL;
    if (lt_2 < m1_2) ht_2 ++;
    t1 = lt_2;
    t2 = ht_2;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 1) & (unsigned long)0xffffffffL;
  bh = (*(b + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_3;
    unsigned long m1_3;
    unsigned long lt_3;
    unsigned long ht_3;
    lt_3 = t1;
    ht_3 = t2;
    m_3 = bh * lt_3;
    lt_3 = bl * lt_3;
    m1_3 = bl * ht_3;
    ht_3 = bh * ht_3;
    m_3 = (m_3 + m1_3) & 0xffffffffffffffffL;
    if (m_3 < m1_3) ht_3 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_3 += (m_3 >> 32) & (unsigned long)0xffffffffL;
    m1_3 = (m_3 << 32) & 0xffffffffffffffffL;
    lt_3 = (lt_3 + m1_3) & 0xffffffffffffffffL;
    if (lt_3 < m1_3) ht_3 ++;
    t1 = lt_3;
    t2 = ht_3;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 0) & (unsigned long)0xffffffffL;
  t2 = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 2) & (unsigned long)0xffffffffL;
  bh = (*(b + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_4;
    unsigned long m1_4;
    unsigned long lt_4;
    unsigned long ht_4;
    lt_4 = t1;
    ht_4 = t2;
    m_4 = bh * lt_4;
    lt_4 = bl * lt_4;
    m1_4 = bl * ht_4;
    ht_4 = bh * ht_4;
    m_4 = (m_4 + m1_4) & 0xffffffffffffffffL;
    if (m_4 < m1_4) ht_4 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_4 += (m_4 >> 32) & (unsigned long)0xffffffffL;
    m1_4 = (m_4 << 32) & 0xffffffffffffffffL;
    lt_4 = (lt_4 + m1_4) & 0xffffffffffffffffL;
    if (lt_4 < m1_4) ht_4 ++;
    t1 = lt_4;
    t2 = ht_4;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 2) = c3;
  c3 = (unsigned long)0;
  t1 = *(a + 0) & (unsigned long)0xffffffffL;
  t2 = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 3) & (unsigned long)0xffffffffL;
  bh = (*(b + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_5;
    unsigned long m1_5;
    unsigned long lt_5;
    unsigned long ht_5;
    lt_5 = t1;
    ht_5 = t2;
    m_5 = bh * lt_5;
    lt_5 = bl * lt_5;
    m1_5 = bl * ht_5;
    ht_5 = bh * ht_5;
    m_5 = (m_5 + m1_5) & 0xffffffffffffffffL;
    if (m_5 < m1_5) ht_5 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_5 += (m_5 >> 32) & (unsigned long)0xffffffffL;
    m1_5 = (m_5 << 32) & 0xffffffffffffffffL;
    lt_5 = (lt_5 + m1_5) & 0xffffffffffffffffL;
    if (lt_5 < m1_5) ht_5 ++;
    t1 = lt_5;
    t2 = ht_5;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 2) & (unsigned long)0xffffffffL;
  bh = (*(b + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_6;
    unsigned long m1_6;
    unsigned long lt_6;
    unsigned long ht_6;
    lt_6 = t1;
    ht_6 = t2;
    m_6 = bh * lt_6;
    lt_6 = bl * lt_6;
    m1_6 = bl * ht_6;
    ht_6 = bh * ht_6;
    m_6 = (m_6 + m1_6) & 0xffffffffffffffffL;
    if (m_6 < m1_6) ht_6 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_6 += (m_6 >> 32) & (unsigned long)0xffffffffL;
    m1_6 = (m_6 << 32) & 0xffffffffffffffffL;
    lt_6 = (lt_6 + m1_6) & 0xffffffffffffffffL;
    if (lt_6 < m1_6) ht_6 ++;
    t1 = lt_6;
    t2 = ht_6;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 1) & (unsigned long)0xffffffffL;
  bh = (*(b + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_7;
    unsigned long m1_7;
    unsigned long lt_7;
    unsigned long ht_7;
    lt_7 = t1;
    ht_7 = t2;
    m_7 = bh * lt_7;
    lt_7 = bl * lt_7;
    m1_7 = bl * ht_7;
    ht_7 = bh * ht_7;
    m_7 = (m_7 + m1_7) & 0xffffffffffffffffL;
    if (m_7 < m1_7) ht_7 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_7 += (m_7 >> 32) & (unsigned long)0xffffffffL;
    m1_7 = (m_7 << 32) & 0xffffffffffffffffL;
    lt_7 = (lt_7 + m1_7) & 0xffffffffffffffffL;
    if (lt_7 < m1_7) ht_7 ++;
    t1 = lt_7;
    t2 = ht_7;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 0) & (unsigned long)0xffffffffL;
  bh = (*(b + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_8;
    unsigned long m1_8;
    unsigned long lt_8;
    unsigned long ht_8;
    lt_8 = t1;
    ht_8 = t2;
    m_8 = bh * lt_8;
    lt_8 = bl * lt_8;
    m1_8 = bl * ht_8;
    ht_8 = bh * ht_8;
    m_8 = (m_8 + m1_8) & 0xffffffffffffffffL;
    if (m_8 < m1_8) ht_8 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_8 += (m_8 >> 32) & (unsigned long)0xffffffffL;
    m1_8 = (m_8 << 32) & 0xffffffffffffffffL;
    lt_8 = (lt_8 + m1_8) & 0xffffffffffffffffL;
    if (lt_8 < m1_8) ht_8 ++;
    t1 = lt_8;
    t2 = ht_8;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 3) = c1;
  c1 = (unsigned long)0;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 1) & (unsigned long)0xffffffffL;
  bh = (*(b + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_9;
    unsigned long m1_9;
    unsigned long lt_9;
    unsigned long ht_9;
    lt_9 = t1;
    ht_9 = t2;
    m_9 = bh * lt_9;
    lt_9 = bl * lt_9;
    m1_9 = bl * ht_9;
    ht_9 = bh * ht_9;
    m_9 = (m_9 + m1_9) & 0xffffffffffffffffL;
    if (m_9 < m1_9) ht_9 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_9 += (m_9 >> 32) & (unsigned long)0xffffffffL;
    m1_9 = (m_9 << 32) & 0xffffffffffffffffL;
    lt_9 = (lt_9 + m1_9) & 0xffffffffffffffffL;
    if (lt_9 < m1_9) ht_9 ++;
    t1 = lt_9;
    t2 = ht_9;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 2) & (unsigned long)0xffffffffL;
  bh = (*(b + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_10;
    unsigned long m1_10;
    unsigned long lt_10;
    unsigned long ht_10;
    lt_10 = t1;
    ht_10 = t2;
    m_10 = bh * lt_10;
    lt_10 = bl * lt_10;
    m1_10 = bl * ht_10;
    ht_10 = bh * ht_10;
    m_10 = (m_10 + m1_10) & 0xffffffffffffffffL;
    if (m_10 < m1_10) ht_10 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_10 += (m_10 >> 32) & (unsigned long)0xffffffffL;
    m1_10 = (m_10 << 32) & 0xffffffffffffffffL;
    lt_10 = (lt_10 + m1_10) & 0xffffffffffffffffL;
    if (lt_10 < m1_10) ht_10 ++;
    t1 = lt_10;
    t2 = ht_10;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 3) & (unsigned long)0xffffffffL;
  bh = (*(b + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_11;
    unsigned long m1_11;
    unsigned long lt_11;
    unsigned long ht_11;
    lt_11 = t1;
    ht_11 = t2;
    m_11 = bh * lt_11;
    lt_11 = bl * lt_11;
    m1_11 = bl * ht_11;
    ht_11 = bh * ht_11;
    m_11 = (m_11 + m1_11) & 0xffffffffffffffffL;
    if (m_11 < m1_11) ht_11 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_11 += (m_11 >> 32) & (unsigned long)0xffffffffL;
    m1_11 = (m_11 << 32) & 0xffffffffffffffffL;
    lt_11 = (lt_11 + m1_11) & 0xffffffffffffffffL;
    if (lt_11 < m1_11) ht_11 ++;
    t1 = lt_11;
    t2 = ht_11;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 4) = c2;
  c2 = (unsigned long)0;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 3) & (unsigned long)0xffffffffL;
  bh = (*(b + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_12;
    unsigned long m1_12;
    unsigned long lt_12;
    unsigned long ht_12;
    lt_12 = t1;
    ht_12 = t2;
    m_12 = bh * lt_12;
    lt_12 = bl * lt_12;
    m1_12 = bl * ht_12;
    ht_12 = bh * ht_12;
    m_12 = (m_12 + m1_12) & 0xffffffffffffffffL;
    if (m_12 < m1_12) ht_12 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_12 += (m_12 >> 32) & (unsigned long)0xffffffffL;
    m1_12 = (m_12 << 32) & 0xffffffffffffffffL;
    lt_12 = (lt_12 + m1_12) & 0xffffffffffffffffL;
    if (lt_12 < m1_12) ht_12 ++;
    t1 = lt_12;
    t2 = ht_12;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 2) & (unsigned long)0xffffffffL;
  bh = (*(b + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_13;
    unsigned long m1_13;
    unsigned long lt_13;
    unsigned long ht_13;
    lt_13 = t1;
    ht_13 = t2;
    m_13 = bh * lt_13;
    lt_13 = bl * lt_13;
    m1_13 = bl * ht_13;
    ht_13 = bh * ht_13;
    m_13 = (m_13 + m1_13) & 0xffffffffffffffffL;
    if (m_13 < m1_13) ht_13 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_13 += (m_13 >> 32) & (unsigned long)0xffffffffL;
    m1_13 = (m_13 << 32) & 0xffffffffffffffffL;
    lt_13 = (lt_13 + m1_13) & 0xffffffffffffffffL;
    if (lt_13 < m1_13) ht_13 ++;
    t1 = lt_13;
    t2 = ht_13;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 5) = c3;
  c3 = (unsigned long)0;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(b + 3) & (unsigned long)0xffffffffL;
  bh = (*(b + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_14;
    unsigned long m1_14;
    unsigned long lt_14;
    unsigned long ht_14;
    lt_14 = t1;
    ht_14 = t2;
    m_14 = bh * lt_14;
    lt_14 = bl * lt_14;
    m1_14 = bl * ht_14;
    ht_14 = bh * ht_14;
    m_14 = (m_14 + m1_14) & 0xffffffffffffffffL;
    if (m_14 < m1_14) ht_14 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_14 += (m_14 >> 32) & (unsigned long)0xffffffffL;
    m1_14 = (m_14 << 32) & 0xffffffffffffffffL;
    lt_14 = (lt_14 + m1_14) & 0xffffffffffffffffL;
    if (lt_14 < m1_14) ht_14 ++;
    t1 = lt_14;
    t2 = ht_14;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 6) = c1;
  *(r + 7) = c2;
  return;
}

void bn_sqr_comba8(unsigned long *r, unsigned long const *a)
{
  unsigned long bl;
  unsigned long bh;
  unsigned long t1;
  unsigned long t2;
  unsigned long c1;
  unsigned long c2;
  unsigned long c3;
  c1 = (unsigned long)0;
  c2 = (unsigned long)0;
  c3 = (unsigned long)0;
  {
    unsigned long l;
    unsigned long h;
    unsigned long m;
    h = *(a + 0);
    l = h & (unsigned long)0xffffffffL;
    h = (h >> 32) & (unsigned long)0xffffffffL;
    m = l * h;
    l *= l;
    h *= h;
    h += (m & 0xffffffff80000000L) >> (32 - 1);
    m = (m & (unsigned long)0xffffffffL) << (32 + 1);
    l = (l + m) & 0xffffffffffffffffL;
    if (l < m) h ++;
    t1 = l;
    t2 = h;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 0) = c1;
  c1 = (unsigned long)0;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 0) & (unsigned long)0xffffffffL;
  bh = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_0;
    unsigned long m1;
    unsigned long lt;
    unsigned long ht;
    lt = t1;
    ht = t2;
    m_0 = bh * lt;
    lt = bl * lt;
    m1 = bl * ht;
    ht = bh * ht;
    m_0 = (m_0 + m1) & 0xffffffffffffffffL;
    if (m_0 < m1) ht += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht += (m_0 >> 32) & (unsigned long)0xffffffffL;
    m1 = (m_0 << 32) & 0xffffffffffffffffL;
    lt = (lt + m1) & 0xffffffffffffffffL;
    if (lt < m1) ht ++;
    t1 = lt;
    t2 = ht;
  }
  if (t2 & 0x8000000000000000L) c1 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c1 ++;
  }
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 1) = c2;
  c2 = (unsigned long)0;
  {
    unsigned long l_0;
    unsigned long h_0;
    unsigned long m_1;
    h_0 = *(a + 1);
    l_0 = h_0 & (unsigned long)0xffffffffL;
    h_0 = (h_0 >> 32) & (unsigned long)0xffffffffL;
    m_1 = l_0 * h_0;
    l_0 *= l_0;
    h_0 *= h_0;
    h_0 += (m_1 & 0xffffffff80000000L) >> (32 - 1);
    m_1 = (m_1 & (unsigned long)0xffffffffL) << (32 + 1);
    l_0 = (l_0 + m_1) & 0xffffffffffffffffL;
    if (l_0 < m_1) h_0 ++;
    t1 = l_0;
    t2 = h_0;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 0) & (unsigned long)0xffffffffL;
  bh = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_2;
    unsigned long m1_0;
    unsigned long lt_0;
    unsigned long ht_0;
    lt_0 = t1;
    ht_0 = t2;
    m_2 = bh * lt_0;
    lt_0 = bl * lt_0;
    m1_0 = bl * ht_0;
    ht_0 = bh * ht_0;
    m_2 = (m_2 + m1_0) & 0xffffffffffffffffL;
    if (m_2 < m1_0) ht_0 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_0 += (m_2 >> 32) & (unsigned long)0xffffffffL;
    m1_0 = (m_2 << 32) & 0xffffffffffffffffL;
    lt_0 = (lt_0 + m1_0) & 0xffffffffffffffffL;
    if (lt_0 < m1_0) ht_0 ++;
    t1 = lt_0;
    t2 = ht_0;
  }
  if (t2 & 0x8000000000000000L) c2 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c2 ++;
  }
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 2) = c3;
  c3 = (unsigned long)0;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 0) & (unsigned long)0xffffffffL;
  bh = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_3;
    unsigned long m1_1;
    unsigned long lt_1;
    unsigned long ht_1;
    lt_1 = t1;
    ht_1 = t2;
    m_3 = bh * lt_1;
    lt_1 = bl * lt_1;
    m1_1 = bl * ht_1;
    ht_1 = bh * ht_1;
    m_3 = (m_3 + m1_1) & 0xffffffffffffffffL;
    if (m_3 < m1_1) ht_1 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_1 += (m_3 >> 32) & (unsigned long)0xffffffffL;
    m1_1 = (m_3 << 32) & 0xffffffffffffffffL;
    lt_1 = (lt_1 + m1_1) & 0xffffffffffffffffL;
    if (lt_1 < m1_1) ht_1 ++;
    t1 = lt_1;
    t2 = ht_1;
  }
  if (t2 & 0x8000000000000000L) c3 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c3 ++;
  }
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 1) & (unsigned long)0xffffffffL;
  bh = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_4;
    unsigned long m1_2;
    unsigned long lt_2;
    unsigned long ht_2;
    lt_2 = t1;
    ht_2 = t2;
    m_4 = bh * lt_2;
    lt_2 = bl * lt_2;
    m1_2 = bl * ht_2;
    ht_2 = bh * ht_2;
    m_4 = (m_4 + m1_2) & 0xffffffffffffffffL;
    if (m_4 < m1_2) ht_2 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_2 += (m_4 >> 32) & (unsigned long)0xffffffffL;
    m1_2 = (m_4 << 32) & 0xffffffffffffffffL;
    lt_2 = (lt_2 + m1_2) & 0xffffffffffffffffL;
    if (lt_2 < m1_2) ht_2 ++;
    t1 = lt_2;
    t2 = ht_2;
  }
  if (t2 & 0x8000000000000000L) c3 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c3 ++;
  }
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 3) = c1;
  c1 = (unsigned long)0;
  {
    unsigned long l_1;
    unsigned long h_1;
    unsigned long m_5;
    h_1 = *(a + 2);
    l_1 = h_1 & (unsigned long)0xffffffffL;
    h_1 = (h_1 >> 32) & (unsigned long)0xffffffffL;
    m_5 = l_1 * h_1;
    l_1 *= l_1;
    h_1 *= h_1;
    h_1 += (m_5 & 0xffffffff80000000L) >> (32 - 1);
    m_5 = (m_5 & (unsigned long)0xffffffffL) << (32 + 1);
    l_1 = (l_1 + m_5) & 0xffffffffffffffffL;
    if (l_1 < m_5) h_1 ++;
    t1 = l_1;
    t2 = h_1;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 1) & (unsigned long)0xffffffffL;
  bh = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_6;
    unsigned long m1_3;
    unsigned long lt_3;
    unsigned long ht_3;
    lt_3 = t1;
    ht_3 = t2;
    m_6 = bh * lt_3;
    lt_3 = bl * lt_3;
    m1_3 = bl * ht_3;
    ht_3 = bh * ht_3;
    m_6 = (m_6 + m1_3) & 0xffffffffffffffffL;
    if (m_6 < m1_3) ht_3 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_3 += (m_6 >> 32) & (unsigned long)0xffffffffL;
    m1_3 = (m_6 << 32) & 0xffffffffffffffffL;
    lt_3 = (lt_3 + m1_3) & 0xffffffffffffffffL;
    if (lt_3 < m1_3) ht_3 ++;
    t1 = lt_3;
    t2 = ht_3;
  }
  if (t2 & 0x8000000000000000L) c1 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c1 ++;
  }
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 4) & (unsigned long)0xffffffffL;
  t2 = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 0) & (unsigned long)0xffffffffL;
  bh = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_7;
    unsigned long m1_4;
    unsigned long lt_4;
    unsigned long ht_4;
    lt_4 = t1;
    ht_4 = t2;
    m_7 = bh * lt_4;
    lt_4 = bl * lt_4;
    m1_4 = bl * ht_4;
    ht_4 = bh * ht_4;
    m_7 = (m_7 + m1_4) & 0xffffffffffffffffL;
    if (m_7 < m1_4) ht_4 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_4 += (m_7 >> 32) & (unsigned long)0xffffffffL;
    m1_4 = (m_7 << 32) & 0xffffffffffffffffL;
    lt_4 = (lt_4 + m1_4) & 0xffffffffffffffffL;
    if (lt_4 < m1_4) ht_4 ++;
    t1 = lt_4;
    t2 = ht_4;
  }
  if (t2 & 0x8000000000000000L) c1 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c1 ++;
  }
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 4) = c2;
  c2 = (unsigned long)0;
  t1 = *(a + 5) & (unsigned long)0xffffffffL;
  t2 = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 0) & (unsigned long)0xffffffffL;
  bh = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_8;
    unsigned long m1_5;
    unsigned long lt_5;
    unsigned long ht_5;
    lt_5 = t1;
    ht_5 = t2;
    m_8 = bh * lt_5;
    lt_5 = bl * lt_5;
    m1_5 = bl * ht_5;
    ht_5 = bh * ht_5;
    m_8 = (m_8 + m1_5) & 0xffffffffffffffffL;
    if (m_8 < m1_5) ht_5 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_5 += (m_8 >> 32) & (unsigned long)0xffffffffL;
    m1_5 = (m_8 << 32) & 0xffffffffffffffffL;
    lt_5 = (lt_5 + m1_5) & 0xffffffffffffffffL;
    if (lt_5 < m1_5) ht_5 ++;
    t1 = lt_5;
    t2 = ht_5;
  }
  if (t2 & 0x8000000000000000L) c2 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c2 ++;
  }
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 4) & (unsigned long)0xffffffffL;
  t2 = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 1) & (unsigned long)0xffffffffL;
  bh = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_9;
    unsigned long m1_6;
    unsigned long lt_6;
    unsigned long ht_6;
    lt_6 = t1;
    ht_6 = t2;
    m_9 = bh * lt_6;
    lt_6 = bl * lt_6;
    m1_6 = bl * ht_6;
    ht_6 = bh * ht_6;
    m_9 = (m_9 + m1_6) & 0xffffffffffffffffL;
    if (m_9 < m1_6) ht_6 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_6 += (m_9 >> 32) & (unsigned long)0xffffffffL;
    m1_6 = (m_9 << 32) & 0xffffffffffffffffL;
    lt_6 = (lt_6 + m1_6) & 0xffffffffffffffffL;
    if (lt_6 < m1_6) ht_6 ++;
    t1 = lt_6;
    t2 = ht_6;
  }
  if (t2 & 0x8000000000000000L) c2 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c2 ++;
  }
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 2) & (unsigned long)0xffffffffL;
  bh = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_10;
    unsigned long m1_7;
    unsigned long lt_7;
    unsigned long ht_7;
    lt_7 = t1;
    ht_7 = t2;
    m_10 = bh * lt_7;
    lt_7 = bl * lt_7;
    m1_7 = bl * ht_7;
    ht_7 = bh * ht_7;
    m_10 = (m_10 + m1_7) & 0xffffffffffffffffL;
    if (m_10 < m1_7) ht_7 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_7 += (m_10 >> 32) & (unsigned long)0xffffffffL;
    m1_7 = (m_10 << 32) & 0xffffffffffffffffL;
    lt_7 = (lt_7 + m1_7) & 0xffffffffffffffffL;
    if (lt_7 < m1_7) ht_7 ++;
    t1 = lt_7;
    t2 = ht_7;
  }
  if (t2 & 0x8000000000000000L) c2 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c2 ++;
  }
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 5) = c3;
  c3 = (unsigned long)0;
  {
    unsigned long l_2;
    unsigned long h_2;
    unsigned long m_11;
    h_2 = *(a + 3);
    l_2 = h_2 & (unsigned long)0xffffffffL;
    h_2 = (h_2 >> 32) & (unsigned long)0xffffffffL;
    m_11 = l_2 * h_2;
    l_2 *= l_2;
    h_2 *= h_2;
    h_2 += (m_11 & 0xffffffff80000000L) >> (32 - 1);
    m_11 = (m_11 & (unsigned long)0xffffffffL) << (32 + 1);
    l_2 = (l_2 + m_11) & 0xffffffffffffffffL;
    if (l_2 < m_11) h_2 ++;
    t1 = l_2;
    t2 = h_2;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 4) & (unsigned long)0xffffffffL;
  t2 = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 2) & (unsigned long)0xffffffffL;
  bh = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_12;
    unsigned long m1_8;
    unsigned long lt_8;
    unsigned long ht_8;
    lt_8 = t1;
    ht_8 = t2;
    m_12 = bh * lt_8;
    lt_8 = bl * lt_8;
    m1_8 = bl * ht_8;
    ht_8 = bh * ht_8;
    m_12 = (m_12 + m1_8) & 0xffffffffffffffffL;
    if (m_12 < m1_8) ht_8 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_8 += (m_12 >> 32) & (unsigned long)0xffffffffL;
    m1_8 = (m_12 << 32) & 0xffffffffffffffffL;
    lt_8 = (lt_8 + m1_8) & 0xffffffffffffffffL;
    if (lt_8 < m1_8) ht_8 ++;
    t1 = lt_8;
    t2 = ht_8;
  }
  if (t2 & 0x8000000000000000L) c3 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c3 ++;
  }
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 5) & (unsigned long)0xffffffffL;
  t2 = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 1) & (unsigned long)0xffffffffL;
  bh = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_13;
    unsigned long m1_9;
    unsigned long lt_9;
    unsigned long ht_9;
    lt_9 = t1;
    ht_9 = t2;
    m_13 = bh * lt_9;
    lt_9 = bl * lt_9;
    m1_9 = bl * ht_9;
    ht_9 = bh * ht_9;
    m_13 = (m_13 + m1_9) & 0xffffffffffffffffL;
    if (m_13 < m1_9) ht_9 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_9 += (m_13 >> 32) & (unsigned long)0xffffffffL;
    m1_9 = (m_13 << 32) & 0xffffffffffffffffL;
    lt_9 = (lt_9 + m1_9) & 0xffffffffffffffffL;
    if (lt_9 < m1_9) ht_9 ++;
    t1 = lt_9;
    t2 = ht_9;
  }
  if (t2 & 0x8000000000000000L) c3 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c3 ++;
  }
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 0) & (unsigned long)0xffffffffL;
  bh = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_14;
    unsigned long m1_10;
    unsigned long lt_10;
    unsigned long ht_10;
    lt_10 = t1;
    ht_10 = t2;
    m_14 = bh * lt_10;
    lt_10 = bl * lt_10;
    m1_10 = bl * ht_10;
    ht_10 = bh * ht_10;
    m_14 = (m_14 + m1_10) & 0xffffffffffffffffL;
    if (m_14 < m1_10) ht_10 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_10 += (m_14 >> 32) & (unsigned long)0xffffffffL;
    m1_10 = (m_14 << 32) & 0xffffffffffffffffL;
    lt_10 = (lt_10 + m1_10) & 0xffffffffffffffffL;
    if (lt_10 < m1_10) ht_10 ++;
    t1 = lt_10;
    t2 = ht_10;
  }
  if (t2 & 0x8000000000000000L) c3 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c3 ++;
  }
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 6) = c1;
  c1 = (unsigned long)0;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 0) & (unsigned long)0xffffffffL;
  bh = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_15;
    unsigned long m1_11;
    unsigned long lt_11;
    unsigned long ht_11;
    lt_11 = t1;
    ht_11 = t2;
    m_15 = bh * lt_11;
    lt_11 = bl * lt_11;
    m1_11 = bl * ht_11;
    ht_11 = bh * ht_11;
    m_15 = (m_15 + m1_11) & 0xffffffffffffffffL;
    if (m_15 < m1_11) ht_11 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_11 += (m_15 >> 32) & (unsigned long)0xffffffffL;
    m1_11 = (m_15 << 32) & 0xffffffffffffffffL;
    lt_11 = (lt_11 + m1_11) & 0xffffffffffffffffL;
    if (lt_11 < m1_11) ht_11 ++;
    t1 = lt_11;
    t2 = ht_11;
  }
  if (t2 & 0x8000000000000000L) c1 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c1 ++;
  }
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 1) & (unsigned long)0xffffffffL;
  bh = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_16;
    unsigned long m1_12;
    unsigned long lt_12;
    unsigned long ht_12;
    lt_12 = t1;
    ht_12 = t2;
    m_16 = bh * lt_12;
    lt_12 = bl * lt_12;
    m1_12 = bl * ht_12;
    ht_12 = bh * ht_12;
    m_16 = (m_16 + m1_12) & 0xffffffffffffffffL;
    if (m_16 < m1_12) ht_12 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_12 += (m_16 >> 32) & (unsigned long)0xffffffffL;
    m1_12 = (m_16 << 32) & 0xffffffffffffffffL;
    lt_12 = (lt_12 + m1_12) & 0xffffffffffffffffL;
    if (lt_12 < m1_12) ht_12 ++;
    t1 = lt_12;
    t2 = ht_12;
  }
  if (t2 & 0x8000000000000000L) c1 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c1 ++;
  }
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 5) & (unsigned long)0xffffffffL;
  t2 = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 2) & (unsigned long)0xffffffffL;
  bh = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_17;
    unsigned long m1_13;
    unsigned long lt_13;
    unsigned long ht_13;
    lt_13 = t1;
    ht_13 = t2;
    m_17 = bh * lt_13;
    lt_13 = bl * lt_13;
    m1_13 = bl * ht_13;
    ht_13 = bh * ht_13;
    m_17 = (m_17 + m1_13) & 0xffffffffffffffffL;
    if (m_17 < m1_13) ht_13 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_13 += (m_17 >> 32) & (unsigned long)0xffffffffL;
    m1_13 = (m_17 << 32) & 0xffffffffffffffffL;
    lt_13 = (lt_13 + m1_13) & 0xffffffffffffffffL;
    if (lt_13 < m1_13) ht_13 ++;
    t1 = lt_13;
    t2 = ht_13;
  }
  if (t2 & 0x8000000000000000L) c1 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c1 ++;
  }
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 4) & (unsigned long)0xffffffffL;
  t2 = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 3) & (unsigned long)0xffffffffL;
  bh = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_18;
    unsigned long m1_14;
    unsigned long lt_14;
    unsigned long ht_14;
    lt_14 = t1;
    ht_14 = t2;
    m_18 = bh * lt_14;
    lt_14 = bl * lt_14;
    m1_14 = bl * ht_14;
    ht_14 = bh * ht_14;
    m_18 = (m_18 + m1_14) & 0xffffffffffffffffL;
    if (m_18 < m1_14) ht_14 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_14 += (m_18 >> 32) & (unsigned long)0xffffffffL;
    m1_14 = (m_18 << 32) & 0xffffffffffffffffL;
    lt_14 = (lt_14 + m1_14) & 0xffffffffffffffffL;
    if (lt_14 < m1_14) ht_14 ++;
    t1 = lt_14;
    t2 = ht_14;
  }
  if (t2 & 0x8000000000000000L) c1 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c1 ++;
  }
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 7) = c2;
  c2 = (unsigned long)0;
  {
    unsigned long l_3;
    unsigned long h_3;
    unsigned long m_19;
    h_3 = *(a + 4);
    l_3 = h_3 & (unsigned long)0xffffffffL;
    h_3 = (h_3 >> 32) & (unsigned long)0xffffffffL;
    m_19 = l_3 * h_3;
    l_3 *= l_3;
    h_3 *= h_3;
    h_3 += (m_19 & 0xffffffff80000000L) >> (32 - 1);
    m_19 = (m_19 & (unsigned long)0xffffffffL) << (32 + 1);
    l_3 = (l_3 + m_19) & 0xffffffffffffffffL;
    if (l_3 < m_19) h_3 ++;
    t1 = l_3;
    t2 = h_3;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 5) & (unsigned long)0xffffffffL;
  t2 = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 3) & (unsigned long)0xffffffffL;
  bh = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_20;
    unsigned long m1_15;
    unsigned long lt_15;
    unsigned long ht_15;
    lt_15 = t1;
    ht_15 = t2;
    m_20 = bh * lt_15;
    lt_15 = bl * lt_15;
    m1_15 = bl * ht_15;
    ht_15 = bh * ht_15;
    m_20 = (m_20 + m1_15) & 0xffffffffffffffffL;
    if (m_20 < m1_15) ht_15 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_15 += (m_20 >> 32) & (unsigned long)0xffffffffL;
    m1_15 = (m_20 << 32) & 0xffffffffffffffffL;
    lt_15 = (lt_15 + m1_15) & 0xffffffffffffffffL;
    if (lt_15 < m1_15) ht_15 ++;
    t1 = lt_15;
    t2 = ht_15;
  }
  if (t2 & 0x8000000000000000L) c2 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c2 ++;
  }
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 2) & (unsigned long)0xffffffffL;
  bh = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_21;
    unsigned long m1_16;
    unsigned long lt_16;
    unsigned long ht_16;
    lt_16 = t1;
    ht_16 = t2;
    m_21 = bh * lt_16;
    lt_16 = bl * lt_16;
    m1_16 = bl * ht_16;
    ht_16 = bh * ht_16;
    m_21 = (m_21 + m1_16) & 0xffffffffffffffffL;
    if (m_21 < m1_16) ht_16 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_16 += (m_21 >> 32) & (unsigned long)0xffffffffL;
    m1_16 = (m_21 << 32) & 0xffffffffffffffffL;
    lt_16 = (lt_16 + m1_16) & 0xffffffffffffffffL;
    if (lt_16 < m1_16) ht_16 ++;
    t1 = lt_16;
    t2 = ht_16;
  }
  if (t2 & 0x8000000000000000L) c2 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c2 ++;
  }
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 1) & (unsigned long)0xffffffffL;
  bh = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_22;
    unsigned long m1_17;
    unsigned long lt_17;
    unsigned long ht_17;
    lt_17 = t1;
    ht_17 = t2;
    m_22 = bh * lt_17;
    lt_17 = bl * lt_17;
    m1_17 = bl * ht_17;
    ht_17 = bh * ht_17;
    m_22 = (m_22 + m1_17) & 0xffffffffffffffffL;
    if (m_22 < m1_17) ht_17 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_17 += (m_22 >> 32) & (unsigned long)0xffffffffL;
    m1_17 = (m_22 << 32) & 0xffffffffffffffffL;
    lt_17 = (lt_17 + m1_17) & 0xffffffffffffffffL;
    if (lt_17 < m1_17) ht_17 ++;
    t1 = lt_17;
    t2 = ht_17;
  }
  if (t2 & 0x8000000000000000L) c2 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c2 ++;
  }
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 8) = c3;
  c3 = (unsigned long)0;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 2) & (unsigned long)0xffffffffL;
  bh = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_23;
    unsigned long m1_18;
    unsigned long lt_18;
    unsigned long ht_18;
    lt_18 = t1;
    ht_18 = t2;
    m_23 = bh * lt_18;
    lt_18 = bl * lt_18;
    m1_18 = bl * ht_18;
    ht_18 = bh * ht_18;
    m_23 = (m_23 + m1_18) & 0xffffffffffffffffL;
    if (m_23 < m1_18) ht_18 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_18 += (m_23 >> 32) & (unsigned long)0xffffffffL;
    m1_18 = (m_23 << 32) & 0xffffffffffffffffL;
    lt_18 = (lt_18 + m1_18) & 0xffffffffffffffffL;
    if (lt_18 < m1_18) ht_18 ++;
    t1 = lt_18;
    t2 = ht_18;
  }
  if (t2 & 0x8000000000000000L) c3 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c3 ++;
  }
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 3) & (unsigned long)0xffffffffL;
  bh = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_24;
    unsigned long m1_19;
    unsigned long lt_19;
    unsigned long ht_19;
    lt_19 = t1;
    ht_19 = t2;
    m_24 = bh * lt_19;
    lt_19 = bl * lt_19;
    m1_19 = bl * ht_19;
    ht_19 = bh * ht_19;
    m_24 = (m_24 + m1_19) & 0xffffffffffffffffL;
    if (m_24 < m1_19) ht_19 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_19 += (m_24 >> 32) & (unsigned long)0xffffffffL;
    m1_19 = (m_24 << 32) & 0xffffffffffffffffL;
    lt_19 = (lt_19 + m1_19) & 0xffffffffffffffffL;
    if (lt_19 < m1_19) ht_19 ++;
    t1 = lt_19;
    t2 = ht_19;
  }
  if (t2 & 0x8000000000000000L) c3 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c3 ++;
  }
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 5) & (unsigned long)0xffffffffL;
  t2 = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 4) & (unsigned long)0xffffffffL;
  bh = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_25;
    unsigned long m1_20;
    unsigned long lt_20;
    unsigned long ht_20;
    lt_20 = t1;
    ht_20 = t2;
    m_25 = bh * lt_20;
    lt_20 = bl * lt_20;
    m1_20 = bl * ht_20;
    ht_20 = bh * ht_20;
    m_25 = (m_25 + m1_20) & 0xffffffffffffffffL;
    if (m_25 < m1_20) ht_20 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_20 += (m_25 >> 32) & (unsigned long)0xffffffffL;
    m1_20 = (m_25 << 32) & 0xffffffffffffffffL;
    lt_20 = (lt_20 + m1_20) & 0xffffffffffffffffL;
    if (lt_20 < m1_20) ht_20 ++;
    t1 = lt_20;
    t2 = ht_20;
  }
  if (t2 & 0x8000000000000000L) c3 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c3 ++;
  }
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 9) = c1;
  c1 = (unsigned long)0;
  {
    unsigned long l_4;
    unsigned long h_4;
    unsigned long m_26;
    h_4 = *(a + 5);
    l_4 = h_4 & (unsigned long)0xffffffffL;
    h_4 = (h_4 >> 32) & (unsigned long)0xffffffffL;
    m_26 = l_4 * h_4;
    l_4 *= l_4;
    h_4 *= h_4;
    h_4 += (m_26 & 0xffffffff80000000L) >> (32 - 1);
    m_26 = (m_26 & (unsigned long)0xffffffffL) << (32 + 1);
    l_4 = (l_4 + m_26) & 0xffffffffffffffffL;
    if (l_4 < m_26) h_4 ++;
    t1 = l_4;
    t2 = h_4;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 4) & (unsigned long)0xffffffffL;
  bh = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_27;
    unsigned long m1_21;
    unsigned long lt_21;
    unsigned long ht_21;
    lt_21 = t1;
    ht_21 = t2;
    m_27 = bh * lt_21;
    lt_21 = bl * lt_21;
    m1_21 = bl * ht_21;
    ht_21 = bh * ht_21;
    m_27 = (m_27 + m1_21) & 0xffffffffffffffffL;
    if (m_27 < m1_21) ht_21 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_21 += (m_27 >> 32) & (unsigned long)0xffffffffL;
    m1_21 = (m_27 << 32) & 0xffffffffffffffffL;
    lt_21 = (lt_21 + m1_21) & 0xffffffffffffffffL;
    if (lt_21 < m1_21) ht_21 ++;
    t1 = lt_21;
    t2 = ht_21;
  }
  if (t2 & 0x8000000000000000L) c1 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c1 ++;
  }
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 3) & (unsigned long)0xffffffffL;
  bh = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_28;
    unsigned long m1_22;
    unsigned long lt_22;
    unsigned long ht_22;
    lt_22 = t1;
    ht_22 = t2;
    m_28 = bh * lt_22;
    lt_22 = bl * lt_22;
    m1_22 = bl * ht_22;
    ht_22 = bh * ht_22;
    m_28 = (m_28 + m1_22) & 0xffffffffffffffffL;
    if (m_28 < m1_22) ht_22 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_22 += (m_28 >> 32) & (unsigned long)0xffffffffL;
    m1_22 = (m_28 << 32) & 0xffffffffffffffffL;
    lt_22 = (lt_22 + m1_22) & 0xffffffffffffffffL;
    if (lt_22 < m1_22) ht_22 ++;
    t1 = lt_22;
    t2 = ht_22;
  }
  if (t2 & 0x8000000000000000L) c1 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c1 ++;
  }
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 10) = c2;
  c2 = (unsigned long)0;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 4) & (unsigned long)0xffffffffL;
  bh = (*(a + 4) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_29;
    unsigned long m1_23;
    unsigned long lt_23;
    unsigned long ht_23;
    lt_23 = t1;
    ht_23 = t2;
    m_29 = bh * lt_23;
    lt_23 = bl * lt_23;
    m1_23 = bl * ht_23;
    ht_23 = bh * ht_23;
    m_29 = (m_29 + m1_23) & 0xffffffffffffffffL;
    if (m_29 < m1_23) ht_23 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_23 += (m_29 >> 32) & (unsigned long)0xffffffffL;
    m1_23 = (m_29 << 32) & 0xffffffffffffffffL;
    lt_23 = (lt_23 + m1_23) & 0xffffffffffffffffL;
    if (lt_23 < m1_23) ht_23 ++;
    t1 = lt_23;
    t2 = ht_23;
  }
  if (t2 & 0x8000000000000000L) c2 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c2 ++;
  }
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 6) & (unsigned long)0xffffffffL;
  t2 = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 5) & (unsigned long)0xffffffffL;
  bh = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_30;
    unsigned long m1_24;
    unsigned long lt_24;
    unsigned long ht_24;
    lt_24 = t1;
    ht_24 = t2;
    m_30 = bh * lt_24;
    lt_24 = bl * lt_24;
    m1_24 = bl * ht_24;
    ht_24 = bh * ht_24;
    m_30 = (m_30 + m1_24) & 0xffffffffffffffffL;
    if (m_30 < m1_24) ht_24 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_24 += (m_30 >> 32) & (unsigned long)0xffffffffL;
    m1_24 = (m_30 << 32) & 0xffffffffffffffffL;
    lt_24 = (lt_24 + m1_24) & 0xffffffffffffffffL;
    if (lt_24 < m1_24) ht_24 ++;
    t1 = lt_24;
    t2 = ht_24;
  }
  if (t2 & 0x8000000000000000L) c2 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c2 ++;
  }
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 11) = c3;
  c3 = (unsigned long)0;
  {
    unsigned long l_5;
    unsigned long h_5;
    unsigned long m_31;
    h_5 = *(a + 6);
    l_5 = h_5 & (unsigned long)0xffffffffL;
    h_5 = (h_5 >> 32) & (unsigned long)0xffffffffL;
    m_31 = l_5 * h_5;
    l_5 *= l_5;
    h_5 *= h_5;
    h_5 += (m_31 & 0xffffffff80000000L) >> (32 - 1);
    m_31 = (m_31 & (unsigned long)0xffffffffL) << (32 + 1);
    l_5 = (l_5 + m_31) & 0xffffffffffffffffL;
    if (l_5 < m_31) h_5 ++;
    t1 = l_5;
    t2 = h_5;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 5) & (unsigned long)0xffffffffL;
  bh = (*(a + 5) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_32;
    unsigned long m1_25;
    unsigned long lt_25;
    unsigned long ht_25;
    lt_25 = t1;
    ht_25 = t2;
    m_32 = bh * lt_25;
    lt_25 = bl * lt_25;
    m1_25 = bl * ht_25;
    ht_25 = bh * ht_25;
    m_32 = (m_32 + m1_25) & 0xffffffffffffffffL;
    if (m_32 < m1_25) ht_25 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_25 += (m_32 >> 32) & (unsigned long)0xffffffffL;
    m1_25 = (m_32 << 32) & 0xffffffffffffffffL;
    lt_25 = (lt_25 + m1_25) & 0xffffffffffffffffL;
    if (lt_25 < m1_25) ht_25 ++;
    t1 = lt_25;
    t2 = ht_25;
  }
  if (t2 & 0x8000000000000000L) c3 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c3 ++;
  }
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 12) = c1;
  c1 = (unsigned long)0;
  t1 = *(a + 7) & (unsigned long)0xffffffffL;
  t2 = (*(a + 7) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 6) & (unsigned long)0xffffffffL;
  bh = (*(a + 6) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_33;
    unsigned long m1_26;
    unsigned long lt_26;
    unsigned long ht_26;
    lt_26 = t1;
    ht_26 = t2;
    m_33 = bh * lt_26;
    lt_26 = bl * lt_26;
    m1_26 = bl * ht_26;
    ht_26 = bh * ht_26;
    m_33 = (m_33 + m1_26) & 0xffffffffffffffffL;
    if (m_33 < m1_26) ht_26 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_26 += (m_33 >> 32) & (unsigned long)0xffffffffL;
    m1_26 = (m_33 << 32) & 0xffffffffffffffffL;
    lt_26 = (lt_26 + m1_26) & 0xffffffffffffffffL;
    if (lt_26 < m1_26) ht_26 ++;
    t1 = lt_26;
    t2 = ht_26;
  }
  if (t2 & 0x8000000000000000L) c1 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c1 ++;
  }
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 13) = c2;
  c2 = (unsigned long)0;
  {
    unsigned long l_6;
    unsigned long h_6;
    unsigned long m_34;
    h_6 = *(a + 7);
    l_6 = h_6 & (unsigned long)0xffffffffL;
    h_6 = (h_6 >> 32) & (unsigned long)0xffffffffL;
    m_34 = l_6 * h_6;
    l_6 *= l_6;
    h_6 *= h_6;
    h_6 += (m_34 & 0xffffffff80000000L) >> (32 - 1);
    m_34 = (m_34 & (unsigned long)0xffffffffL) << (32 + 1);
    l_6 = (l_6 + m_34) & 0xffffffffffffffffL;
    if (l_6 < m_34) h_6 ++;
    t1 = l_6;
    t2 = h_6;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 14) = c3;
  *(r + 15) = c1;
  return;
}

void bn_sqr_comba4(unsigned long *r, unsigned long const *a)
{
  unsigned long bl;
  unsigned long bh;
  unsigned long t1;
  unsigned long t2;
  unsigned long c1;
  unsigned long c2;
  unsigned long c3;
  c1 = (unsigned long)0;
  c2 = (unsigned long)0;
  c3 = (unsigned long)0;
  {
    unsigned long l;
    unsigned long h;
    unsigned long m;
    h = *(a + 0);
    l = h & (unsigned long)0xffffffffL;
    h = (h >> 32) & (unsigned long)0xffffffffL;
    m = l * h;
    l *= l;
    h *= h;
    h += (m & 0xffffffff80000000L) >> (32 - 1);
    m = (m & (unsigned long)0xffffffffL) << (32 + 1);
    l = (l + m) & 0xffffffffffffffffL;
    if (l < m) h ++;
    t1 = l;
    t2 = h;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 0) = c1;
  c1 = (unsigned long)0;
  t1 = *(a + 1) & (unsigned long)0xffffffffL;
  t2 = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 0) & (unsigned long)0xffffffffL;
  bh = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_0;
    unsigned long m1;
    unsigned long lt;
    unsigned long ht;
    lt = t1;
    ht = t2;
    m_0 = bh * lt;
    lt = bl * lt;
    m1 = bl * ht;
    ht = bh * ht;
    m_0 = (m_0 + m1) & 0xffffffffffffffffL;
    if (m_0 < m1) ht += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht += (m_0 >> 32) & (unsigned long)0xffffffffL;
    m1 = (m_0 << 32) & 0xffffffffffffffffL;
    lt = (lt + m1) & 0xffffffffffffffffL;
    if (lt < m1) ht ++;
    t1 = lt;
    t2 = ht;
  }
  if (t2 & 0x8000000000000000L) c1 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c1 ++;
  }
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 1) = c2;
  c2 = (unsigned long)0;
  {
    unsigned long l_0;
    unsigned long h_0;
    unsigned long m_1;
    h_0 = *(a + 1);
    l_0 = h_0 & (unsigned long)0xffffffffL;
    h_0 = (h_0 >> 32) & (unsigned long)0xffffffffL;
    m_1 = l_0 * h_0;
    l_0 *= l_0;
    h_0 *= h_0;
    h_0 += (m_1 & 0xffffffff80000000L) >> (32 - 1);
    m_1 = (m_1 & (unsigned long)0xffffffffL) << (32 + 1);
    l_0 = (l_0 + m_1) & 0xffffffffffffffffL;
    if (l_0 < m_1) h_0 ++;
    t1 = l_0;
    t2 = h_0;
  }
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) t2 ++;
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 0) & (unsigned long)0xffffffffL;
  bh = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_2;
    unsigned long m1_0;
    unsigned long lt_0;
    unsigned long ht_0;
    lt_0 = t1;
    ht_0 = t2;
    m_2 = bh * lt_0;
    lt_0 = bl * lt_0;
    m1_0 = bl * ht_0;
    ht_0 = bh * ht_0;
    m_2 = (m_2 + m1_0) & 0xffffffffffffffffL;
    if (m_2 < m1_0) ht_0 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_0 += (m_2 >> 32) & (unsigned long)0xffffffffL;
    m1_0 = (m_2 << 32) & 0xffffffffffffffffL;
    lt_0 = (lt_0 + m1_0) & 0xffffffffffffffffL;
    if (lt_0 < m1_0) ht_0 ++;
    t1 = lt_0;
    t2 = ht_0;
  }
  if (t2 & 0x8000000000000000L) c2 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c2 ++;
  }
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 2) = c3;
  c3 = (unsigned long)0;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 0) & (unsigned long)0xffffffffL;
  bh = (*(a + 0) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_3;
    unsigned long m1_1;
    unsigned long lt_1;
    unsigned long ht_1;
    lt_1 = t1;
    ht_1 = t2;
    m_3 = bh * lt_1;
    lt_1 = bl * lt_1;
    m1_1 = bl * ht_1;
    ht_1 = bh * ht_1;
    m_3 = (m_3 + m1_1) & 0xffffffffffffffffL;
    if (m_3 < m1_1) ht_1 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_1 += (m_3 >> 32) & (unsigned long)0xffffffffL;
    m1_1 = (m_3 << 32) & 0xffffffffffffffffL;
    lt_1 = (lt_1 + m1_1) & 0xffffffffffffffffL;
    if (lt_1 < m1_1) ht_1 ++;
    t1 = lt_1;
    t2 = ht_1;
  }
  if (t2 & 0x8000000000000000L) c3 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c3 ++;
  }
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  t1 = *(a + 2) & (unsigned long)0xffffffffL;
  t2 = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 1) & (unsigned long)0xffffffffL;
  bh = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_4;
    unsigned long m1_2;
    unsigned long lt_2;
    unsigned long ht_2;
    lt_2 = t1;
    ht_2 = t2;
    m_4 = bh * lt_2;
    lt_2 = bl * lt_2;
    m1_2 = bl * ht_2;
    ht_2 = bh * ht_2;
    m_4 = (m_4 + m1_2) & 0xffffffffffffffffL;
    if (m_4 < m1_2) ht_2 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_2 += (m_4 >> 32) & (unsigned long)0xffffffffL;
    m1_2 = (m_4 << 32) & 0xffffffffffffffffL;
    lt_2 = (lt_2 + m1_2) & 0xffffffffffffffffL;
    if (lt_2 < m1_2) ht_2 ++;
    t1 = lt_2;
    t2 = ht_2;
  }
  if (t2 & 0x8000000000000000L) c3 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c3 ++;
  }
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 3) = c1;
  c1 = (unsigned long)0;
  {
    unsigned long l_1;
    unsigned long h_1;
    unsigned long m_5;
    h_1 = *(a + 2);
    l_1 = h_1 & (unsigned long)0xffffffffL;
    h_1 = (h_1 >> 32) & (unsigned long)0xffffffffL;
    m_5 = l_1 * h_1;
    l_1 *= l_1;
    h_1 *= h_1;
    h_1 += (m_5 & 0xffffffff80000000L) >> (32 - 1);
    m_5 = (m_5 & (unsigned long)0xffffffffL) << (32 + 1);
    l_1 = (l_1 + m_5) & 0xffffffffffffffffL;
    if (l_1 < m_5) h_1 ++;
    t1 = l_1;
    t2 = h_1;
  }
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) t2 ++;
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 1) & (unsigned long)0xffffffffL;
  bh = (*(a + 1) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_6;
    unsigned long m1_3;
    unsigned long lt_3;
    unsigned long ht_3;
    lt_3 = t1;
    ht_3 = t2;
    m_6 = bh * lt_3;
    lt_3 = bl * lt_3;
    m1_3 = bl * ht_3;
    ht_3 = bh * ht_3;
    m_6 = (m_6 + m1_3) & 0xffffffffffffffffL;
    if (m_6 < m1_3) ht_3 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_3 += (m_6 >> 32) & (unsigned long)0xffffffffL;
    m1_3 = (m_6 << 32) & 0xffffffffffffffffL;
    lt_3 = (lt_3 + m1_3) & 0xffffffffffffffffL;
    if (lt_3 < m1_3) ht_3 ++;
    t1 = lt_3;
    t2 = ht_3;
  }
  if (t2 & 0x8000000000000000L) c1 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c2 = (c2 + t1) & 0xffffffffffffffffL;
  if (c2 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c1 ++;
  }
  c3 = (c3 + t2) & 0xffffffffffffffffL;
  if (c3 < t2) c1 ++;
  *(r + 4) = c2;
  c2 = (unsigned long)0;
  t1 = *(a + 3) & (unsigned long)0xffffffffL;
  t2 = (*(a + 3) >> 32) & (unsigned long)0xffffffffL;
  bl = *(a + 2) & (unsigned long)0xffffffffL;
  bh = (*(a + 2) >> 32) & (unsigned long)0xffffffffL;
  {
    unsigned long m_7;
    unsigned long m1_4;
    unsigned long lt_4;
    unsigned long ht_4;
    lt_4 = t1;
    ht_4 = t2;
    m_7 = bh * lt_4;
    lt_4 = bl * lt_4;
    m1_4 = bl * ht_4;
    ht_4 = bh * ht_4;
    m_7 = (m_7 + m1_4) & 0xffffffffffffffffL;
    if (m_7 < m1_4) ht_4 += ((unsigned long)1 << 32) & 0xffffffffffffffffL;
    ht_4 += (m_7 >> 32) & (unsigned long)0xffffffffL;
    m1_4 = (m_7 << 32) & 0xffffffffffffffffL;
    lt_4 = (lt_4 + m1_4) & 0xffffffffffffffffL;
    if (lt_4 < m1_4) ht_4 ++;
    t1 = lt_4;
    t2 = ht_4;
  }
  if (t2 & 0x8000000000000000L) c2 ++;
  t2 = (t2 + t2) & 0xffffffffffffffffL;
  if (t1 & 0x8000000000000000L) t2 ++;
  t1 = (t1 + t1) & 0xffffffffffffffffL;
  c3 = (c3 + t1) & 0xffffffffffffffffL;
  if (c3 < t1) {
    t2 ++;
    if ((t2 & 0xffffffffffffffffL) == (unsigned long)0) c2 ++;
  }
  c1 = (c1 + t2) & 0xffffffffffffffffL;
  if (c1 < t2) c2 ++;
  *(r + 5) = c3;
  c3 = (unsigned long)0;
  {
    unsigned long l_2;
    unsigned long h_2;
    unsigned long m_8;
    h_2 = *(a + 3);
    l_2 = h_2 & (unsigned long)0xffffffffL;
    h_2 = (h_2 >> 32) & (unsigned long)0xffffffffL;
    m_8 = l_2 * h_2;
    l_2 *= l_2;
    h_2 *= h_2;
    h_2 += (m_8 & 0xffffffff80000000L) >> (32 - 1);
    m_8 = (m_8 & (unsigned long)0xffffffffL) << (32 + 1);
    l_2 = (l_2 + m_8) & 0xffffffffffffffffL;
    if (l_2 < m_8) h_2 ++;
    t1 = l_2;
    t2 = h_2;
  }
  c1 = (c1 + t1) & 0xffffffffffffffffL;
  if (c1 < t1) t2 ++;
  c2 = (c2 + t2) & 0xffffffffffffffffL;
  if (c2 < t2) c3 ++;
  *(r + 6) = c1;
  *(r + 7) = c2;
  return;
}

int bn_mul_mont(unsigned long *rp, unsigned long const *ap,
                unsigned long const *bp, unsigned long const *np,
                unsigned long const *n0, int num)
{
  int __retres;
  __retres = 0;
  return __retres;
}

BIGNUM *BN_bin2bn(unsigned char const *s, int len, BIGNUM *ret);

BIGNUM *get_rfc2409_prime_768(BIGNUM *bn);

BIGNUM *get_rfc2409_prime_1024(BIGNUM *bn);

BIGNUM *get_rfc3526_prime_1536(BIGNUM *bn);

BIGNUM *get_rfc3526_prime_2048(BIGNUM *bn);

BIGNUM *get_rfc3526_prime_3072(BIGNUM *bn);

BIGNUM *get_rfc3526_prime_4096(BIGNUM *bn);

BIGNUM *get_rfc3526_prime_6144(BIGNUM *bn);

BIGNUM *get_rfc3526_prime_8192(BIGNUM *bn);

static unsigned char const RFC2409_PRIME_768[96] =   
                                                     {(unsigned char)0xFF,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xC9,
                                                      (unsigned char)0x0F,
                                                      (unsigned char)0xDA,
                                                      (unsigned char)0xA2,
                                                      (unsigned char)0x21,
                                                      (unsigned char)0x68,
                                                      (unsigned char)0xC2,
                                                      (unsigned char)0x34,
                                                      (unsigned char)0xC4,
                                                      (unsigned char)0xC6,
                                                      (unsigned char)0x62,
                                                      (unsigned char)0x8B,
                                                      (unsigned char)0x80,
                                                      (unsigned char)0xDC,
                                                      (unsigned char)0x1C,
                                                      (unsigned char)0xD1,
                                                      (unsigned char)0x29,
                                                      (unsigned char)0x02,
                                                      (unsigned char)0x4E,
                                                      (unsigned char)0x08,
                                                      (unsigned char)0x8A,
                                                      (unsigned char)0x67,
                                                      (unsigned char)0xCC,
                                                      (unsigned char)0x74,
                                                      (unsigned char)0x02,
                                                      (unsigned char)0x0B,
                                                      (unsigned char)0xBE,
                                                      (unsigned char)0xA6,
                                                      (unsigned char)0x3B,
                                                      (unsigned char)0x13,
                                                      (unsigned char)0x9B,
                                                      (unsigned char)0x22,
                                                      (unsigned char)0x51,
                                                      (unsigned char)0x4A,
                                                      (unsigned char)0x08,
                                                      (unsigned char)0x79,
                                                      (unsigned char)0x8E,
                                                      (unsigned char)0x34,
                                                      (unsigned char)0x04,
                                                      (unsigned char)0xDD,
                                                      (unsigned char)0xEF,
                                                      (unsigned char)0x95,
                                                      (unsigned char)0x19,
                                                      (unsigned char)0xB3,
                                                      (unsigned char)0xCD,
                                                      (unsigned char)0x3A,
                                                      (unsigned char)0x43,
                                                      (unsigned char)0x1B,
                                                      (unsigned char)0x30,
                                                      (unsigned char)0x2B,
                                                      (unsigned char)0x0A,
                                                      (unsigned char)0x6D,
                                                      (unsigned char)0xF2,
                                                      (unsigned char)0x5F,
                                                      (unsigned char)0x14,
                                                      (unsigned char)0x37,
                                                      (unsigned char)0x4F,
                                                      (unsigned char)0xE1,
                                                      (unsigned char)0x35,
                                                      (unsigned char)0x6D,
                                                      (unsigned char)0x6D,
                                                      (unsigned char)0x51,
                                                      (unsigned char)0xC2,
                                                      (unsigned char)0x45,
                                                      (unsigned char)0xE4,
                                                      (unsigned char)0x85,
                                                      (unsigned char)0xB5,
                                                      (unsigned char)0x76,
                                                      (unsigned char)0x62,
                                                      (unsigned char)0x5E,
                                                      (unsigned char)0x7E,
                                                      (unsigned char)0xC6,
                                                      (unsigned char)0xF4,
                                                      (unsigned char)0x4C,
                                                      (unsigned char)0x42,
                                                      (unsigned char)0xE9,
                                                      (unsigned char)0xA6,
                                                      (unsigned char)0x3A,
                                                      (unsigned char)0x36,
                                                      (unsigned char)0x20,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xFF,
                                                      (unsigned char)0xFF};
BIGNUM *get_rfc2409_prime_768(BIGNUM *bn)
{
  BIGNUM *tmp;
  tmp = BN_bin2bn(RFC2409_PRIME_768,(int)sizeof(RFC2409_PRIME_768),bn);
  return tmp;
}

static unsigned char const RFC2409_PRIME_1024[128] =   
                                                       {(unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0x0F,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x68,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0xC4,
                                                        (unsigned char)0xC6,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0x8B,
                                                        (unsigned char)0x80,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0xD1,
                                                        (unsigned char)0x29,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x4E,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0x67,
                                                        (unsigned char)0xCC,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xBE,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x3B,
                                                        (unsigned char)0x13,
                                                        (unsigned char)0x9B,
                                                        (unsigned char)0x22,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x79,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0xDD,
                                                        (unsigned char)0xEF,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x19,
                                                        (unsigned char)0xB3,
                                                        (unsigned char)0xCD,
                                                        (unsigned char)0x3A,
                                                        (unsigned char)0x43,
                                                        (unsigned char)0x1B,
                                                        (unsigned char)0x30,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0x0A,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0xF2,
                                                        (unsigned char)0x5F,
                                                        (unsigned char)0x14,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0x4F,
                                                        (unsigned char)0xE1,
                                                        (unsigned char)0x35,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x45,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0xB5,
                                                        (unsigned char)0x76,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0x5E,
                                                        (unsigned char)0x7E,
                                                        (unsigned char)0xC6,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x4C,
                                                        (unsigned char)0x42,
                                                        (unsigned char)0xE9,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0x5C,
                                                        (unsigned char)0xB6,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0xB7,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0xEE,
                                                        (unsigned char)0x38,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0xFB,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0x89,
                                                        (unsigned char)0x9F,
                                                        (unsigned char)0xA5,
                                                        (unsigned char)0xAE,
                                                        (unsigned char)0x9F,
                                                        (unsigned char)0x24,
                                                        (unsigned char)0x11,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0x4B,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0xE6,
                                                        (unsigned char)0x49,
                                                        (unsigned char)0x28,
                                                        (unsigned char)0x66,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0xE6,
                                                        (unsigned char)0x53,
                                                        (unsigned char)0x81,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF};
BIGNUM *get_rfc2409_prime_1024(BIGNUM *bn)
{
  BIGNUM *tmp;
  tmp = BN_bin2bn(RFC2409_PRIME_1024,(int)sizeof(RFC2409_PRIME_1024),bn);
  return tmp;
}

static unsigned char const RFC3526_PRIME_1536[192] =   
                                                       {(unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0x0F,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x68,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0xC4,
                                                        (unsigned char)0xC6,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0x8B,
                                                        (unsigned char)0x80,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0xD1,
                                                        (unsigned char)0x29,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x4E,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0x67,
                                                        (unsigned char)0xCC,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xBE,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x3B,
                                                        (unsigned char)0x13,
                                                        (unsigned char)0x9B,
                                                        (unsigned char)0x22,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x79,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0xDD,
                                                        (unsigned char)0xEF,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x19,
                                                        (unsigned char)0xB3,
                                                        (unsigned char)0xCD,
                                                        (unsigned char)0x3A,
                                                        (unsigned char)0x43,
                                                        (unsigned char)0x1B,
                                                        (unsigned char)0x30,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0x0A,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0xF2,
                                                        (unsigned char)0x5F,
                                                        (unsigned char)0x14,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0x4F,
                                                        (unsigned char)0xE1,
                                                        (unsigned char)0x35,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x45,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0xB5,
                                                        (unsigned char)0x76,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0x5E,
                                                        (unsigned char)0x7E,
                                                        (unsigned char)0xC6,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x4C,
                                                        (unsigned char)0x42,
                                                        (unsigned char)0xE9,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0x5C,
                                                        (unsigned char)0xB6,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0xB7,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0xEE,
                                                        (unsigned char)0x38,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0xFB,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0x89,
                                                        (unsigned char)0x9F,
                                                        (unsigned char)0xA5,
                                                        (unsigned char)0xAE,
                                                        (unsigned char)0x9F,
                                                        (unsigned char)0x24,
                                                        (unsigned char)0x11,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0x4B,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0xE6,
                                                        (unsigned char)0x49,
                                                        (unsigned char)0x28,
                                                        (unsigned char)0x66,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0x5B,
                                                        (unsigned char)0x3D,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x00,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0xB8,
                                                        (unsigned char)0xA1,
                                                        (unsigned char)0x63,
                                                        (unsigned char)0xBF,
                                                        (unsigned char)0x05,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0x48,
                                                        (unsigned char)0x36,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0x55,
                                                        (unsigned char)0xD3,
                                                        (unsigned char)0x9A,
                                                        (unsigned char)0x69,
                                                        (unsigned char)0x16,
                                                        (unsigned char)0x3F,
                                                        (unsigned char)0xA8,
                                                        (unsigned char)0xFD,
                                                        (unsigned char)0x24,
                                                        (unsigned char)0xCF,
                                                        (unsigned char)0x5F,
                                                        (unsigned char)0x83,
                                                        (unsigned char)0x65,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0x23,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0xA3,
                                                        (unsigned char)0xAD,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0xF3,
                                                        (unsigned char)0x56,
                                                        (unsigned char)0x20,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0x52,
                                                        (unsigned char)0xBB,
                                                        (unsigned char)0x9E,
                                                        (unsigned char)0xD5,
                                                        (unsigned char)0x29,
                                                        (unsigned char)0x07,
                                                        (unsigned char)0x70,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x67,
                                                        (unsigned char)0x0C,
                                                        (unsigned char)0x35,
                                                        (unsigned char)0x4E,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0xBC,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0xF1,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0x6C,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0xCA,
                                                        (unsigned char)0x23,
                                                        (unsigned char)0x73,
                                                        (unsigned char)0x27,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF};
BIGNUM *get_rfc3526_prime_1536(BIGNUM *bn)
{
  BIGNUM *tmp;
  tmp = BN_bin2bn(RFC3526_PRIME_1536,(int)sizeof(RFC3526_PRIME_1536),bn);
  return tmp;
}

static unsigned char const RFC3526_PRIME_2048[256] =   
                                                       {(unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0x0F,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x68,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0xC4,
                                                        (unsigned char)0xC6,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0x8B,
                                                        (unsigned char)0x80,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0xD1,
                                                        (unsigned char)0x29,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x4E,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0x67,
                                                        (unsigned char)0xCC,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xBE,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x3B,
                                                        (unsigned char)0x13,
                                                        (unsigned char)0x9B,
                                                        (unsigned char)0x22,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x79,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0xDD,
                                                        (unsigned char)0xEF,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x19,
                                                        (unsigned char)0xB3,
                                                        (unsigned char)0xCD,
                                                        (unsigned char)0x3A,
                                                        (unsigned char)0x43,
                                                        (unsigned char)0x1B,
                                                        (unsigned char)0x30,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0x0A,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0xF2,
                                                        (unsigned char)0x5F,
                                                        (unsigned char)0x14,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0x4F,
                                                        (unsigned char)0xE1,
                                                        (unsigned char)0x35,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x45,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0xB5,
                                                        (unsigned char)0x76,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0x5E,
                                                        (unsigned char)0x7E,
                                                        (unsigned char)0xC6,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x4C,
                                                        (unsigned char)0x42,
                                                        (unsigned char)0xE9,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0x5C,
                                                        (unsigned char)0xB6,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0xB7,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0xEE,
                                                        (unsigned char)0x38,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0xFB,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0x89,
                                                        (unsigned char)0x9F,
                                                        (unsigned char)0xA5,
                                                        (unsigned char)0xAE,
                                                        (unsigned char)0x9F,
                                                        (unsigned char)0x24,
                                                        (unsigned char)0x11,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0x4B,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0xE6,
                                                        (unsigned char)0x49,
                                                        (unsigned char)0x28,
                                                        (unsigned char)0x66,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0x5B,
                                                        (unsigned char)0x3D,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x00,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0xB8,
                                                        (unsigned char)0xA1,
                                                        (unsigned char)0x63,
                                                        (unsigned char)0xBF,
                                                        (unsigned char)0x05,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0x48,
                                                        (unsigned char)0x36,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0x55,
                                                        (unsigned char)0xD3,
                                                        (unsigned char)0x9A,
                                                        (unsigned char)0x69,
                                                        (unsigned char)0x16,
                                                        (unsigned char)0x3F,
                                                        (unsigned char)0xA8,
                                                        (unsigned char)0xFD,
                                                        (unsigned char)0x24,
                                                        (unsigned char)0xCF,
                                                        (unsigned char)0x5F,
                                                        (unsigned char)0x83,
                                                        (unsigned char)0x65,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0x23,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0xA3,
                                                        (unsigned char)0xAD,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0xF3,
                                                        (unsigned char)0x56,
                                                        (unsigned char)0x20,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0x52,
                                                        (unsigned char)0xBB,
                                                        (unsigned char)0x9E,
                                                        (unsigned char)0xD5,
                                                        (unsigned char)0x29,
                                                        (unsigned char)0x07,
                                                        (unsigned char)0x70,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x67,
                                                        (unsigned char)0x0C,
                                                        (unsigned char)0x35,
                                                        (unsigned char)0x4E,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0xBC,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0xF1,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0x6C,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0xCA,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0x32,
                                                        (unsigned char)0x90,
                                                        (unsigned char)0x5E,
                                                        (unsigned char)0x46,
                                                        (unsigned char)0x2E,
                                                        (unsigned char)0x36,
                                                        (unsigned char)0xCE,
                                                        (unsigned char)0x3B,
                                                        (unsigned char)0xE3,
                                                        (unsigned char)0x9E,
                                                        (unsigned char)0x77,
                                                        (unsigned char)0x2C,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x0E,
                                                        (unsigned char)0x86,
                                                        (unsigned char)0x03,
                                                        (unsigned char)0x9B,
                                                        (unsigned char)0x27,
                                                        (unsigned char)0x83,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0x07,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0x8F,
                                                        (unsigned char)0xB5,
                                                        (unsigned char)0xC5,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0xF0,
                                                        (unsigned char)0x6F,
                                                        (unsigned char)0x4C,
                                                        (unsigned char)0x52,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0xDE,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0xCB,
                                                        (unsigned char)0xF6,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x58,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x39,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x49,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0xEA,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x6A,
                                                        (unsigned char)0xE5,
                                                        (unsigned char)0x15,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0x26,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0xFA,
                                                        (unsigned char)0x05,
                                                        (unsigned char)0x10,
                                                        (unsigned char)0x15,
                                                        (unsigned char)0x72,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0xAC,
                                                        (unsigned char)0xAA,
                                                        (unsigned char)0x68,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF};
BIGNUM *get_rfc3526_prime_2048(BIGNUM *bn)
{
  BIGNUM *tmp;
  tmp = BN_bin2bn(RFC3526_PRIME_2048,(int)sizeof(RFC3526_PRIME_2048),bn);
  return tmp;
}

static unsigned char const RFC3526_PRIME_3072[384] =   
                                                       {(unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0x0F,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x68,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0xC4,
                                                        (unsigned char)0xC6,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0x8B,
                                                        (unsigned char)0x80,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0xD1,
                                                        (unsigned char)0x29,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x4E,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0x67,
                                                        (unsigned char)0xCC,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xBE,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x3B,
                                                        (unsigned char)0x13,
                                                        (unsigned char)0x9B,
                                                        (unsigned char)0x22,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x79,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0xDD,
                                                        (unsigned char)0xEF,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x19,
                                                        (unsigned char)0xB3,
                                                        (unsigned char)0xCD,
                                                        (unsigned char)0x3A,
                                                        (unsigned char)0x43,
                                                        (unsigned char)0x1B,
                                                        (unsigned char)0x30,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0x0A,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0xF2,
                                                        (unsigned char)0x5F,
                                                        (unsigned char)0x14,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0x4F,
                                                        (unsigned char)0xE1,
                                                        (unsigned char)0x35,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x45,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0xB5,
                                                        (unsigned char)0x76,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0x5E,
                                                        (unsigned char)0x7E,
                                                        (unsigned char)0xC6,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x4C,
                                                        (unsigned char)0x42,
                                                        (unsigned char)0xE9,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0x5C,
                                                        (unsigned char)0xB6,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0xB7,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0xEE,
                                                        (unsigned char)0x38,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0xFB,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0x89,
                                                        (unsigned char)0x9F,
                                                        (unsigned char)0xA5,
                                                        (unsigned char)0xAE,
                                                        (unsigned char)0x9F,
                                                        (unsigned char)0x24,
                                                        (unsigned char)0x11,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0x4B,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0xE6,
                                                        (unsigned char)0x49,
                                                        (unsigned char)0x28,
                                                        (unsigned char)0x66,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0x5B,
                                                        (unsigned char)0x3D,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x00,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0xB8,
                                                        (unsigned char)0xA1,
                                                        (unsigned char)0x63,
                                                        (unsigned char)0xBF,
                                                        (unsigned char)0x05,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0x48,
                                                        (unsigned char)0x36,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0x55,
                                                        (unsigned char)0xD3,
                                                        (unsigned char)0x9A,
                                                        (unsigned char)0x69,
                                                        (unsigned char)0x16,
                                                        (unsigned char)0x3F,
                                                        (unsigned char)0xA8,
                                                        (unsigned char)0xFD,
                                                        (unsigned char)0x24,
                                                        (unsigned char)0xCF,
                                                        (unsigned char)0x5F,
                                                        (unsigned char)0x83,
                                                        (unsigned char)0x65,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0x23,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0xA3,
                                                        (unsigned char)0xAD,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0xF3,
                                                        (unsigned char)0x56,
                                                        (unsigned char)0x20,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0x52,
                                                        (unsigned char)0xBB,
                                                        (unsigned char)0x9E,
                                                        (unsigned char)0xD5,
                                                        (unsigned char)0x29,
                                                        (unsigned char)0x07,
                                                        (unsigned char)0x70,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x67,
                                                        (unsigned char)0x0C,
                                                        (unsigned char)0x35,
                                                        (unsigned char)0x4E,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0xBC,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0xF1,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0x6C,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0xCA,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0x32,
                                                        (unsigned char)0x90,
                                                        (unsigned char)0x5E,
                                                        (unsigned char)0x46,
                                                        (unsigned char)0x2E,
                                                        (unsigned char)0x36,
                                                        (unsigned char)0xCE,
                                                        (unsigned char)0x3B,
                                                        (unsigned char)0xE3,
                                                        (unsigned char)0x9E,
                                                        (unsigned char)0x77,
                                                        (unsigned char)0x2C,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x0E,
                                                        (unsigned char)0x86,
                                                        (unsigned char)0x03,
                                                        (unsigned char)0x9B,
                                                        (unsigned char)0x27,
                                                        (unsigned char)0x83,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0x07,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0x8F,
                                                        (unsigned char)0xB5,
                                                        (unsigned char)0xC5,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0xF0,
                                                        (unsigned char)0x6F,
                                                        (unsigned char)0x4C,
                                                        (unsigned char)0x52,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0xDE,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0xCB,
                                                        (unsigned char)0xF6,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x58,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x39,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x49,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0xEA,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x6A,
                                                        (unsigned char)0xE5,
                                                        (unsigned char)0x15,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0x26,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0xFA,
                                                        (unsigned char)0x05,
                                                        (unsigned char)0x10,
                                                        (unsigned char)0x15,
                                                        (unsigned char)0x72,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0xAA,
                                                        (unsigned char)0xC4,
                                                        (unsigned char)0x2D,
                                                        (unsigned char)0xAD,
                                                        (unsigned char)0x33,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x0D,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0x50,
                                                        (unsigned char)0x7A,
                                                        (unsigned char)0x33,
                                                        (unsigned char)0xA8,
                                                        (unsigned char)0x55,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0xAB,
                                                        (unsigned char)0xDF,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0xBA,
                                                        (unsigned char)0x64,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0xFB,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0x58,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0xEF,
                                                        (unsigned char)0x0A,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0xEA,
                                                        (unsigned char)0x71,
                                                        (unsigned char)0x57,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0x0C,
                                                        (unsigned char)0x7D,
                                                        (unsigned char)0xB3,
                                                        (unsigned char)0x97,
                                                        (unsigned char)0x0F,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0xE1,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0xC7,
                                                        (unsigned char)0xAB,
                                                        (unsigned char)0xF5,
                                                        (unsigned char)0xAE,
                                                        (unsigned char)0x8C,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0x09,
                                                        (unsigned char)0x33,
                                                        (unsigned char)0xD7,
                                                        (unsigned char)0x1E,
                                                        (unsigned char)0x8C,
                                                        (unsigned char)0x94,
                                                        (unsigned char)0xE0,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0x25,
                                                        (unsigned char)0x61,
                                                        (unsigned char)0x9D,
                                                        (unsigned char)0xCE,
                                                        (unsigned char)0xE3,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0x26,
                                                        (unsigned char)0x1A,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0xEE,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0xF1,
                                                        (unsigned char)0x2F,
                                                        (unsigned char)0xFA,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0xD9,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x64,
                                                        (unsigned char)0xD8,
                                                        (unsigned char)0x76,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x73,
                                                        (unsigned char)0x3E,
                                                        (unsigned char)0xC8,
                                                        (unsigned char)0x6A,
                                                        (unsigned char)0x64,
                                                        (unsigned char)0x52,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x7B,
                                                        (unsigned char)0x20,
                                                        (unsigned char)0x0C,
                                                        (unsigned char)0xBB,
                                                        (unsigned char)0xE1,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x57,
                                                        (unsigned char)0x7A,
                                                        (unsigned char)0x61,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0x6C,
                                                        (unsigned char)0x77,
                                                        (unsigned char)0x09,
                                                        (unsigned char)0x88,
                                                        (unsigned char)0xC0,
                                                        (unsigned char)0xBA,
                                                        (unsigned char)0xD9,
                                                        (unsigned char)0x46,
                                                        (unsigned char)0xE2,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0xE2,
                                                        (unsigned char)0x4F,
                                                        (unsigned char)0xA0,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0xE5,
                                                        (unsigned char)0xAB,
                                                        (unsigned char)0x31,
                                                        (unsigned char)0x43,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0x5B,
                                                        (unsigned char)0xFC,
                                                        (unsigned char)0xE0,
                                                        (unsigned char)0xFD,
                                                        (unsigned char)0x10,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0x4B,
                                                        (unsigned char)0x82,
                                                        (unsigned char)0xD1,
                                                        (unsigned char)0x20,
                                                        (unsigned char)0xA9,
                                                        (unsigned char)0x3A,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0xCA,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF};
BIGNUM *get_rfc3526_prime_3072(BIGNUM *bn)
{
  BIGNUM *tmp;
  tmp = BN_bin2bn(RFC3526_PRIME_3072,(int)sizeof(RFC3526_PRIME_3072),bn);
  return tmp;
}

static unsigned char const RFC3526_PRIME_4096[512] =   
                                                       {(unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0x0F,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x68,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0xC4,
                                                        (unsigned char)0xC6,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0x8B,
                                                        (unsigned char)0x80,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0xD1,
                                                        (unsigned char)0x29,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x4E,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0x67,
                                                        (unsigned char)0xCC,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xBE,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x3B,
                                                        (unsigned char)0x13,
                                                        (unsigned char)0x9B,
                                                        (unsigned char)0x22,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x79,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0xDD,
                                                        (unsigned char)0xEF,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x19,
                                                        (unsigned char)0xB3,
                                                        (unsigned char)0xCD,
                                                        (unsigned char)0x3A,
                                                        (unsigned char)0x43,
                                                        (unsigned char)0x1B,
                                                        (unsigned char)0x30,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0x0A,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0xF2,
                                                        (unsigned char)0x5F,
                                                        (unsigned char)0x14,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0x4F,
                                                        (unsigned char)0xE1,
                                                        (unsigned char)0x35,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x45,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0xB5,
                                                        (unsigned char)0x76,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0x5E,
                                                        (unsigned char)0x7E,
                                                        (unsigned char)0xC6,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x4C,
                                                        (unsigned char)0x42,
                                                        (unsigned char)0xE9,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0x5C,
                                                        (unsigned char)0xB6,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0xB7,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0xEE,
                                                        (unsigned char)0x38,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0xFB,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0x89,
                                                        (unsigned char)0x9F,
                                                        (unsigned char)0xA5,
                                                        (unsigned char)0xAE,
                                                        (unsigned char)0x9F,
                                                        (unsigned char)0x24,
                                                        (unsigned char)0x11,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0x4B,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0xE6,
                                                        (unsigned char)0x49,
                                                        (unsigned char)0x28,
                                                        (unsigned char)0x66,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0x5B,
                                                        (unsigned char)0x3D,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x00,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0xB8,
                                                        (unsigned char)0xA1,
                                                        (unsigned char)0x63,
                                                        (unsigned char)0xBF,
                                                        (unsigned char)0x05,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0x48,
                                                        (unsigned char)0x36,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0x55,
                                                        (unsigned char)0xD3,
                                                        (unsigned char)0x9A,
                                                        (unsigned char)0x69,
                                                        (unsigned char)0x16,
                                                        (unsigned char)0x3F,
                                                        (unsigned char)0xA8,
                                                        (unsigned char)0xFD,
                                                        (unsigned char)0x24,
                                                        (unsigned char)0xCF,
                                                        (unsigned char)0x5F,
                                                        (unsigned char)0x83,
                                                        (unsigned char)0x65,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0x23,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0xA3,
                                                        (unsigned char)0xAD,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0xF3,
                                                        (unsigned char)0x56,
                                                        (unsigned char)0x20,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0x52,
                                                        (unsigned char)0xBB,
                                                        (unsigned char)0x9E,
                                                        (unsigned char)0xD5,
                                                        (unsigned char)0x29,
                                                        (unsigned char)0x07,
                                                        (unsigned char)0x70,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x67,
                                                        (unsigned char)0x0C,
                                                        (unsigned char)0x35,
                                                        (unsigned char)0x4E,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0xBC,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0xF1,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0x6C,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0xCA,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0x32,
                                                        (unsigned char)0x90,
                                                        (unsigned char)0x5E,
                                                        (unsigned char)0x46,
                                                        (unsigned char)0x2E,
                                                        (unsigned char)0x36,
                                                        (unsigned char)0xCE,
                                                        (unsigned char)0x3B,
                                                        (unsigned char)0xE3,
                                                        (unsigned char)0x9E,
                                                        (unsigned char)0x77,
                                                        (unsigned char)0x2C,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x0E,
                                                        (unsigned char)0x86,
                                                        (unsigned char)0x03,
                                                        (unsigned char)0x9B,
                                                        (unsigned char)0x27,
                                                        (unsigned char)0x83,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0x07,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0x8F,
                                                        (unsigned char)0xB5,
                                                        (unsigned char)0xC5,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0xF0,
                                                        (unsigned char)0x6F,
                                                        (unsigned char)0x4C,
                                                        (unsigned char)0x52,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0xDE,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0xCB,
                                                        (unsigned char)0xF6,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x58,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x39,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x49,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0xEA,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x6A,
                                                        (unsigned char)0xE5,
                                                        (unsigned char)0x15,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0x26,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0xFA,
                                                        (unsigned char)0x05,
                                                        (unsigned char)0x10,
                                                        (unsigned char)0x15,
                                                        (unsigned char)0x72,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0xAA,
                                                        (unsigned char)0xC4,
                                                        (unsigned char)0x2D,
                                                        (unsigned char)0xAD,
                                                        (unsigned char)0x33,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x0D,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0x50,
                                                        (unsigned char)0x7A,
                                                        (unsigned char)0x33,
                                                        (unsigned char)0xA8,
                                                        (unsigned char)0x55,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0xAB,
                                                        (unsigned char)0xDF,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0xBA,
                                                        (unsigned char)0x64,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0xFB,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0x58,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0xEF,
                                                        (unsigned char)0x0A,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0xEA,
                                                        (unsigned char)0x71,
                                                        (unsigned char)0x57,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0x0C,
                                                        (unsigned char)0x7D,
                                                        (unsigned char)0xB3,
                                                        (unsigned char)0x97,
                                                        (unsigned char)0x0F,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0xE1,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0xC7,
                                                        (unsigned char)0xAB,
                                                        (unsigned char)0xF5,
                                                        (unsigned char)0xAE,
                                                        (unsigned char)0x8C,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0x09,
                                                        (unsigned char)0x33,
                                                        (unsigned char)0xD7,
                                                        (unsigned char)0x1E,
                                                        (unsigned char)0x8C,
                                                        (unsigned char)0x94,
                                                        (unsigned char)0xE0,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0x25,
                                                        (unsigned char)0x61,
                                                        (unsigned char)0x9D,
                                                        (unsigned char)0xCE,
                                                        (unsigned char)0xE3,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0x26,
                                                        (unsigned char)0x1A,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0xEE,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0xF1,
                                                        (unsigned char)0x2F,
                                                        (unsigned char)0xFA,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0xD9,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x64,
                                                        (unsigned char)0xD8,
                                                        (unsigned char)0x76,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x73,
                                                        (unsigned char)0x3E,
                                                        (unsigned char)0xC8,
                                                        (unsigned char)0x6A,
                                                        (unsigned char)0x64,
                                                        (unsigned char)0x52,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x7B,
                                                        (unsigned char)0x20,
                                                        (unsigned char)0x0C,
                                                        (unsigned char)0xBB,
                                                        (unsigned char)0xE1,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x57,
                                                        (unsigned char)0x7A,
                                                        (unsigned char)0x61,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0x6C,
                                                        (unsigned char)0x77,
                                                        (unsigned char)0x09,
                                                        (unsigned char)0x88,
                                                        (unsigned char)0xC0,
                                                        (unsigned char)0xBA,
                                                        (unsigned char)0xD9,
                                                        (unsigned char)0x46,
                                                        (unsigned char)0xE2,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0xE2,
                                                        (unsigned char)0x4F,
                                                        (unsigned char)0xA0,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0xE5,
                                                        (unsigned char)0xAB,
                                                        (unsigned char)0x31,
                                                        (unsigned char)0x43,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0x5B,
                                                        (unsigned char)0xFC,
                                                        (unsigned char)0xE0,
                                                        (unsigned char)0xFD,
                                                        (unsigned char)0x10,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0x4B,
                                                        (unsigned char)0x82,
                                                        (unsigned char)0xD1,
                                                        (unsigned char)0x20,
                                                        (unsigned char)0xA9,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x01,
                                                        (unsigned char)0x1A,
                                                        (unsigned char)0x72,
                                                        (unsigned char)0x3C,
                                                        (unsigned char)0x12,
                                                        (unsigned char)0xA7,
                                                        (unsigned char)0x87,
                                                        (unsigned char)0xE6,
                                                        (unsigned char)0xD7,
                                                        (unsigned char)0x88,
                                                        (unsigned char)0x71,
                                                        (unsigned char)0x9A,
                                                        (unsigned char)0x10,
                                                        (unsigned char)0xBD,
                                                        (unsigned char)0xBA,
                                                        (unsigned char)0x5B,
                                                        (unsigned char)0x26,
                                                        (unsigned char)0x99,
                                                        (unsigned char)0xC3,
                                                        (unsigned char)0x27,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x6A,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0xE2,
                                                        (unsigned char)0x3C,
                                                        (unsigned char)0x1A,
                                                        (unsigned char)0x94,
                                                        (unsigned char)0x68,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0xB6,
                                                        (unsigned char)0x15,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0x25,
                                                        (unsigned char)0x83,
                                                        (unsigned char)0xE9,
                                                        (unsigned char)0xCA,
                                                        (unsigned char)0x2A,
                                                        (unsigned char)0xD4,
                                                        (unsigned char)0x4C,
                                                        (unsigned char)0xE8,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0xBB,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0xDE,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0xF9,
                                                        (unsigned char)0x2E,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0xFC,
                                                        (unsigned char)0x14,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0xBE,
                                                        (unsigned char)0xCA,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x28,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0x59,
                                                        (unsigned char)0x47,
                                                        (unsigned char)0x4E,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0xC0,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0x99,
                                                        (unsigned char)0xB2,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x4F,
                                                        (unsigned char)0xA0,
                                                        (unsigned char)0x90,
                                                        (unsigned char)0xC3,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0x23,
                                                        (unsigned char)0x3B,
                                                        (unsigned char)0xA1,
                                                        (unsigned char)0x86,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0x5B,
                                                        (unsigned char)0xE7,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0x61,
                                                        (unsigned char)0x29,
                                                        (unsigned char)0x70,
                                                        (unsigned char)0xCE,
                                                        (unsigned char)0xE2,
                                                        (unsigned char)0xD7,
                                                        (unsigned char)0xAF,
                                                        (unsigned char)0xB8,
                                                        (unsigned char)0x1B,
                                                        (unsigned char)0xDD,
                                                        (unsigned char)0x76,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x70,
                                                        (unsigned char)0x48,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0xD0,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0x91,
                                                        (unsigned char)0x27,
                                                        (unsigned char)0xD5,
                                                        (unsigned char)0xB0,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0xA9,
                                                        (unsigned char)0x93,
                                                        (unsigned char)0xB4,
                                                        (unsigned char)0xEA,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0x8D,
                                                        (unsigned char)0x8F,
                                                        (unsigned char)0xDD,
                                                        (unsigned char)0xC1,
                                                        (unsigned char)0x86,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xB7,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0x90,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0xC0,
                                                        (unsigned char)0x8F,
                                                        (unsigned char)0x4D,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x35,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0x31,
                                                        (unsigned char)0x99,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF};
BIGNUM *get_rfc3526_prime_4096(BIGNUM *bn)
{
  BIGNUM *tmp;
  tmp = BN_bin2bn(RFC3526_PRIME_4096,(int)sizeof(RFC3526_PRIME_4096),bn);
  return tmp;
}

static unsigned char const RFC3526_PRIME_6144[768] =   
                                                       {(unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0x0F,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x68,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0xC4,
                                                        (unsigned char)0xC6,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0x8B,
                                                        (unsigned char)0x80,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0xD1,
                                                        (unsigned char)0x29,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x4E,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0x67,
                                                        (unsigned char)0xCC,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xBE,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x3B,
                                                        (unsigned char)0x13,
                                                        (unsigned char)0x9B,
                                                        (unsigned char)0x22,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x79,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0xDD,
                                                        (unsigned char)0xEF,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x19,
                                                        (unsigned char)0xB3,
                                                        (unsigned char)0xCD,
                                                        (unsigned char)0x3A,
                                                        (unsigned char)0x43,
                                                        (unsigned char)0x1B,
                                                        (unsigned char)0x30,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0x0A,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0xF2,
                                                        (unsigned char)0x5F,
                                                        (unsigned char)0x14,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0x4F,
                                                        (unsigned char)0xE1,
                                                        (unsigned char)0x35,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x45,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0xB5,
                                                        (unsigned char)0x76,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0x5E,
                                                        (unsigned char)0x7E,
                                                        (unsigned char)0xC6,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x4C,
                                                        (unsigned char)0x42,
                                                        (unsigned char)0xE9,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0x5C,
                                                        (unsigned char)0xB6,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0xB7,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0xEE,
                                                        (unsigned char)0x38,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0xFB,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0x89,
                                                        (unsigned char)0x9F,
                                                        (unsigned char)0xA5,
                                                        (unsigned char)0xAE,
                                                        (unsigned char)0x9F,
                                                        (unsigned char)0x24,
                                                        (unsigned char)0x11,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0x4B,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0xE6,
                                                        (unsigned char)0x49,
                                                        (unsigned char)0x28,
                                                        (unsigned char)0x66,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0x5B,
                                                        (unsigned char)0x3D,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0x00,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0xB8,
                                                        (unsigned char)0xA1,
                                                        (unsigned char)0x63,
                                                        (unsigned char)0xBF,
                                                        (unsigned char)0x05,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0x48,
                                                        (unsigned char)0x36,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0x55,
                                                        (unsigned char)0xD3,
                                                        (unsigned char)0x9A,
                                                        (unsigned char)0x69,
                                                        (unsigned char)0x16,
                                                        (unsigned char)0x3F,
                                                        (unsigned char)0xA8,
                                                        (unsigned char)0xFD,
                                                        (unsigned char)0x24,
                                                        (unsigned char)0xCF,
                                                        (unsigned char)0x5F,
                                                        (unsigned char)0x83,
                                                        (unsigned char)0x65,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0x23,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0xA3,
                                                        (unsigned char)0xAD,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0x62,
                                                        (unsigned char)0xF3,
                                                        (unsigned char)0x56,
                                                        (unsigned char)0x20,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0x52,
                                                        (unsigned char)0xBB,
                                                        (unsigned char)0x9E,
                                                        (unsigned char)0xD5,
                                                        (unsigned char)0x29,
                                                        (unsigned char)0x07,
                                                        (unsigned char)0x70,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x67,
                                                        (unsigned char)0x0C,
                                                        (unsigned char)0x35,
                                                        (unsigned char)0x4E,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0xBC,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0xF1,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0x6C,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0xCA,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0x32,
                                                        (unsigned char)0x90,
                                                        (unsigned char)0x5E,
                                                        (unsigned char)0x46,
                                                        (unsigned char)0x2E,
                                                        (unsigned char)0x36,
                                                        (unsigned char)0xCE,
                                                        (unsigned char)0x3B,
                                                        (unsigned char)0xE3,
                                                        (unsigned char)0x9E,
                                                        (unsigned char)0x77,
                                                        (unsigned char)0x2C,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x0E,
                                                        (unsigned char)0x86,
                                                        (unsigned char)0x03,
                                                        (unsigned char)0x9B,
                                                        (unsigned char)0x27,
                                                        (unsigned char)0x83,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0x07,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0x8F,
                                                        (unsigned char)0xB5,
                                                        (unsigned char)0xC5,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0xF0,
                                                        (unsigned char)0x6F,
                                                        (unsigned char)0x4C,
                                                        (unsigned char)0x52,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0xDE,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0xCB,
                                                        (unsigned char)0xF6,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x58,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x39,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x49,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0xEA,
                                                        (unsigned char)0x95,
                                                        (unsigned char)0x6A,
                                                        (unsigned char)0xE5,
                                                        (unsigned char)0x15,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0x26,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0xFA,
                                                        (unsigned char)0x05,
                                                        (unsigned char)0x10,
                                                        (unsigned char)0x15,
                                                        (unsigned char)0x72,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0xAA,
                                                        (unsigned char)0xC4,
                                                        (unsigned char)0x2D,
                                                        (unsigned char)0xAD,
                                                        (unsigned char)0x33,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x0D,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0x50,
                                                        (unsigned char)0x7A,
                                                        (unsigned char)0x33,
                                                        (unsigned char)0xA8,
                                                        (unsigned char)0x55,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0xAB,
                                                        (unsigned char)0xDF,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0xBA,
                                                        (unsigned char)0x64,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0xFB,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0x58,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0xEF,
                                                        (unsigned char)0x0A,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0xEA,
                                                        (unsigned char)0x71,
                                                        (unsigned char)0x57,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0x0C,
                                                        (unsigned char)0x7D,
                                                        (unsigned char)0xB3,
                                                        (unsigned char)0x97,
                                                        (unsigned char)0x0F,
                                                        (unsigned char)0x85,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0xE1,
                                                        (unsigned char)0xE4,
                                                        (unsigned char)0xC7,
                                                        (unsigned char)0xAB,
                                                        (unsigned char)0xF5,
                                                        (unsigned char)0xAE,
                                                        (unsigned char)0x8C,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0x09,
                                                        (unsigned char)0x33,
                                                        (unsigned char)0xD7,
                                                        (unsigned char)0x1E,
                                                        (unsigned char)0x8C,
                                                        (unsigned char)0x94,
                                                        (unsigned char)0xE0,
                                                        (unsigned char)0x4A,
                                                        (unsigned char)0x25,
                                                        (unsigned char)0x61,
                                                        (unsigned char)0x9D,
                                                        (unsigned char)0xCE,
                                                        (unsigned char)0xE3,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0x26,
                                                        (unsigned char)0x1A,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0xEE,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0xF1,
                                                        (unsigned char)0x2F,
                                                        (unsigned char)0xFA,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0xD9,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x64,
                                                        (unsigned char)0xD8,
                                                        (unsigned char)0x76,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x73,
                                                        (unsigned char)0x3E,
                                                        (unsigned char)0xC8,
                                                        (unsigned char)0x6A,
                                                        (unsigned char)0x64,
                                                        (unsigned char)0x52,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x7B,
                                                        (unsigned char)0x20,
                                                        (unsigned char)0x0C,
                                                        (unsigned char)0xBB,
                                                        (unsigned char)0xE1,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x57,
                                                        (unsigned char)0x7A,
                                                        (unsigned char)0x61,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0x6C,
                                                        (unsigned char)0x77,
                                                        (unsigned char)0x09,
                                                        (unsigned char)0x88,
                                                        (unsigned char)0xC0,
                                                        (unsigned char)0xBA,
                                                        (unsigned char)0xD9,
                                                        (unsigned char)0x46,
                                                        (unsigned char)0xE2,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0xE2,
                                                        (unsigned char)0x4F,
                                                        (unsigned char)0xA0,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0xE5,
                                                        (unsigned char)0xAB,
                                                        (unsigned char)0x31,
                                                        (unsigned char)0x43,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0x5B,
                                                        (unsigned char)0xFC,
                                                        (unsigned char)0xE0,
                                                        (unsigned char)0xFD,
                                                        (unsigned char)0x10,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0x4B,
                                                        (unsigned char)0x82,
                                                        (unsigned char)0xD1,
                                                        (unsigned char)0x20,
                                                        (unsigned char)0xA9,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x08,
                                                        (unsigned char)0x01,
                                                        (unsigned char)0x1A,
                                                        (unsigned char)0x72,
                                                        (unsigned char)0x3C,
                                                        (unsigned char)0x12,
                                                        (unsigned char)0xA7,
                                                        (unsigned char)0x87,
                                                        (unsigned char)0xE6,
                                                        (unsigned char)0xD7,
                                                        (unsigned char)0x88,
                                                        (unsigned char)0x71,
                                                        (unsigned char)0x9A,
                                                        (unsigned char)0x10,
                                                        (unsigned char)0xBD,
                                                        (unsigned char)0xBA,
                                                        (unsigned char)0x5B,
                                                        (unsigned char)0x26,
                                                        (unsigned char)0x99,
                                                        (unsigned char)0xC3,
                                                        (unsigned char)0x27,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0x6A,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0xE2,
                                                        (unsigned char)0x3C,
                                                        (unsigned char)0x1A,
                                                        (unsigned char)0x94,
                                                        (unsigned char)0x68,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0xB6,
                                                        (unsigned char)0x15,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0x25,
                                                        (unsigned char)0x83,
                                                        (unsigned char)0xE9,
                                                        (unsigned char)0xCA,
                                                        (unsigned char)0x2A,
                                                        (unsigned char)0xD4,
                                                        (unsigned char)0x4C,
                                                        (unsigned char)0xE8,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0xBB,
                                                        (unsigned char)0xC2,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0xDE,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0xF9,
                                                        (unsigned char)0x2E,
                                                        (unsigned char)0x8E,
                                                        (unsigned char)0xFC,
                                                        (unsigned char)0x14,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0xBE,
                                                        (unsigned char)0xCA,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0x28,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0x59,
                                                        (unsigned char)0x47,
                                                        (unsigned char)0x4E,
                                                        (unsigned char)0x6B,
                                                        (unsigned char)0xC0,
                                                        (unsigned char)0x5D,
                                                        (unsigned char)0x99,
                                                        (unsigned char)0xB2,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x4F,
                                                        (unsigned char)0xA0,
                                                        (unsigned char)0x90,
                                                        (unsigned char)0xC3,
                                                        (unsigned char)0xA2,
                                                        (unsigned char)0x23,
                                                        (unsigned char)0x3B,
                                                        (unsigned char)0xA1,
                                                        (unsigned char)0x86,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0x5B,
                                                        (unsigned char)0xE7,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0x61,
                                                        (unsigned char)0x29,
                                                        (unsigned char)0x70,
                                                        (unsigned char)0xCE,
                                                        (unsigned char)0xE2,
                                                        (unsigned char)0xD7,
                                                        (unsigned char)0xAF,
                                                        (unsigned char)0xB8,
                                                        (unsigned char)0x1B,
                                                        (unsigned char)0xDD,
                                                        (unsigned char)0x76,
                                                        (unsigned char)0x21,
                                                        (unsigned char)0x70,
                                                        (unsigned char)0x48,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0xD0,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0x91,
                                                        (unsigned char)0x27,
                                                        (unsigned char)0xD5,
                                                        (unsigned char)0xB0,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0xA9,
                                                        (unsigned char)0x93,
                                                        (unsigned char)0xB4,
                                                        (unsigned char)0xEA,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0x8D,
                                                        (unsigned char)0x8F,
                                                        (unsigned char)0xDD,
                                                        (unsigned char)0xC1,
                                                        (unsigned char)0x86,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xB7,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0x90,
                                                        (unsigned char)0xA6,
                                                        (unsigned char)0xC0,
                                                        (unsigned char)0x8F,
                                                        (unsigned char)0x4D,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x35,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0x34,
                                                        (unsigned char)0x02,
                                                        (unsigned char)0x84,
                                                        (unsigned char)0x92,
                                                        (unsigned char)0x36,
                                                        (unsigned char)0xC3,
                                                        (unsigned char)0xFA,
                                                        (unsigned char)0xB4,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0x7C,
                                                        (unsigned char)0x70,
                                                        (unsigned char)0x26,
                                                        (unsigned char)0xC1,
                                                        (unsigned char)0xD4,
                                                        (unsigned char)0xDC,
                                                        (unsigned char)0xB2,
                                                        (unsigned char)0x60,
                                                        (unsigned char)0x26,
                                                        (unsigned char)0x46,
                                                        (unsigned char)0xDE,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0x75,
                                                        (unsigned char)0x1E,
                                                        (unsigned char)0x76,
                                                        (unsigned char)0x3D,
                                                        (unsigned char)0xBA,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0xBD,
                                                        (unsigned char)0xF8,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0x94,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0xAD,
                                                        (unsigned char)0x9E,
                                                        (unsigned char)0x53,
                                                        (unsigned char)0x0E,
                                                        (unsigned char)0xE5,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0x38,
                                                        (unsigned char)0x2F,
                                                        (unsigned char)0x41,
                                                        (unsigned char)0x30,
                                                        (unsigned char)0x01,
                                                        (unsigned char)0xAE,
                                                        (unsigned char)0xB0,
                                                        (unsigned char)0x6A,
                                                        (unsigned char)0x53,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0x90,
                                                        (unsigned char)0x27,
                                                        (unsigned char)0xD8,
                                                        (unsigned char)0x31,
                                                        (unsigned char)0x17,
                                                        (unsigned char)0x97,
                                                        (unsigned char)0x27,
                                                        (unsigned char)0xB0,
                                                        (unsigned char)0x86,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0x89,
                                                        (unsigned char)0x18,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0x3E,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0xEB,
                                                        (unsigned char)0xCF,
                                                        (unsigned char)0x9B,
                                                        (unsigned char)0x14,
                                                        (unsigned char)0xED,
                                                        (unsigned char)0x44,
                                                        (unsigned char)0xCE,
                                                        (unsigned char)0x6C,
                                                        (unsigned char)0xBA,
                                                        (unsigned char)0xCE,
                                                        (unsigned char)0xD4,
                                                        (unsigned char)0xBB,
                                                        (unsigned char)0x1B,
                                                        (unsigned char)0xDB,
                                                        (unsigned char)0x7F,
                                                        (unsigned char)0x14,
                                                        (unsigned char)0x47,
                                                        (unsigned char)0xE6,
                                                        (unsigned char)0xCC,
                                                        (unsigned char)0x25,
                                                        (unsigned char)0x4B,
                                                        (unsigned char)0x33,
                                                        (unsigned char)0x20,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0x51,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0xD7,
                                                        (unsigned char)0xAF,
                                                        (unsigned char)0x42,
                                                        (unsigned char)0x6F,
                                                        (unsigned char)0xB8,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x01,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0x8C,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0xBF,
                                                        (unsigned char)0x59,
                                                        (unsigned char)0x83,
                                                        (unsigned char)0xCA,
                                                        (unsigned char)0x01,
                                                        (unsigned char)0xC6,
                                                        (unsigned char)0x4B,
                                                        (unsigned char)0x92,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0xF0,
                                                        (unsigned char)0x32,
                                                        (unsigned char)0xEA,
                                                        (unsigned char)0x15,
                                                        (unsigned char)0xD1,
                                                        (unsigned char)0x72,
                                                        (unsigned char)0x1D,
                                                        (unsigned char)0x03,
                                                        (unsigned char)0xF4,
                                                        (unsigned char)0x82,
                                                        (unsigned char)0xD7,
                                                        (unsigned char)0xCE,
                                                        (unsigned char)0x6E,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0xFE,
                                                        (unsigned char)0xF6,
                                                        (unsigned char)0xD5,
                                                        (unsigned char)0x5E,
                                                        (unsigned char)0x70,
                                                        (unsigned char)0x2F,
                                                        (unsigned char)0x46,
                                                        (unsigned char)0x98,
                                                        (unsigned char)0x0C,
                                                        (unsigned char)0x82,
                                                        (unsigned char)0xB5,
                                                        (unsigned char)0xA8,
                                                        (unsigned char)0x40,
                                                        (unsigned char)0x31,
                                                        (unsigned char)0x90,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0x1C,
                                                        (unsigned char)0x9E,
                                                        (unsigned char)0x59,
                                                        (unsigned char)0xE7,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0x7F,
                                                        (unsigned char)0xBE,
                                                        (unsigned char)0xC7,
                                                        (unsigned char)0xE8,
                                                        (unsigned char)0xF3,
                                                        (unsigned char)0x23,
                                                        (unsigned char)0xA9,
                                                        (unsigned char)0x7A,
                                                        (unsigned char)0x7E,
                                                        (unsigned char)0x36,
                                                        (unsigned char)0xCC,
                                                        (unsigned char)0x88,
                                                        (unsigned char)0xBE,
                                                        (unsigned char)0x0F,
                                                        (unsigned char)0x1D,
                                                        (unsigned char)0x45,
                                                        (unsigned char)0xB7,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0x58,
                                                        (unsigned char)0x5A,
                                                        (unsigned char)0xC5,
                                                        (unsigned char)0x4B,
                                                        (unsigned char)0xD4,
                                                        (unsigned char)0x07,
                                                        (unsigned char)0xB2,
                                                        (unsigned char)0x2B,
                                                        (unsigned char)0x41,
                                                        (unsigned char)0x54,
                                                        (unsigned char)0xAA,
                                                        (unsigned char)0xCC,
                                                        (unsigned char)0x8F,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0x7E,
                                                        (unsigned char)0xBF,
                                                        (unsigned char)0x48,
                                                        (unsigned char)0xE1,
                                                        (unsigned char)0xD8,
                                                        (unsigned char)0x14,
                                                        (unsigned char)0xCC,
                                                        (unsigned char)0x5E,
                                                        (unsigned char)0xD2,
                                                        (unsigned char)0x0F,
                                                        (unsigned char)0x80,
                                                        (unsigned char)0x37,
                                                        (unsigned char)0xE0,
                                                        (unsigned char)0xA7,
                                                        (unsigned char)0x97,
                                                        (unsigned char)0x15,
                                                        (unsigned char)0xEE,
                                                        (unsigned char)0xF2,
                                                        (unsigned char)0x9B,
                                                        (unsigned char)0xE3,
                                                        (unsigned char)0x28,
                                                        (unsigned char)0x06,
                                                        (unsigned char)0xA1,
                                                        (unsigned char)0xD5,
                                                        (unsigned char)0x8B,
                                                        (unsigned char)0xB7,
                                                        (unsigned char)0xC5,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0x76,
                                                        (unsigned char)0xF5,
                                                        (unsigned char)0x50,
                                                        (unsigned char)0xAA,
                                                        (unsigned char)0x3D,
                                                        (unsigned char)0x8A,
                                                        (unsigned char)0x1F,
                                                        (unsigned char)0xBF,
                                                        (unsigned char)0xF0,
                                                        (unsigned char)0xEB,
                                                        (unsigned char)0x19,
                                                        (unsigned char)0xCC,
                                                        (unsigned char)0xB1,
                                                        (unsigned char)0xA3,
                                                        (unsigned char)0x13,
                                                        (unsigned char)0xD5,
                                                        (unsigned char)0x5C,
                                                        (unsigned char)0xDA,
                                                        (unsigned char)0x56,
                                                        (unsigned char)0xC9,
                                                        (unsigned char)0xEC,
                                                        (unsigned char)0x2E,
                                                        (unsigned char)0xF2,
                                                        (unsigned char)0x96,
                                                        (unsigned char)0x32,
                                                        (unsigned char)0x38,
                                                        (unsigned char)0x7F,
                                                        (unsigned char)0xE8,
                                                        (unsigned char)0xD7,
                                                        (unsigned char)0x6E,
                                                        (unsigned char)0x3C,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0x68,
                                                        (unsigned char)0x04,
                                                        (unsigned char)0x3E,
                                                        (unsigned char)0x8F,
                                                        (unsigned char)0x66,
                                                        (unsigned char)0x3F,
                                                        (unsigned char)0x48,
                                                        (unsigned char)0x60,
                                                        (unsigned char)0xEE,
                                                        (unsigned char)0x12,
                                                        (unsigned char)0xBF,
                                                        (unsigned char)0x2D,
                                                        (unsigned char)0x5B,
                                                        (unsigned char)0x0B,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0x74,
                                                        (unsigned char)0xD6,
                                                        (unsigned char)0xE6,
                                                        (unsigned char)0x94,
                                                        (unsigned char)0xF9,
                                                        (unsigned char)0x1E,
                                                        (unsigned char)0x6D,
                                                        (unsigned char)0xCC,
                                                        (unsigned char)0x40,
                                                        (unsigned char)0x24,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF,
                                                        (unsigned char)0xFF};
BIGNUM *get_rfc3526_prime_6144(BIGNUM *bn)
{
  BIGNUM *tmp;
  tmp = BN_bin2bn(RFC3526_PRIME_6144,(int)sizeof(RFC3526_PRIME_6144),bn);
  return tmp;
}

static unsigned char const RFC3526_PRIME_8192[1024] =   
                                                        {(unsigned char)0xFF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xC9,
                                                         (unsigned char)0x0F,
                                                         (unsigned char)0xDA,
                                                         (unsigned char)0xA2,
                                                         (unsigned char)0x21,
                                                         (unsigned char)0x68,
                                                         (unsigned char)0xC2,
                                                         (unsigned char)0x34,
                                                         (unsigned char)0xC4,
                                                         (unsigned char)0xC6,
                                                         (unsigned char)0x62,
                                                         (unsigned char)0x8B,
                                                         (unsigned char)0x80,
                                                         (unsigned char)0xDC,
                                                         (unsigned char)0x1C,
                                                         (unsigned char)0xD1,
                                                         (unsigned char)0x29,
                                                         (unsigned char)0x02,
                                                         (unsigned char)0x4E,
                                                         (unsigned char)0x08,
                                                         (unsigned char)0x8A,
                                                         (unsigned char)0x67,
                                                         (unsigned char)0xCC,
                                                         (unsigned char)0x74,
                                                         (unsigned char)0x02,
                                                         (unsigned char)0x0B,
                                                         (unsigned char)0xBE,
                                                         (unsigned char)0xA6,
                                                         (unsigned char)0x3B,
                                                         (unsigned char)0x13,
                                                         (unsigned char)0x9B,
                                                         (unsigned char)0x22,
                                                         (unsigned char)0x51,
                                                         (unsigned char)0x4A,
                                                         (unsigned char)0x08,
                                                         (unsigned char)0x79,
                                                         (unsigned char)0x8E,
                                                         (unsigned char)0x34,
                                                         (unsigned char)0x04,
                                                         (unsigned char)0xDD,
                                                         (unsigned char)0xEF,
                                                         (unsigned char)0x95,
                                                         (unsigned char)0x19,
                                                         (unsigned char)0xB3,
                                                         (unsigned char)0xCD,
                                                         (unsigned char)0x3A,
                                                         (unsigned char)0x43,
                                                         (unsigned char)0x1B,
                                                         (unsigned char)0x30,
                                                         (unsigned char)0x2B,
                                                         (unsigned char)0x0A,
                                                         (unsigned char)0x6D,
                                                         (unsigned char)0xF2,
                                                         (unsigned char)0x5F,
                                                         (unsigned char)0x14,
                                                         (unsigned char)0x37,
                                                         (unsigned char)0x4F,
                                                         (unsigned char)0xE1,
                                                         (unsigned char)0x35,
                                                         (unsigned char)0x6D,
                                                         (unsigned char)0x6D,
                                                         (unsigned char)0x51,
                                                         (unsigned char)0xC2,
                                                         (unsigned char)0x45,
                                                         (unsigned char)0xE4,
                                                         (unsigned char)0x85,
                                                         (unsigned char)0xB5,
                                                         (unsigned char)0x76,
                                                         (unsigned char)0x62,
                                                         (unsigned char)0x5E,
                                                         (unsigned char)0x7E,
                                                         (unsigned char)0xC6,
                                                         (unsigned char)0xF4,
                                                         (unsigned char)0x4C,
                                                         (unsigned char)0x42,
                                                         (unsigned char)0xE9,
                                                         (unsigned char)0xA6,
                                                         (unsigned char)0x37,
                                                         (unsigned char)0xED,
                                                         (unsigned char)0x6B,
                                                         (unsigned char)0x0B,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0x5C,
                                                         (unsigned char)0xB6,
                                                         (unsigned char)0xF4,
                                                         (unsigned char)0x06,
                                                         (unsigned char)0xB7,
                                                         (unsigned char)0xED,
                                                         (unsigned char)0xEE,
                                                         (unsigned char)0x38,
                                                         (unsigned char)0x6B,
                                                         (unsigned char)0xFB,
                                                         (unsigned char)0x5A,
                                                         (unsigned char)0x89,
                                                         (unsigned char)0x9F,
                                                         (unsigned char)0xA5,
                                                         (unsigned char)0xAE,
                                                         (unsigned char)0x9F,
                                                         (unsigned char)0x24,
                                                         (unsigned char)0x11,
                                                         (unsigned char)0x7C,
                                                         (unsigned char)0x4B,
                                                         (unsigned char)0x1F,
                                                         (unsigned char)0xE6,
                                                         (unsigned char)0x49,
                                                         (unsigned char)0x28,
                                                         (unsigned char)0x66,
                                                         (unsigned char)0x51,
                                                         (unsigned char)0xEC,
                                                         (unsigned char)0xE4,
                                                         (unsigned char)0x5B,
                                                         (unsigned char)0x3D,
                                                         (unsigned char)0xC2,
                                                         (unsigned char)0x00,
                                                         (unsigned char)0x7C,
                                                         (unsigned char)0xB8,
                                                         (unsigned char)0xA1,
                                                         (unsigned char)0x63,
                                                         (unsigned char)0xBF,
                                                         (unsigned char)0x05,
                                                         (unsigned char)0x98,
                                                         (unsigned char)0xDA,
                                                         (unsigned char)0x48,
                                                         (unsigned char)0x36,
                                                         (unsigned char)0x1C,
                                                         (unsigned char)0x55,
                                                         (unsigned char)0xD3,
                                                         (unsigned char)0x9A,
                                                         (unsigned char)0x69,
                                                         (unsigned char)0x16,
                                                         (unsigned char)0x3F,
                                                         (unsigned char)0xA8,
                                                         (unsigned char)0xFD,
                                                         (unsigned char)0x24,
                                                         (unsigned char)0xCF,
                                                         (unsigned char)0x5F,
                                                         (unsigned char)0x83,
                                                         (unsigned char)0x65,
                                                         (unsigned char)0x5D,
                                                         (unsigned char)0x23,
                                                         (unsigned char)0xDC,
                                                         (unsigned char)0xA3,
                                                         (unsigned char)0xAD,
                                                         (unsigned char)0x96,
                                                         (unsigned char)0x1C,
                                                         (unsigned char)0x62,
                                                         (unsigned char)0xF3,
                                                         (unsigned char)0x56,
                                                         (unsigned char)0x20,
                                                         (unsigned char)0x85,
                                                         (unsigned char)0x52,
                                                         (unsigned char)0xBB,
                                                         (unsigned char)0x9E,
                                                         (unsigned char)0xD5,
                                                         (unsigned char)0x29,
                                                         (unsigned char)0x07,
                                                         (unsigned char)0x70,
                                                         (unsigned char)0x96,
                                                         (unsigned char)0x96,
                                                         (unsigned char)0x6D,
                                                         (unsigned char)0x67,
                                                         (unsigned char)0x0C,
                                                         (unsigned char)0x35,
                                                         (unsigned char)0x4E,
                                                         (unsigned char)0x4A,
                                                         (unsigned char)0xBC,
                                                         (unsigned char)0x98,
                                                         (unsigned char)0x04,
                                                         (unsigned char)0xF1,
                                                         (unsigned char)0x74,
                                                         (unsigned char)0x6C,
                                                         (unsigned char)0x08,
                                                         (unsigned char)0xCA,
                                                         (unsigned char)0x18,
                                                         (unsigned char)0x21,
                                                         (unsigned char)0x7C,
                                                         (unsigned char)0x32,
                                                         (unsigned char)0x90,
                                                         (unsigned char)0x5E,
                                                         (unsigned char)0x46,
                                                         (unsigned char)0x2E,
                                                         (unsigned char)0x36,
                                                         (unsigned char)0xCE,
                                                         (unsigned char)0x3B,
                                                         (unsigned char)0xE3,
                                                         (unsigned char)0x9E,
                                                         (unsigned char)0x77,
                                                         (unsigned char)0x2C,
                                                         (unsigned char)0x18,
                                                         (unsigned char)0x0E,
                                                         (unsigned char)0x86,
                                                         (unsigned char)0x03,
                                                         (unsigned char)0x9B,
                                                         (unsigned char)0x27,
                                                         (unsigned char)0x83,
                                                         (unsigned char)0xA2,
                                                         (unsigned char)0xEC,
                                                         (unsigned char)0x07,
                                                         (unsigned char)0xA2,
                                                         (unsigned char)0x8F,
                                                         (unsigned char)0xB5,
                                                         (unsigned char)0xC5,
                                                         (unsigned char)0x5D,
                                                         (unsigned char)0xF0,
                                                         (unsigned char)0x6F,
                                                         (unsigned char)0x4C,
                                                         (unsigned char)0x52,
                                                         (unsigned char)0xC9,
                                                         (unsigned char)0xDE,
                                                         (unsigned char)0x2B,
                                                         (unsigned char)0xCB,
                                                         (unsigned char)0xF6,
                                                         (unsigned char)0x95,
                                                         (unsigned char)0x58,
                                                         (unsigned char)0x17,
                                                         (unsigned char)0x18,
                                                         (unsigned char)0x39,
                                                         (unsigned char)0x95,
                                                         (unsigned char)0x49,
                                                         (unsigned char)0x7C,
                                                         (unsigned char)0xEA,
                                                         (unsigned char)0x95,
                                                         (unsigned char)0x6A,
                                                         (unsigned char)0xE5,
                                                         (unsigned char)0x15,
                                                         (unsigned char)0xD2,
                                                         (unsigned char)0x26,
                                                         (unsigned char)0x18,
                                                         (unsigned char)0x98,
                                                         (unsigned char)0xFA,
                                                         (unsigned char)0x05,
                                                         (unsigned char)0x10,
                                                         (unsigned char)0x15,
                                                         (unsigned char)0x72,
                                                         (unsigned char)0x8E,
                                                         (unsigned char)0x5A,
                                                         (unsigned char)0x8A,
                                                         (unsigned char)0xAA,
                                                         (unsigned char)0xC4,
                                                         (unsigned char)0x2D,
                                                         (unsigned char)0xAD,
                                                         (unsigned char)0x33,
                                                         (unsigned char)0x17,
                                                         (unsigned char)0x0D,
                                                         (unsigned char)0x04,
                                                         (unsigned char)0x50,
                                                         (unsigned char)0x7A,
                                                         (unsigned char)0x33,
                                                         (unsigned char)0xA8,
                                                         (unsigned char)0x55,
                                                         (unsigned char)0x21,
                                                         (unsigned char)0xAB,
                                                         (unsigned char)0xDF,
                                                         (unsigned char)0x1C,
                                                         (unsigned char)0xBA,
                                                         (unsigned char)0x64,
                                                         (unsigned char)0xEC,
                                                         (unsigned char)0xFB,
                                                         (unsigned char)0x85,
                                                         (unsigned char)0x04,
                                                         (unsigned char)0x58,
                                                         (unsigned char)0xDB,
                                                         (unsigned char)0xEF,
                                                         (unsigned char)0x0A,
                                                         (unsigned char)0x8A,
                                                         (unsigned char)0xEA,
                                                         (unsigned char)0x71,
                                                         (unsigned char)0x57,
                                                         (unsigned char)0x5D,
                                                         (unsigned char)0x06,
                                                         (unsigned char)0x0C,
                                                         (unsigned char)0x7D,
                                                         (unsigned char)0xB3,
                                                         (unsigned char)0x97,
                                                         (unsigned char)0x0F,
                                                         (unsigned char)0x85,
                                                         (unsigned char)0xA6,
                                                         (unsigned char)0xE1,
                                                         (unsigned char)0xE4,
                                                         (unsigned char)0xC7,
                                                         (unsigned char)0xAB,
                                                         (unsigned char)0xF5,
                                                         (unsigned char)0xAE,
                                                         (unsigned char)0x8C,
                                                         (unsigned char)0xDB,
                                                         (unsigned char)0x09,
                                                         (unsigned char)0x33,
                                                         (unsigned char)0xD7,
                                                         (unsigned char)0x1E,
                                                         (unsigned char)0x8C,
                                                         (unsigned char)0x94,
                                                         (unsigned char)0xE0,
                                                         (unsigned char)0x4A,
                                                         (unsigned char)0x25,
                                                         (unsigned char)0x61,
                                                         (unsigned char)0x9D,
                                                         (unsigned char)0xCE,
                                                         (unsigned char)0xE3,
                                                         (unsigned char)0xD2,
                                                         (unsigned char)0x26,
                                                         (unsigned char)0x1A,
                                                         (unsigned char)0xD2,
                                                         (unsigned char)0xEE,
                                                         (unsigned char)0x6B,
                                                         (unsigned char)0xF1,
                                                         (unsigned char)0x2F,
                                                         (unsigned char)0xFA,
                                                         (unsigned char)0x06,
                                                         (unsigned char)0xD9,
                                                         (unsigned char)0x8A,
                                                         (unsigned char)0x08,
                                                         (unsigned char)0x64,
                                                         (unsigned char)0xD8,
                                                         (unsigned char)0x76,
                                                         (unsigned char)0x02,
                                                         (unsigned char)0x73,
                                                         (unsigned char)0x3E,
                                                         (unsigned char)0xC8,
                                                         (unsigned char)0x6A,
                                                         (unsigned char)0x64,
                                                         (unsigned char)0x52,
                                                         (unsigned char)0x1F,
                                                         (unsigned char)0x2B,
                                                         (unsigned char)0x18,
                                                         (unsigned char)0x17,
                                                         (unsigned char)0x7B,
                                                         (unsigned char)0x20,
                                                         (unsigned char)0x0C,
                                                         (unsigned char)0xBB,
                                                         (unsigned char)0xE1,
                                                         (unsigned char)0x17,
                                                         (unsigned char)0x57,
                                                         (unsigned char)0x7A,
                                                         (unsigned char)0x61,
                                                         (unsigned char)0x5D,
                                                         (unsigned char)0x6C,
                                                         (unsigned char)0x77,
                                                         (unsigned char)0x09,
                                                         (unsigned char)0x88,
                                                         (unsigned char)0xC0,
                                                         (unsigned char)0xBA,
                                                         (unsigned char)0xD9,
                                                         (unsigned char)0x46,
                                                         (unsigned char)0xE2,
                                                         (unsigned char)0x08,
                                                         (unsigned char)0xE2,
                                                         (unsigned char)0x4F,
                                                         (unsigned char)0xA0,
                                                         (unsigned char)0x74,
                                                         (unsigned char)0xE5,
                                                         (unsigned char)0xAB,
                                                         (unsigned char)0x31,
                                                         (unsigned char)0x43,
                                                         (unsigned char)0xDB,
                                                         (unsigned char)0x5B,
                                                         (unsigned char)0xFC,
                                                         (unsigned char)0xE0,
                                                         (unsigned char)0xFD,
                                                         (unsigned char)0x10,
                                                         (unsigned char)0x8E,
                                                         (unsigned char)0x4B,
                                                         (unsigned char)0x82,
                                                         (unsigned char)0xD1,
                                                         (unsigned char)0x20,
                                                         (unsigned char)0xA9,
                                                         (unsigned char)0x21,
                                                         (unsigned char)0x08,
                                                         (unsigned char)0x01,
                                                         (unsigned char)0x1A,
                                                         (unsigned char)0x72,
                                                         (unsigned char)0x3C,
                                                         (unsigned char)0x12,
                                                         (unsigned char)0xA7,
                                                         (unsigned char)0x87,
                                                         (unsigned char)0xE6,
                                                         (unsigned char)0xD7,
                                                         (unsigned char)0x88,
                                                         (unsigned char)0x71,
                                                         (unsigned char)0x9A,
                                                         (unsigned char)0x10,
                                                         (unsigned char)0xBD,
                                                         (unsigned char)0xBA,
                                                         (unsigned char)0x5B,
                                                         (unsigned char)0x26,
                                                         (unsigned char)0x99,
                                                         (unsigned char)0xC3,
                                                         (unsigned char)0x27,
                                                         (unsigned char)0x18,
                                                         (unsigned char)0x6A,
                                                         (unsigned char)0xF4,
                                                         (unsigned char)0xE2,
                                                         (unsigned char)0x3C,
                                                         (unsigned char)0x1A,
                                                         (unsigned char)0x94,
                                                         (unsigned char)0x68,
                                                         (unsigned char)0x34,
                                                         (unsigned char)0xB6,
                                                         (unsigned char)0x15,
                                                         (unsigned char)0x0B,
                                                         (unsigned char)0xDA,
                                                         (unsigned char)0x25,
                                                         (unsigned char)0x83,
                                                         (unsigned char)0xE9,
                                                         (unsigned char)0xCA,
                                                         (unsigned char)0x2A,
                                                         (unsigned char)0xD4,
                                                         (unsigned char)0x4C,
                                                         (unsigned char)0xE8,
                                                         (unsigned char)0xDB,
                                                         (unsigned char)0xBB,
                                                         (unsigned char)0xC2,
                                                         (unsigned char)0xDB,
                                                         (unsigned char)0x04,
                                                         (unsigned char)0xDE,
                                                         (unsigned char)0x8E,
                                                         (unsigned char)0xF9,
                                                         (unsigned char)0x2E,
                                                         (unsigned char)0x8E,
                                                         (unsigned char)0xFC,
                                                         (unsigned char)0x14,
                                                         (unsigned char)0x1F,
                                                         (unsigned char)0xBE,
                                                         (unsigned char)0xCA,
                                                         (unsigned char)0xA6,
                                                         (unsigned char)0x28,
                                                         (unsigned char)0x7C,
                                                         (unsigned char)0x59,
                                                         (unsigned char)0x47,
                                                         (unsigned char)0x4E,
                                                         (unsigned char)0x6B,
                                                         (unsigned char)0xC0,
                                                         (unsigned char)0x5D,
                                                         (unsigned char)0x99,
                                                         (unsigned char)0xB2,
                                                         (unsigned char)0x96,
                                                         (unsigned char)0x4F,
                                                         (unsigned char)0xA0,
                                                         (unsigned char)0x90,
                                                         (unsigned char)0xC3,
                                                         (unsigned char)0xA2,
                                                         (unsigned char)0x23,
                                                         (unsigned char)0x3B,
                                                         (unsigned char)0xA1,
                                                         (unsigned char)0x86,
                                                         (unsigned char)0x51,
                                                         (unsigned char)0x5B,
                                                         (unsigned char)0xE7,
                                                         (unsigned char)0xED,
                                                         (unsigned char)0x1F,
                                                         (unsigned char)0x61,
                                                         (unsigned char)0x29,
                                                         (unsigned char)0x70,
                                                         (unsigned char)0xCE,
                                                         (unsigned char)0xE2,
                                                         (unsigned char)0xD7,
                                                         (unsigned char)0xAF,
                                                         (unsigned char)0xB8,
                                                         (unsigned char)0x1B,
                                                         (unsigned char)0xDD,
                                                         (unsigned char)0x76,
                                                         (unsigned char)0x21,
                                                         (unsigned char)0x70,
                                                         (unsigned char)0x48,
                                                         (unsigned char)0x1C,
                                                         (unsigned char)0xD0,
                                                         (unsigned char)0x06,
                                                         (unsigned char)0x91,
                                                         (unsigned char)0x27,
                                                         (unsigned char)0xD5,
                                                         (unsigned char)0xB0,
                                                         (unsigned char)0x5A,
                                                         (unsigned char)0xA9,
                                                         (unsigned char)0x93,
                                                         (unsigned char)0xB4,
                                                         (unsigned char)0xEA,
                                                         (unsigned char)0x98,
                                                         (unsigned char)0x8D,
                                                         (unsigned char)0x8F,
                                                         (unsigned char)0xDD,
                                                         (unsigned char)0xC1,
                                                         (unsigned char)0x86,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xB7,
                                                         (unsigned char)0xDC,
                                                         (unsigned char)0x90,
                                                         (unsigned char)0xA6,
                                                         (unsigned char)0xC0,
                                                         (unsigned char)0x8F,
                                                         (unsigned char)0x4D,
                                                         (unsigned char)0xF4,
                                                         (unsigned char)0x35,
                                                         (unsigned char)0xC9,
                                                         (unsigned char)0x34,
                                                         (unsigned char)0x02,
                                                         (unsigned char)0x84,
                                                         (unsigned char)0x92,
                                                         (unsigned char)0x36,
                                                         (unsigned char)0xC3,
                                                         (unsigned char)0xFA,
                                                         (unsigned char)0xB4,
                                                         (unsigned char)0xD2,
                                                         (unsigned char)0x7C,
                                                         (unsigned char)0x70,
                                                         (unsigned char)0x26,
                                                         (unsigned char)0xC1,
                                                         (unsigned char)0xD4,
                                                         (unsigned char)0xDC,
                                                         (unsigned char)0xB2,
                                                         (unsigned char)0x60,
                                                         (unsigned char)0x26,
                                                         (unsigned char)0x46,
                                                         (unsigned char)0xDE,
                                                         (unsigned char)0xC9,
                                                         (unsigned char)0x75,
                                                         (unsigned char)0x1E,
                                                         (unsigned char)0x76,
                                                         (unsigned char)0x3D,
                                                         (unsigned char)0xBA,
                                                         (unsigned char)0x37,
                                                         (unsigned char)0xBD,
                                                         (unsigned char)0xF8,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0x94,
                                                         (unsigned char)0x06,
                                                         (unsigned char)0xAD,
                                                         (unsigned char)0x9E,
                                                         (unsigned char)0x53,
                                                         (unsigned char)0x0E,
                                                         (unsigned char)0xE5,
                                                         (unsigned char)0xDB,
                                                         (unsigned char)0x38,
                                                         (unsigned char)0x2F,
                                                         (unsigned char)0x41,
                                                         (unsigned char)0x30,
                                                         (unsigned char)0x01,
                                                         (unsigned char)0xAE,
                                                         (unsigned char)0xB0,
                                                         (unsigned char)0x6A,
                                                         (unsigned char)0x53,
                                                         (unsigned char)0xED,
                                                         (unsigned char)0x90,
                                                         (unsigned char)0x27,
                                                         (unsigned char)0xD8,
                                                         (unsigned char)0x31,
                                                         (unsigned char)0x17,
                                                         (unsigned char)0x97,
                                                         (unsigned char)0x27,
                                                         (unsigned char)0xB0,
                                                         (unsigned char)0x86,
                                                         (unsigned char)0x5A,
                                                         (unsigned char)0x89,
                                                         (unsigned char)0x18,
                                                         (unsigned char)0xDA,
                                                         (unsigned char)0x3E,
                                                         (unsigned char)0xDB,
                                                         (unsigned char)0xEB,
                                                         (unsigned char)0xCF,
                                                         (unsigned char)0x9B,
                                                         (unsigned char)0x14,
                                                         (unsigned char)0xED,
                                                         (unsigned char)0x44,
                                                         (unsigned char)0xCE,
                                                         (unsigned char)0x6C,
                                                         (unsigned char)0xBA,
                                                         (unsigned char)0xCE,
                                                         (unsigned char)0xD4,
                                                         (unsigned char)0xBB,
                                                         (unsigned char)0x1B,
                                                         (unsigned char)0xDB,
                                                         (unsigned char)0x7F,
                                                         (unsigned char)0x14,
                                                         (unsigned char)0x47,
                                                         (unsigned char)0xE6,
                                                         (unsigned char)0xCC,
                                                         (unsigned char)0x25,
                                                         (unsigned char)0x4B,
                                                         (unsigned char)0x33,
                                                         (unsigned char)0x20,
                                                         (unsigned char)0x51,
                                                         (unsigned char)0x51,
                                                         (unsigned char)0x2B,
                                                         (unsigned char)0xD7,
                                                         (unsigned char)0xAF,
                                                         (unsigned char)0x42,
                                                         (unsigned char)0x6F,
                                                         (unsigned char)0xB8,
                                                         (unsigned char)0xF4,
                                                         (unsigned char)0x01,
                                                         (unsigned char)0x37,
                                                         (unsigned char)0x8C,
                                                         (unsigned char)0xD2,
                                                         (unsigned char)0xBF,
                                                         (unsigned char)0x59,
                                                         (unsigned char)0x83,
                                                         (unsigned char)0xCA,
                                                         (unsigned char)0x01,
                                                         (unsigned char)0xC6,
                                                         (unsigned char)0x4B,
                                                         (unsigned char)0x92,
                                                         (unsigned char)0xEC,
                                                         (unsigned char)0xF0,
                                                         (unsigned char)0x32,
                                                         (unsigned char)0xEA,
                                                         (unsigned char)0x15,
                                                         (unsigned char)0xD1,
                                                         (unsigned char)0x72,
                                                         (unsigned char)0x1D,
                                                         (unsigned char)0x03,
                                                         (unsigned char)0xF4,
                                                         (unsigned char)0x82,
                                                         (unsigned char)0xD7,
                                                         (unsigned char)0xCE,
                                                         (unsigned char)0x6E,
                                                         (unsigned char)0x74,
                                                         (unsigned char)0xFE,
                                                         (unsigned char)0xF6,
                                                         (unsigned char)0xD5,
                                                         (unsigned char)0x5E,
                                                         (unsigned char)0x70,
                                                         (unsigned char)0x2F,
                                                         (unsigned char)0x46,
                                                         (unsigned char)0x98,
                                                         (unsigned char)0x0C,
                                                         (unsigned char)0x82,
                                                         (unsigned char)0xB5,
                                                         (unsigned char)0xA8,
                                                         (unsigned char)0x40,
                                                         (unsigned char)0x31,
                                                         (unsigned char)0x90,
                                                         (unsigned char)0x0B,
                                                         (unsigned char)0x1C,
                                                         (unsigned char)0x9E,
                                                         (unsigned char)0x59,
                                                         (unsigned char)0xE7,
                                                         (unsigned char)0xC9,
                                                         (unsigned char)0x7F,
                                                         (unsigned char)0xBE,
                                                         (unsigned char)0xC7,
                                                         (unsigned char)0xE8,
                                                         (unsigned char)0xF3,
                                                         (unsigned char)0x23,
                                                         (unsigned char)0xA9,
                                                         (unsigned char)0x7A,
                                                         (unsigned char)0x7E,
                                                         (unsigned char)0x36,
                                                         (unsigned char)0xCC,
                                                         (unsigned char)0x88,
                                                         (unsigned char)0xBE,
                                                         (unsigned char)0x0F,
                                                         (unsigned char)0x1D,
                                                         (unsigned char)0x45,
                                                         (unsigned char)0xB7,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0x58,
                                                         (unsigned char)0x5A,
                                                         (unsigned char)0xC5,
                                                         (unsigned char)0x4B,
                                                         (unsigned char)0xD4,
                                                         (unsigned char)0x07,
                                                         (unsigned char)0xB2,
                                                         (unsigned char)0x2B,
                                                         (unsigned char)0x41,
                                                         (unsigned char)0x54,
                                                         (unsigned char)0xAA,
                                                         (unsigned char)0xCC,
                                                         (unsigned char)0x8F,
                                                         (unsigned char)0x6D,
                                                         (unsigned char)0x7E,
                                                         (unsigned char)0xBF,
                                                         (unsigned char)0x48,
                                                         (unsigned char)0xE1,
                                                         (unsigned char)0xD8,
                                                         (unsigned char)0x14,
                                                         (unsigned char)0xCC,
                                                         (unsigned char)0x5E,
                                                         (unsigned char)0xD2,
                                                         (unsigned char)0x0F,
                                                         (unsigned char)0x80,
                                                         (unsigned char)0x37,
                                                         (unsigned char)0xE0,
                                                         (unsigned char)0xA7,
                                                         (unsigned char)0x97,
                                                         (unsigned char)0x15,
                                                         (unsigned char)0xEE,
                                                         (unsigned char)0xF2,
                                                         (unsigned char)0x9B,
                                                         (unsigned char)0xE3,
                                                         (unsigned char)0x28,
                                                         (unsigned char)0x06,
                                                         (unsigned char)0xA1,
                                                         (unsigned char)0xD5,
                                                         (unsigned char)0x8B,
                                                         (unsigned char)0xB7,
                                                         (unsigned char)0xC5,
                                                         (unsigned char)0xDA,
                                                         (unsigned char)0x76,
                                                         (unsigned char)0xF5,
                                                         (unsigned char)0x50,
                                                         (unsigned char)0xAA,
                                                         (unsigned char)0x3D,
                                                         (unsigned char)0x8A,
                                                         (unsigned char)0x1F,
                                                         (unsigned char)0xBF,
                                                         (unsigned char)0xF0,
                                                         (unsigned char)0xEB,
                                                         (unsigned char)0x19,
                                                         (unsigned char)0xCC,
                                                         (unsigned char)0xB1,
                                                         (unsigned char)0xA3,
                                                         (unsigned char)0x13,
                                                         (unsigned char)0xD5,
                                                         (unsigned char)0x5C,
                                                         (unsigned char)0xDA,
                                                         (unsigned char)0x56,
                                                         (unsigned char)0xC9,
                                                         (unsigned char)0xEC,
                                                         (unsigned char)0x2E,
                                                         (unsigned char)0xF2,
                                                         (unsigned char)0x96,
                                                         (unsigned char)0x32,
                                                         (unsigned char)0x38,
                                                         (unsigned char)0x7F,
                                                         (unsigned char)0xE8,
                                                         (unsigned char)0xD7,
                                                         (unsigned char)0x6E,
                                                         (unsigned char)0x3C,
                                                         (unsigned char)0x04,
                                                         (unsigned char)0x68,
                                                         (unsigned char)0x04,
                                                         (unsigned char)0x3E,
                                                         (unsigned char)0x8F,
                                                         (unsigned char)0x66,
                                                         (unsigned char)0x3F,
                                                         (unsigned char)0x48,
                                                         (unsigned char)0x60,
                                                         (unsigned char)0xEE,
                                                         (unsigned char)0x12,
                                                         (unsigned char)0xBF,
                                                         (unsigned char)0x2D,
                                                         (unsigned char)0x5B,
                                                         (unsigned char)0x0B,
                                                         (unsigned char)0x74,
                                                         (unsigned char)0x74,
                                                         (unsigned char)0xD6,
                                                         (unsigned char)0xE6,
                                                         (unsigned char)0x94,
                                                         (unsigned char)0xF9,
                                                         (unsigned char)0x1E,
                                                         (unsigned char)0x6D,
                                                         (unsigned char)0xBE,
                                                         (unsigned char)0x11,
                                                         (unsigned char)0x59,
                                                         (unsigned char)0x74,
                                                         (unsigned char)0xA3,
                                                         (unsigned char)0x92,
                                                         (unsigned char)0x6F,
                                                         (unsigned char)0x12,
                                                         (unsigned char)0xFE,
                                                         (unsigned char)0xE5,
                                                         (unsigned char)0xE4,
                                                         (unsigned char)0x38,
                                                         (unsigned char)0x77,
                                                         (unsigned char)0x7C,
                                                         (unsigned char)0xB6,
                                                         (unsigned char)0xA9,
                                                         (unsigned char)0x32,
                                                         (unsigned char)0xDF,
                                                         (unsigned char)0x8C,
                                                         (unsigned char)0xD8,
                                                         (unsigned char)0xBE,
                                                         (unsigned char)0xC4,
                                                         (unsigned char)0xD0,
                                                         (unsigned char)0x73,
                                                         (unsigned char)0xB9,
                                                         (unsigned char)0x31,
                                                         (unsigned char)0xBA,
                                                         (unsigned char)0x3B,
                                                         (unsigned char)0xC8,
                                                         (unsigned char)0x32,
                                                         (unsigned char)0xB6,
                                                         (unsigned char)0x8D,
                                                         (unsigned char)0x9D,
                                                         (unsigned char)0xD3,
                                                         (unsigned char)0x00,
                                                         (unsigned char)0x74,
                                                         (unsigned char)0x1F,
                                                         (unsigned char)0xA7,
                                                         (unsigned char)0xBF,
                                                         (unsigned char)0x8A,
                                                         (unsigned char)0xFC,
                                                         (unsigned char)0x47,
                                                         (unsigned char)0xED,
                                                         (unsigned char)0x25,
                                                         (unsigned char)0x76,
                                                         (unsigned char)0xF6,
                                                         (unsigned char)0x93,
                                                         (unsigned char)0x6B,
                                                         (unsigned char)0xA4,
                                                         (unsigned char)0x24,
                                                         (unsigned char)0x66,
                                                         (unsigned char)0x3A,
                                                         (unsigned char)0xAB,
                                                         (unsigned char)0x63,
                                                         (unsigned char)0x9C,
                                                         (unsigned char)0x5A,
                                                         (unsigned char)0xE4,
                                                         (unsigned char)0xF5,
                                                         (unsigned char)0x68,
                                                         (unsigned char)0x34,
                                                         (unsigned char)0x23,
                                                         (unsigned char)0xB4,
                                                         (unsigned char)0x74,
                                                         (unsigned char)0x2B,
                                                         (unsigned char)0xF1,
                                                         (unsigned char)0xC9,
                                                         (unsigned char)0x78,
                                                         (unsigned char)0x23,
                                                         (unsigned char)0x8F,
                                                         (unsigned char)0x16,
                                                         (unsigned char)0xCB,
                                                         (unsigned char)0xE3,
                                                         (unsigned char)0x9D,
                                                         (unsigned char)0x65,
                                                         (unsigned char)0x2D,
                                                         (unsigned char)0xE3,
                                                         (unsigned char)0xFD,
                                                         (unsigned char)0xB8,
                                                         (unsigned char)0xBE,
                                                         (unsigned char)0xFC,
                                                         (unsigned char)0x84,
                                                         (unsigned char)0x8A,
                                                         (unsigned char)0xD9,
                                                         (unsigned char)0x22,
                                                         (unsigned char)0x22,
                                                         (unsigned char)0x2E,
                                                         (unsigned char)0x04,
                                                         (unsigned char)0xA4,
                                                         (unsigned char)0x03,
                                                         (unsigned char)0x7C,
                                                         (unsigned char)0x07,
                                                         (unsigned char)0x13,
                                                         (unsigned char)0xEB,
                                                         (unsigned char)0x57,
                                                         (unsigned char)0xA8,
                                                         (unsigned char)0x1A,
                                                         (unsigned char)0x23,
                                                         (unsigned char)0xF0,
                                                         (unsigned char)0xC7,
                                                         (unsigned char)0x34,
                                                         (unsigned char)0x73,
                                                         (unsigned char)0xFC,
                                                         (unsigned char)0x64,
                                                         (unsigned char)0x6C,
                                                         (unsigned char)0xEA,
                                                         (unsigned char)0x30,
                                                         (unsigned char)0x6B,
                                                         (unsigned char)0x4B,
                                                         (unsigned char)0xCB,
                                                         (unsigned char)0xC8,
                                                         (unsigned char)0x86,
                                                         (unsigned char)0x2F,
                                                         (unsigned char)0x83,
                                                         (unsigned char)0x85,
                                                         (unsigned char)0xDD,
                                                         (unsigned char)0xFA,
                                                         (unsigned char)0x9D,
                                                         (unsigned char)0x4B,
                                                         (unsigned char)0x7F,
                                                         (unsigned char)0xA2,
                                                         (unsigned char)0xC0,
                                                         (unsigned char)0x87,
                                                         (unsigned char)0xE8,
                                                         (unsigned char)0x79,
                                                         (unsigned char)0x68,
                                                         (unsigned char)0x33,
                                                         (unsigned char)0x03,
                                                         (unsigned char)0xED,
                                                         (unsigned char)0x5B,
                                                         (unsigned char)0xDD,
                                                         (unsigned char)0x3A,
                                                         (unsigned char)0x06,
                                                         (unsigned char)0x2B,
                                                         (unsigned char)0x3C,
                                                         (unsigned char)0xF5,
                                                         (unsigned char)0xB3,
                                                         (unsigned char)0xA2,
                                                         (unsigned char)0x78,
                                                         (unsigned char)0xA6,
                                                         (unsigned char)0x6D,
                                                         (unsigned char)0x2A,
                                                         (unsigned char)0x13,
                                                         (unsigned char)0xF8,
                                                         (unsigned char)0x3F,
                                                         (unsigned char)0x44,
                                                         (unsigned char)0xF8,
                                                         (unsigned char)0x2D,
                                                         (unsigned char)0xDF,
                                                         (unsigned char)0x31,
                                                         (unsigned char)0x0E,
                                                         (unsigned char)0xE0,
                                                         (unsigned char)0x74,
                                                         (unsigned char)0xAB,
                                                         (unsigned char)0x6A,
                                                         (unsigned char)0x36,
                                                         (unsigned char)0x45,
                                                         (unsigned char)0x97,
                                                         (unsigned char)0xE8,
                                                         (unsigned char)0x99,
                                                         (unsigned char)0xA0,
                                                         (unsigned char)0x25,
                                                         (unsigned char)0x5D,
                                                         (unsigned char)0xC1,
                                                         (unsigned char)0x64,
                                                         (unsigned char)0xF3,
                                                         (unsigned char)0x1C,
                                                         (unsigned char)0xC5,
                                                         (unsigned char)0x08,
                                                         (unsigned char)0x46,
                                                         (unsigned char)0x85,
                                                         (unsigned char)0x1D,
                                                         (unsigned char)0xF9,
                                                         (unsigned char)0xAB,
                                                         (unsigned char)0x48,
                                                         (unsigned char)0x19,
                                                         (unsigned char)0x5D,
                                                         (unsigned char)0xED,
                                                         (unsigned char)0x7E,
                                                         (unsigned char)0xA1,
                                                         (unsigned char)0xB1,
                                                         (unsigned char)0xD5,
                                                         (unsigned char)0x10,
                                                         (unsigned char)0xBD,
                                                         (unsigned char)0x7E,
                                                         (unsigned char)0xE7,
                                                         (unsigned char)0x4D,
                                                         (unsigned char)0x73,
                                                         (unsigned char)0xFA,
                                                         (unsigned char)0xF3,
                                                         (unsigned char)0x6B,
                                                         (unsigned char)0xC3,
                                                         (unsigned char)0x1E,
                                                         (unsigned char)0xCF,
                                                         (unsigned char)0xA2,
                                                         (unsigned char)0x68,
                                                         (unsigned char)0x35,
                                                         (unsigned char)0x90,
                                                         (unsigned char)0x46,
                                                         (unsigned char)0xF4,
                                                         (unsigned char)0xEB,
                                                         (unsigned char)0x87,
                                                         (unsigned char)0x9F,
                                                         (unsigned char)0x92,
                                                         (unsigned char)0x40,
                                                         (unsigned char)0x09,
                                                         (unsigned char)0x43,
                                                         (unsigned char)0x8B,
                                                         (unsigned char)0x48,
                                                         (unsigned char)0x1C,
                                                         (unsigned char)0x6C,
                                                         (unsigned char)0xD7,
                                                         (unsigned char)0x88,
                                                         (unsigned char)0x9A,
                                                         (unsigned char)0x00,
                                                         (unsigned char)0x2E,
                                                         (unsigned char)0xD5,
                                                         (unsigned char)0xEE,
                                                         (unsigned char)0x38,
                                                         (unsigned char)0x2B,
                                                         (unsigned char)0xC9,
                                                         (unsigned char)0x19,
                                                         (unsigned char)0x0D,
                                                         (unsigned char)0xA6,
                                                         (unsigned char)0xFC,
                                                         (unsigned char)0x02,
                                                         (unsigned char)0x6E,
                                                         (unsigned char)0x47,
                                                         (unsigned char)0x95,
                                                         (unsigned char)0x58,
                                                         (unsigned char)0xE4,
                                                         (unsigned char)0x47,
                                                         (unsigned char)0x56,
                                                         (unsigned char)0x77,
                                                         (unsigned char)0xE9,
                                                         (unsigned char)0xAA,
                                                         (unsigned char)0x9E,
                                                         (unsigned char)0x30,
                                                         (unsigned char)0x50,
                                                         (unsigned char)0xE2,
                                                         (unsigned char)0x76,
                                                         (unsigned char)0x56,
                                                         (unsigned char)0x94,
                                                         (unsigned char)0xDF,
                                                         (unsigned char)0xC8,
                                                         (unsigned char)0x1F,
                                                         (unsigned char)0x56,
                                                         (unsigned char)0xE8,
                                                         (unsigned char)0x80,
                                                         (unsigned char)0xB9,
                                                         (unsigned char)0x6E,
                                                         (unsigned char)0x71,
                                                         (unsigned char)0x60,
                                                         (unsigned char)0xC9,
                                                         (unsigned char)0x80,
                                                         (unsigned char)0xDD,
                                                         (unsigned char)0x98,
                                                         (unsigned char)0xED,
                                                         (unsigned char)0xD3,
                                                         (unsigned char)0xDF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xFF,
                                                         (unsigned char)0xFF};
BIGNUM *get_rfc3526_prime_8192(BIGNUM *bn)
{
  BIGNUM *tmp;
  tmp = BN_bin2bn(RFC3526_PRIME_8192,(int)sizeof(RFC3526_PRIME_8192),bn);
  return tmp;
}

/*@ ghost unsigned long MALLOC; */

/* For the pre-post conditions have a look in: primitives/CRYPTO_malloc */
/* void *CRYPTO_malloc(int size, char const *f, int line) { return (void*)0; } */

/* GAL: Instances for various types.  Also modified to get number of elements,
rather than bytes. */
BN_CTX        *CRYPTO_malloc_BN_CTX        (int num_el) { return (void*)0; }
unsigned int  *CRYPTO_malloc_unsigned_int  (int num_el) { return (void*)0; }
BN_POOL_ITEM  *CRYPTO_malloc_BN_POOL_ITEM  (int num_el) { return (void*)0; }
BIGNUM        *CRYPTO_malloc_BIGNUM        (int num_el) { return (void*)0; }
unsigned long *CRYPTO_malloc_unsigned_long (int num_el) { return (void*)0; }


/* See primitives/CRYPTO_free for the spec. */
void CRYPTO_free(void *ptr) { return; }

BN_CTX *BN_CTX_new(void);

void BN_CTX_init(BN_CTX *ctx);

void BN_CTX_free(BN_CTX *ctx);

void BN_CTX_start(BN_CTX *ctx);

BIGNUM *BN_CTX_get(BN_CTX *ctx);

void BN_CTX_end(BN_CTX *ctx);

void BN_init(BIGNUM *a);

void BN_clear_free(BIGNUM *a);

int BN_set_word(BIGNUM *a, unsigned long w);

void BN_clear(BIGNUM *a);

static void BN_POOL_init(BN_POOL *p);

static void BN_POOL_finish(BN_POOL *p);

static void BN_POOL_reset(BN_POOL *p);

static BIGNUM *BN_POOL_get(BN_POOL *p);

static void BN_POOL_release(BN_POOL *p, unsigned int num);

static void BN_STACK_init(BN_STACK *st);

static void BN_STACK_finish(BN_STACK *st);

static void BN_STACK_reset(BN_STACK *st);

static int BN_STACK_push(BN_STACK *st, unsigned int idx);

static unsigned int BN_STACK_pop(BN_STACK *st);

void BN_CTX_init(BN_CTX *ctx)
{
  BN_POOL_reset(& ctx->pool);
  BN_STACK_reset(& ctx->stack);
  ctx->used = (unsigned int)0;
  ctx->err_stack = 0;
  ctx->too_many = 0;
  return;
}

BN_CTX *BN_CTX_new(void)
{
  BN_CTX *__retres;
  BN_CTX *ret;
  ret = CRYPTO_malloc_BN_CTX(1);
  if (! ret) {
    ERR_put_error(3,106,1 | 64,"crypto/bn/bn_ctx.c",219);
    __retres = (BN_CTX *)((void *)0);
    goto return_label;
  }
  BN_POOL_init(& ret->pool);
  BN_STACK_init(& ret->stack);
  ret->used = (unsigned int)0;
  ret->err_stack = 0;
  ret->too_many = 0;
  __retres = ret;
  return_label: return __retres;
}

void BN_CTX_free(BN_CTX *ctx)
{
  if (ctx == (void *)0) goto return_label;
  BN_STACK_finish(& ctx->stack);
  BN_POOL_finish(& ctx->pool);
  CRYPTO_free((void *)ctx);
  return_label: return;
}

void BN_CTX_start(BN_CTX *ctx)
{
  if (ctx->err_stack) (ctx->err_stack) ++;
  else 
    if (ctx->too_many) (ctx->err_stack) ++;
    else {
      int tmp;
      tmp = BN_STACK_push(& ctx->stack,ctx->used);
      if (! tmp) {
        ERR_put_error(3,129,109,"crypto/bn/bn_ctx.c",264);
        (ctx->err_stack) ++;
      }
    }
  return;
}

void BN_CTX_end(BN_CTX *ctx)
{
  if (ctx->err_stack) (ctx->err_stack) --;
  else {
    unsigned int fp;
    fp = BN_STACK_pop(& ctx->stack);
    if (fp < ctx->used) BN_POOL_release(& ctx->pool,ctx->used - fp);
    ctx->used = fp;
    ctx->too_many = 0;
  }
  return;
}

BIGNUM *BN_CTX_get(BN_CTX *ctx)
{
  BIGNUM *__retres;
  BIGNUM *ret;
  if (ctx->err_stack) {
    __retres = (BIGNUM *)((void *)0);
    goto return_label;
  }
  else 
    if (ctx->too_many) {
      __retres = (BIGNUM *)((void *)0);
      goto return_label;
    }
  ret = BN_POOL_get(& ctx->pool);
  if (ret == (void *)0) {
    ctx->too_many = 1;
    ERR_put_error(3,116,109,"crypto/bn/bn_ctx.c",298);
    __retres = (BIGNUM *)((void *)0);
    goto return_label;
  }
  BN_set_word(ret,(unsigned long)0);
  (ctx->used) ++;
  __retres = ret;
  return_label: return __retres;
}

static void BN_STACK_init(BN_STACK *st)
{
  unsigned int tmp;
  st->indexes = (unsigned int *)((void *)0);
  {
    /*sequence*/
    tmp = (unsigned int)0;
    st->size = tmp;
    st->depth = tmp;
  }
  return;
}

static void BN_STACK_finish(BN_STACK *st)
{
  if (st->size) CRYPTO_free((void *)st->indexes);
  return;
}

static void BN_STACK_reset(BN_STACK *st)
{
  st->depth = (unsigned int)0;
  return;
}

static int BN_STACK_push(BN_STACK *st, unsigned int idx)
{
  int __retres;
  unsigned int tmp_1;
  if (st->depth == st->size) {
    unsigned int newsize;
    unsigned int tmp;
    unsigned int *newitems;
    if (st->size) tmp = (st->size * (unsigned int)3) / (unsigned int)2;
    else tmp = (unsigned int)32;
    newsize = tmp;
    newitems = CRYPTO_malloc_unsigned_int((int)newsize);
    if (! newitems) {
      __retres = 0;
      goto return_label;
    }
    if (st->depth) memcpy_unsigned_int(newitems,st->indexes,
                          (unsigned int)((unsigned long)st->depth * sizeof(unsigned int)));
    if (st->size) CRYPTO_free((void *)st->indexes);
    st->indexes = newitems;
    st->size = newsize;
  }
  {
    /*sequence*/
    tmp_1 = st->depth;
    (st->depth) ++;
    *(st->indexes + tmp_1) = idx;
  }
  __retres = 1;
  return_label: return __retres;
}

static unsigned int BN_STACK_pop(BN_STACK *st)
{
  unsigned int __retres;
  {
    /*sequence*/
    (st->depth) --;
    ;
  }
  __retres = *(st->indexes + st->depth);
  return __retres;
}

static void BN_POOL_init(BN_POOL *p)
{
  BN_POOL_ITEM *tmp_0;
  BN_POOL_ITEM *tmp;
  unsigned int tmp_1;
  {
    /*sequence*/
    {
      /*sequence*/
      tmp_0 = (BN_POOL_ITEM *)((void *)0);
      p->tail = tmp_0;
      tmp = tmp_0;
    }
    p->current = tmp;
    p->head = tmp;
  }
  {
    /*sequence*/
    tmp_1 = (unsigned int)0;
    p->size = tmp_1;
    p->used = tmp_1;
  }
  return;
}

static void BN_POOL_finish(BN_POOL *p)
{
  while (p->head) {
    unsigned int loop;
    BIGNUM *bn;
    loop = (unsigned int)0;
    bn = (p->head)->vals;
    while (1) {
      unsigned int tmp;
      {
        /*sequence*/
        tmp = loop;
        loop ++;
        ;
      }
      if (! (tmp < (unsigned int)16)) break;
      if (bn->d) BN_clear_free(bn);
      bn ++;
    }
    p->current = (p->head)->next;
    CRYPTO_free((void *)p->head);
    p->head = p->current;
  }
  return;
}

static void BN_POOL_reset(BN_POOL *p)
{
  BN_POOL_ITEM *item;
  item = p->head;
  while (item) {
    unsigned int loop;
    BIGNUM *bn;
    loop = (unsigned int)0;
    bn = item->vals;
    while (1) {
      unsigned int tmp;
      {
        /*sequence*/
        tmp = loop;
        loop ++;
        ;
      }
      if (! (tmp < (unsigned int)16)) break;
      if (bn->d) BN_clear(bn);
      bn ++;
    }
    item = item->next;
  }
  p->current = p->head;
  p->used = (unsigned int)0;
  return;
}

static BIGNUM *BN_POOL_get(BN_POOL *p)
{
  BIGNUM *__retres;
  unsigned int tmp_4;
  if (p->used == p->size) {
    BIGNUM *bn;
    unsigned int loop;
    BN_POOL_ITEM *item;
    loop = (unsigned int)0;
    item = CRYPTO_malloc_BN_POOL_ITEM(1);
    if (! item) {
      __retres = (BIGNUM *)((void *)0);
      goto return_label;
    }
    bn = item->vals;
    while (1) {
      unsigned int tmp_1;
      BIGNUM *tmp_0;
      {
        /*sequence*/
        tmp_1 = loop;
        loop ++;
        ;
      }
      if (! (tmp_1 < (unsigned int)16)) break;
      {
        /*sequence*/
        tmp_0 = bn;
        bn ++;
        ;
      }
      BN_init(tmp_0);
    }
    item->prev = p->tail;
    item->next = (struct bignum_pool_item *)((void *)0);
    if (! p->head) {
      BN_POOL_ITEM *tmp_3;
      BN_POOL_ITEM *tmp_2;
      {
        /*sequence*/
        {
          /*sequence*/
          tmp_3 = item;
          p->tail = tmp_3;
          tmp_2 = tmp_3;
        }
        p->current = tmp_2;
        p->head = tmp_2;
      }
    }
    else {
      (p->tail)->next = item;
      p->tail = item;
      p->current = item;
    }
    p->size += (unsigned int)16;
    (p->used) ++;
    __retres = item->vals;
    goto return_label;
  }
  if (! p->used) p->current = p->head;
  else 
    if (p->used % (unsigned int)16 == (unsigned int)0) p->current = (p->current)->next;
  {
    /*sequence*/
    tmp_4 = p->used;
    (p->used) ++;
    ;
  }
  __retres = & (p->current)->vals[tmp_4 % (unsigned int)16];
  return_label: return __retres;
}

static void BN_POOL_release(BN_POOL *p, unsigned int num)
{
  unsigned int offset;
  offset = (p->used - (unsigned int)1) % (unsigned int)16;
  p->used -= num;
  while (1) {
    unsigned int tmp;
    {
      /*sequence*/
      tmp = num;
      num --;
      ;
    }
    if (! tmp) break;
    if (! offset) {
      offset = (unsigned int)(16 - 1);
      p->current = (p->current)->prev;
    }
    else offset --;
  }
  return;
}

/* No specification of full semantics, but probably better to leave
 * that out for now. */
/*@ requires \valid((char *)ptr+(0 .. len-1));
    ensures \true;
    assigns  *((char *)ptr+(0 .. len-1));
 */
/* void OPENSSL_cleanse(void *ptr, size_t len) { return; } */
void OPENSSL_cleanse_BIGNUM(BIGNUM *ptr, size_t len) { return; }
void OPENSSL_cleanse_unsigned_long(unsigned long* ptr, size_t len) { return; }

BIGNUM const *BN_value_one(void);

int BN_num_bits(BIGNUM const *a);

BIGNUM *BN_new(void);

BIGNUM *BN_copy(BIGNUM *a, BIGNUM const *b);

void BN_swap(BIGNUM *a, BIGNUM *b);

int BN_bn2bin(BIGNUM const *a, unsigned char *to);

void BN_set_negative(BIGNUM *a, int b);

unsigned long BN_get_word(BIGNUM const *a);

int BN_cmp(BIGNUM const *a, BIGNUM const *b);

void BN_free(BIGNUM *a);

int BN_is_bit_set(BIGNUM const *a, int n);

int BN_mask_bits(BIGNUM *a, int n);

BIGNUM *BN_dup(BIGNUM const *a);

int BN_set_bit(BIGNUM *a, int n);

int BN_clear_bit(BIGNUM *a, int n);

void BN_consttime_swap(unsigned long condition, BIGNUM *a, BIGNUM *b,
                       int nwords);

void BN_set_params(int mult, int high, int low, int mont);

int BN_get_params(int which);

BIGNUM *bn_dup_expand(BIGNUM const *b, int words);

int bn_cmp_words(unsigned long const *a, unsigned long const *b, int n);

int bn_cmp_part_words(unsigned long const *a, unsigned long const *b, int cl,
                      int dl);

char const BN_version[45] =   
                              {(char)'B', (char)'i', (char)'g', (char)' ',
                               (char)'N', (char)'u', (char)'m', (char)'b',
                               (char)'e', (char)'r', (char)' ', (char)'p',
                               (char)'a', (char)'r', (char)'t', (char)' ',
                               (char)'o', (char)'f', (char)' ', (char)'O',
                               (char)'p', (char)'e', (char)'n', (char)'S',
                               (char)'S', (char)'L', (char)' ', (char)'1',
                               (char)'.', (char)'0', (char)'.', (char)'1',
                               (char)'i', (char)' ', (char)'6', (char)' ',
                               (char)'A', (char)'u', (char)'g', (char)' ',
                               (char)'2', (char)'0', (char)'1', (char)'4',
                               (char)'\000'};
static int bn_limit_bits = 0;
static int bn_limit_num = 8;
static int bn_limit_bits_low = 0;
static int bn_limit_num_low = 8;
static int bn_limit_bits_high = 0;
static int bn_limit_num_high = 8;
static int bn_limit_bits_mont = 0;
static int bn_limit_num_mont = 8;
void BN_set_params(int mult, int high, int low, int mont)
{
  if (mult >= 0) {
    if (mult > (int)(sizeof(int) * (unsigned long)8) - 1) mult = (int)(
                                                          sizeof(int) * (unsigned long)8 - (unsigned long)1);
    bn_limit_bits = mult;
    bn_limit_num = 1 << mult;
  }
  if (high >= 0) {
    if (high > (int)(sizeof(int) * (unsigned long)8) - 1) high = (int)(
                                                          sizeof(int) * (unsigned long)8 - (unsigned long)1);
    bn_limit_bits_high = high;
    bn_limit_num_high = 1 << high;
  }
  if (low >= 0) {
    if (low > (int)(sizeof(int) * (unsigned long)8) - 1) low = (int)(
                                                         sizeof(int) * (unsigned long)8 - (unsigned long)1);
    bn_limit_bits_low = low;
    bn_limit_num_low = 1 << low;
  }
  if (mont >= 0) {
    if (mont > (int)(sizeof(int) * (unsigned long)8) - 1) mont = (int)(
                                                          sizeof(int) * (unsigned long)8 - (unsigned long)1);
    bn_limit_bits_mont = mont;
    bn_limit_num_mont = 1 << mont;
  }
  return;
}

int BN_get_params(int which)
{
  int __retres;
  if (which == 0) {
    __retres = bn_limit_bits;
    goto return_label;
  }
  else 
    if (which == 1) {
      __retres = bn_limit_bits_high;
      goto return_label;
    }
    else 
      if (which == 2) {
        __retres = bn_limit_bits_low;
        goto return_label;
      }
      else 
        if (which == 3) {
          __retres = bn_limit_bits_mont;
          goto return_label;
        }
        else {
          __retres = 0;
          goto return_label;
        }
  return_label: return __retres;
}

static unsigned long const data_one = (unsigned long)1L;
static BIGNUM const const_one = {.d = (unsigned long *)(& data_one),
                                 .top = 1, .dmax = 1, .neg = 0, .flags = 0x02};
BIGNUM const *BN_value_one(void)
{
  BIGNUM const *__retres;
  __retres = & const_one;
  return __retres;
}

static unsigned char const bits[256] =   
                                         {(unsigned char)0, (unsigned char)1,
                                          (unsigned char)2, (unsigned char)2,
                                          (unsigned char)3, (unsigned char)3,
                                          (unsigned char)3, (unsigned char)3,
                                          (unsigned char)4, (unsigned char)4,
                                          (unsigned char)4, (unsigned char)4,
                                          (unsigned char)4, (unsigned char)4,
                                          (unsigned char)4, (unsigned char)4,
                                          (unsigned char)5, (unsigned char)5,
                                          (unsigned char)5, (unsigned char)5,
                                          (unsigned char)5, (unsigned char)5,
                                          (unsigned char)5, (unsigned char)5,
                                          (unsigned char)5, (unsigned char)5,
                                          (unsigned char)5, (unsigned char)5,
                                          (unsigned char)5, (unsigned char)5,
                                          (unsigned char)5, (unsigned char)5,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)6, (unsigned char)6,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)7, (unsigned char)7,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8,
                                          (unsigned char)8, (unsigned char)8};
int BN_num_bits_word(unsigned long l)
{
  int __retres;
  if (l & 0xffffffff00000000L) 
    if (l & 0xffff000000000000L) 
      if (l & 0xff00000000000000L) {
        __retres = (int)bits[(int)(l >> 56)] + 56;
        goto return_label;
      }
      else {
        __retres = (int)bits[(int)(l >> 48)] + 48;
        goto return_label;
      }
    else 
      if (l & (unsigned long)0x0000ff0000000000L) {
        __retres = (int)bits[(int)(l >> 40)] + 40;
        goto return_label;
      }
      else {
        __retres = (int)bits[(int)(l >> 32)] + 32;
        goto return_label;
      }
  else 
    if (l & (unsigned long)0xffff0000L) 
      if (l & (unsigned long)0xff000000L) {
        __retres = (int)bits[(int)(l >> 24L)] + 24;
        goto return_label;
      }
      else {
        __retres = (int)bits[(int)(l >> 16L)] + 16;
        goto return_label;
      }
    else 
      if (l & (unsigned long)0xff00L) {
        __retres = (int)bits[(int)(l >> 8)] + 8;
        goto return_label;
      }
      else {
        __retres = (int)bits[(int)l];
        goto return_label;
      }
  return_label: return __retres;
}

int BN_num_bits(BIGNUM const *a)
{
  int __retres;
  int i;
  int tmp;
  i = a->top - 1;
  if (a->top == 0) {
    __retres = 0;
    goto return_label;
  }
  {
    /*sequence*/
    tmp = BN_num_bits_word(*(a->d + i));
    ;
  }
  __retres = i * 64 + tmp;
  return_label: return __retres;
}

void BN_clear_free(BIGNUM *a)
{
  int i;
  if (a == (void *)0) goto return_label;
  if (a->d != (void *)0) {
    OPENSSL_cleanse_unsigned_long(a->d,
                    (unsigned int)((unsigned long)a->dmax * sizeof(*(
                                   a->d + 0))));
    if (! (a->flags & 0x02)) CRYPTO_free((void *)a->d);
  }
  i = a->flags & 0x01;
  OPENSSL_cleanse_BIGNUM(a,(unsigned int)sizeof(BIGNUM));
  if (i) CRYPTO_free((void *)a);
  return_label: return;
}

void BN_free(BIGNUM *a)
{
  if (a == (void *)0) goto return_label;
  if (a->d != (void *)0) 
    if (! (a->flags & 0x02)) CRYPTO_free((void *)a->d);
  if (a->flags & 0x01) CRYPTO_free((void *)a);
  else {
    a->flags |= 0x8000;
    a->d = (unsigned long *)((void *)0);
  }
  return_label: return;
}

void BN_init(BIGNUM *a)
{
  memset_BIGNUM(a,0,(unsigned int)sizeof(BIGNUM));
  return;
}

BIGNUM *BN_new(void)
{
  BIGNUM *__retres;
  BIGNUM *ret;
  ret = CRYPTO_malloc_BIGNUM(1);
  if (ret == (void *)0) {
    ERR_put_error(3,113,1 | 64,"crypto/bn/bn_lib.c",285);
    __retres = (BIGNUM *)((void *)0);
    goto return_label;
  }
  ret->flags = 0x01;
  ret->top = 0;
  ret->neg = 0;
  ret->dmax = 0;
  ret->d = (unsigned long *)((void *)0);
  __retres = ret;
  return_label: return __retres;
}

static unsigned long *bn_expand_internal(BIGNUM const *b, int words)
{
  unsigned long *__retres;
  unsigned long *A;
  unsigned long *a;
  unsigned long const *B;
  int i;
  a = (unsigned long *)((void *)0);
  if (words > 2147483647 / (4 * 64)) {
    ERR_put_error(3,120,114,"crypto/bn/bn_lib.c",309);
    __retres = (unsigned long *)((void *)0);
    goto return_label;
  }
  if (b->flags & 0x02) {
    ERR_put_error(3,120,105,"crypto/bn/bn_lib.c",314);
    __retres = (unsigned long *)((void *)0);
    goto return_label;
  }
  {
    /*sequence*/
    A = CRYPTO_malloc_unsigned_long(words);
    a = A;
  }
  if (A == (void *)0) {
    ERR_put_error(3,120,1 | 64,"crypto/bn/bn_lib.c",320);
    __retres = (unsigned long *)((void *)0);
    goto return_label;
  }
  B = (unsigned long const *)b->d;
  if (B != (void *)0) {
    i = b->top >> 2;
    while (i > 0) {
      {
        unsigned long a0;
        unsigned long a1;
        unsigned long a2;
        unsigned long a3;
        a0 = *(B + 0);
        a1 = *(B + 1);
        a2 = *(B + 2);
        a3 = *(B + 3);
        *(A + 0) = a0;
        *(A + 1) = a1;
        *(A + 2) = a2;
        *(A + 3) = a3;
      }
      i --;
      A += 4;
      B += 4;
    }
    switch (b->top & 3) {
      case 3: *(A + 2) = *(B + 2);
      case 2: *(A + 1) = *(B + 1);
      case 1: *(A + 0) = *(B + 0);
      case 0: ;
    }
  }
  __retres = a;
  return_label: return __retres;
}

BIGNUM *bn_dup_expand(BIGNUM const *b, int words)
{
  BIGNUM *r;
  r = (BIGNUM *)((void *)0);
  if (words > b->dmax) {
    unsigned long *a;
    a = bn_expand_internal(b,words);
    if (a) {
      r = BN_new();
      if (r) {
        r->top = b->top;
        r->dmax = words;
        r->neg = b->neg;
        r->d = a;
      }
      else CRYPTO_free((void *)a);
    }
  }
  else r = BN_dup(b);
  return r;
}

BIGNUM *bn_expand2(BIGNUM *b, int words)
{
  BIGNUM *__retres;
  if (words > b->dmax) {
    unsigned long *a;
    a = bn_expand_internal((BIGNUM const *)b,words);
    if (! a) {
      __retres = (BIGNUM *)((void *)0);
      goto return_label;
    }
    if (b->d) CRYPTO_free((void *)b->d);
    b->d = a;
    b->dmax = words;
  }
  __retres = b;
  return_label: return __retres;
}

BIGNUM *BN_dup(BIGNUM const *a)
{
  BIGNUM *__retres;
  BIGNUM *t;
  BIGNUM *tmp;
  if (a == (void *)0) {
    __retres = (BIGNUM *)((void *)0);
    goto return_label;
  }
  t = BN_new();
  if (t == (void *)0) {
    __retres = (BIGNUM *)((void *)0);
    goto return_label;
  }
  tmp = BN_copy(t,a);
  if (! tmp) {
    BN_free(t);
    __retres = (BIGNUM *)((void *)0);
    goto return_label;
  }
  __retres = t;
  return_label: return __retres;
}

BIGNUM *BN_copy(BIGNUM *a, BIGNUM const *b)
{
  BIGNUM *__retres;
  int i;
  unsigned long *A;
  unsigned long const *B;
  BIGNUM *tmp_0;
  if (a == b) {
    __retres = a;
    goto return_label;
  }
  if (b->top <= a->dmax) tmp_0 = a; else tmp_0 = bn_expand2(a,b->top);
  if (tmp_0 == (void *)0) {
    __retres = (BIGNUM *)((void *)0);
    goto return_label;
  }
  A = a->d;
  B = (unsigned long const *)b->d;
  i = b->top >> 2;
  while (i > 0) {
    {
      unsigned long a0;
      unsigned long a1;
      unsigned long a2;
      unsigned long a3;
      a0 = *(B + 0);
      a1 = *(B + 1);
      a2 = *(B + 2);
      a3 = *(B + 3);
      *(A + 0) = a0;
      *(A + 1) = a1;
      *(A + 2) = a2;
      *(A + 3) = a3;
    }
    i --;
    A += 4;
    B += 4;
  }
  switch (b->top & 3) {
    case 3: *(A + 2) = *(B + 2);
    case 2: *(A + 1) = *(B + 1);
    case 1: *(A + 0) = *(B + 0);
    case 0: ;
  }
  a->top = b->top;
  a->neg = b->neg;
  __retres = a;
  return_label: return __retres;
}

void BN_swap(BIGNUM *a, BIGNUM *b)
{
  int flags_old_a;
  int flags_old_b;
  unsigned long *tmp_d;
  int tmp_top;
  int tmp_dmax;
  int tmp_neg;
  flags_old_a = a->flags;
  flags_old_b = b->flags;
  tmp_d = a->d;
  tmp_top = a->top;
  tmp_dmax = a->dmax;
  tmp_neg = a->neg;
  a->d = b->d;
  a->top = b->top;
  a->dmax = b->dmax;
  a->neg = b->neg;
  b->d = tmp_d;
  b->top = tmp_top;
  b->dmax = tmp_dmax;
  b->neg = tmp_neg;
  a->flags = (flags_old_a & 0x01) | (flags_old_b & 0x02);
  b->flags = (flags_old_b & 0x01) | (flags_old_a & 0x02);
  return;
}

void BN_clear(BIGNUM *a)
{
  if (a->d != (void *)0) memset_unsigned_long(a->d,0,
                                (unsigned int)((unsigned long)a->dmax * sizeof(*(
                                               a->d + 0))));
  a->top = 0;
  a->neg = 0;
  return;
}

unsigned long BN_get_word(BIGNUM const *a)
{
  unsigned long __retres;
  if (a->top > 1) {
    __retres = 0xffffffffffffffffL;
    goto return_label;
  }
  else 
    if (a->top == 1) {
      __retres = *(a->d + 0);
      goto return_label;
    }
  __retres = (unsigned long)0;
  return_label: return __retres;
}

int BN_set_word(BIGNUM *a, unsigned long w)
{
  int __retres;
  BIGNUM *tmp_0;
  if ((((int)sizeof(unsigned long) * 8 + 64) - 1) / 64 <= a->dmax) tmp_0 = a;
  else tmp_0 = bn_expand2(a,(((int)sizeof(unsigned long) * 8 + 64) - 1) / 64);
  if (tmp_0 == (void *)0) {
    __retres = 0;
    goto return_label;
  }
  a->neg = 0;
  *(a->d + 0) = w;
  if (w) a->top = 1; else a->top = 0;
  __retres = 1;
  return_label: return __retres;
}

BIGNUM *BN_bin2bn(unsigned char const *s, int len, BIGNUM *ret)
{
  BIGNUM *__retres;
  unsigned int i;
  unsigned int m;
  unsigned int n;
  unsigned long l;
  BIGNUM *bn;
  BIGNUM *tmp_0;
  bn = (BIGNUM *)((void *)0);
  if (ret == (void *)0) 
    {
      /*sequence*/
      bn = BN_new();
      ret = bn;
    }
  if (ret == (void *)0) {
    __retres = (BIGNUM *)((void *)0);
    goto return_label;
  }
  l = (unsigned long)0;
  n = (unsigned int)len;
  if (n == (unsigned int)0) {
    ret->top = 0;
    __retres = ret;
    goto return_label;
  }
  i = (n - (unsigned int)1) / (unsigned int)8 + (unsigned int)1;
  m = (n - (unsigned int)1) % (unsigned int)8;
  if ((int)i <= ret->dmax) tmp_0 = ret; else tmp_0 = bn_expand2(ret,(int)i);
  if (tmp_0 == (void *)0) {
    if (bn) BN_free(bn);
    __retres = (BIGNUM *)((void *)0);
    goto return_label;
  }
  ret->top = (int)i;
  ret->neg = 0;
  while (1) {
    unsigned int tmp_3;
    {
      /*sequence*/
      tmp_3 = n;
      n --;
      ;
    }
    if (! tmp_3) break;
    {
      unsigned char const *tmp_1;
      unsigned int tmp_2;
      {
        /*sequence*/
        tmp_1 = s;
        s ++;
        l = (l << 8L) | (unsigned long)*tmp_1;
      }
      {
        /*sequence*/
        tmp_2 = m;
        m --;
        ;
      }
      if (tmp_2 == (unsigned int)0) {
        {
          /*sequence*/
          i --;
          *(ret->d + i) = l;
        }
        l = (unsigned long)0;
        m = (unsigned int)(8 - 1);
      }
    }
  }
  {
    unsigned long *ftl;
    int tmp_top;
    tmp_top = ret->top;
    if (tmp_top > 0) {
      ftl = ret->d + (tmp_top - 1);
      while (tmp_top > 0) {
        unsigned long *tmp_4;
        {
          /*sequence*/
          tmp_4 = ftl;
          ftl --;
          ;
        }
        if (*tmp_4) break;
        tmp_top --;
      }
      ret->top = tmp_top;
    }
  }
  __retres = ret;
  return_label: return __retres;
}

int BN_bn2bin(BIGNUM const *a, unsigned char *to)
{
  int n;
  int i;
  unsigned long l;
  int tmp;
  {
    /*sequence*/
    tmp = BN_num_bits(a);
    i = (tmp + 7) / 8;
    n = i;
  }
  while (1) {
    int tmp_1;
    {
      /*sequence*/
      tmp_1 = i;
      i --;
      ;
    }
    if (! tmp_1) break;
    {
      unsigned char *tmp_0;
      l = *(a->d + i / 8);
      {
        /*sequence*/
        tmp_0 = to;
        to ++;
        *tmp_0 = (unsigned char)((int)((unsigned char)(l >> 8 * (i % 8))) & 0xff);
      }
    }
  }
  return n;
}

int BN_ucmp(BIGNUM const *a, BIGNUM const *b)
{
  int __retres;
  int i;
  unsigned long t1;
  unsigned long t2;
  unsigned long *ap;
  unsigned long *bp;
  i = a->top - b->top;
  if (i != 0) {
    __retres = i;
    goto return_label;
  }
  ap = a->d;
  bp = b->d;
  i = a->top - 1;
  while (i >= 0) {
    t1 = *(ap + i);
    t2 = *(bp + i);
    if (t1 != t2) {
      int tmp;
      if (t1 > t2) tmp = 1; else tmp = -1;
      __retres = tmp;
      goto return_label;
    }
    i --;
  }
  __retres = 0;
  return_label: return __retres;
}

int BN_cmp(BIGNUM const *a, BIGNUM const *b)
{
  int __retres;
  int i;
  int gt;
  int lt;
  unsigned long t1;
  unsigned long t2;
  if (a == (void *)0) goto _LOR;
  else 
    if (b == (void *)0) 
      _LOR:
        if (a != (void *)0) {
          __retres = -1;
          goto return_label;
        }
        else 
          if (b != (void *)0) {
            __retres = 1;
            goto return_label;
          }
          else {
            __retres = 0;
            goto return_label;
          }
  if (a->neg != b->neg) 
    if (a->neg) {
      __retres = -1;
      goto return_label;
    }
    else {
      __retres = 1;
      goto return_label;
    }
  if (a->neg == 0) {
    gt = 1;
    lt = -1;
  }
  else {
    gt = -1;
    lt = 1;
  }
  if (a->top > b->top) {
    __retres = gt;
    goto return_label;
  }
  if (a->top < b->top) {
    __retres = lt;
    goto return_label;
  }
  i = a->top - 1;
  while (i >= 0) {
    t1 = *(a->d + i);
    t2 = *(b->d + i);
    if (t1 > t2) {
      __retres = gt;
      goto return_label;
    }
    if (t1 < t2) {
      __retres = lt;
      goto return_label;
    }
    i --;
  }
  __retres = 0;
  return_label: return __retres;
}

int BN_set_bit(BIGNUM *a, int n)
{
  int __retres;
  int i;
  int j;
  int k;
  if (n < 0) {
    __retres = 0;
    goto return_label;
  }
  i = n / 64;
  j = n % 64;
  if (a->top <= i) {
    BIGNUM *tmp_0;
    if (i + 1 <= a->dmax) tmp_0 = a; else tmp_0 = bn_expand2(a,i + 1);
    if (tmp_0 == (void *)0) {
      __retres = 0;
      goto return_label;
    }
    k = a->top;
    while (k < i + 1) {
      *(a->d + k) = (unsigned long)0;
      k ++;
    }
    a->top = i + 1;
  }
  *(a->d + i) |= (unsigned long)1 << j;
  __retres = 1;
  return_label: return __retres;
}

int BN_clear_bit(BIGNUM *a, int n)
{
  int __retres;
  int i;
  int j;
  if (n < 0) {
    __retres = 0;
    goto return_label;
  }
  i = n / 64;
  j = n % 64;
  if (a->top <= i) {
    __retres = 0;
    goto return_label;
  }
  *(a->d + i) &= ~ ((unsigned long)1 << j);
  {
    unsigned long *ftl;
    int tmp_top;
    tmp_top = a->top;
    if (tmp_top > 0) {
      ftl = a->d + (tmp_top - 1);
      while (tmp_top > 0) {
        unsigned long *tmp;
        {
          /*sequence*/
          tmp = ftl;
          ftl --;
          ;
        }
        if (*tmp) break;
        tmp_top --;
      }
      a->top = tmp_top;
    }
  }
  __retres = 1;
  return_label: return __retres;
}

int BN_is_bit_set(BIGNUM const *a, int n)
{
  int __retres;
  int i;
  int j;
  if (n < 0) {
    __retres = 0;
    goto return_label;
  }
  i = n / 64;
  j = n % 64;
  if (a->top <= i) {
    __retres = 0;
    goto return_label;
  }
  __retres = (int)((*(a->d + i) >> j) & (unsigned long)1);
  return_label: return __retres;
}

int BN_mask_bits(BIGNUM *a, int n)
{
  int __retres;
  int b;
  int w;
  if (n < 0) {
    __retres = 0;
    goto return_label;
  }
  w = n / 64;
  b = n % 64;
  if (w >= a->top) {
    __retres = 0;
    goto return_label;
  }
  if (b == 0) a->top = w;
  else {
    a->top = w + 1;
    *(a->d + w) &= ~ (0xffffffffffffffffL << b);
  }
  {
    unsigned long *ftl;
    int tmp_top;
    tmp_top = a->top;
    if (tmp_top > 0) {
      ftl = a->d + (tmp_top - 1);
      while (tmp_top > 0) {
        unsigned long *tmp;
        {
          /*sequence*/
          tmp = ftl;
          ftl --;
          ;
        }
        if (*tmp) break;
        tmp_top --;
      }
      a->top = tmp_top;
    }
  }
  __retres = 1;
  return_label: return __retres;
}

void BN_set_negative(BIGNUM *a, int b)
{
  if (b) 
    if (! (a->top == 0)) a->neg = 1; else a->neg = 0;
  else a->neg = 0;
  return;
}

int bn_cmp_words(unsigned long const *a, unsigned long const *b, int n)
{
  int __retres;
  int i;
  unsigned long aa;
  unsigned long bb;
  aa = *(a + (n - 1));
  bb = *(b + (n - 1));
  if (aa != bb) {
    int tmp;
    if (aa > bb) tmp = 1; else tmp = -1;
    __retres = tmp;
    goto return_label;
  }
  i = n - 2;
  while (i >= 0) {
    aa = *(a + i);
    bb = *(b + i);
    if (aa != bb) {
      int tmp_0;
      if (aa > bb) tmp_0 = 1; else tmp_0 = -1;
      __retres = tmp_0;
      goto return_label;
    }
    i --;
  }
  __retres = 0;
  return_label: return __retres;
}

int bn_cmp_part_words(unsigned long const *a, unsigned long const *b, int cl,
                      int dl)
{
  int __retres;
  int n;
  int i;
  int tmp;
  n = cl - 1;
  if (dl < 0) {
    i = dl;
    while (i < 0) {
      if (*(b + (n - i)) != (unsigned long)0) {
        __retres = -1;
        goto return_label;
      }
      i ++;
    }
  }
  if (dl > 0) {
    i = dl;
    while (i > 0) {
      if (*(a + (n + i)) != (unsigned long)0) {
        __retres = 1;
        goto return_label;
      }
      i --;
    }
  }
  tmp = bn_cmp_words(a,b,cl);
  __retres = tmp;
  return_label: return __retres;
}

void BN_consttime_swap(unsigned long condition, BIGNUM *a, BIGNUM *b,
                       int nwords)
{
  unsigned long t;
  int i;
  condition = ((condition - (unsigned long)1) >> (64 - 1)) - (unsigned long)1;
  t = (unsigned long)(a->top ^ b->top) & condition;
  a->top = (int)((unsigned long)a->top ^ t);
  b->top = (int)((unsigned long)b->top ^ t);
  switch (nwords) {
    default: ;
    i = 10;
    while (i < nwords) {
      t = (*(a->d + i) ^ *(b->d + i)) & condition;
      *(a->d + i) ^= t;
      *(b->d + i) ^= t;
      i ++;
    }
    case 10:
      t = (*(a->d + 9) ^ *(b->d + 9)) & condition;
      *(a->d + 9) ^= t;
      *(b->d + 9) ^= t;
    case 9:
      t = (*(a->d + 8) ^ *(b->d + 8)) & condition;
      *(a->d + 8) ^= t;
      *(b->d + 8) ^= t;
    case 8:
      t = (*(a->d + 7) ^ *(b->d + 7)) & condition;
      *(a->d + 7) ^= t;
      *(b->d + 7) ^= t;
    case 7:
      t = (*(a->d + 6) ^ *(b->d + 6)) & condition;
      *(a->d + 6) ^= t;
      *(b->d + 6) ^= t;
    case 6:
      t = (*(a->d + 5) ^ *(b->d + 5)) & condition;
      *(a->d + 5) ^= t;
      *(b->d + 5) ^= t;
    case 5:
      t = (*(a->d + 4) ^ *(b->d + 4)) & condition;
      *(a->d + 4) ^= t;
      *(b->d + 4) ^= t;
    case 4:
      t = (*(a->d + 3) ^ *(b->d + 3)) & condition;
      *(a->d + 3) ^= t;
      *(b->d + 3) ^= t;
    case 3:
      t = (*(a->d + 2) ^ *(b->d + 2)) & condition;
      *(a->d + 2) ^= t;
      *(b->d + 2) ^= t;
    case 2:
      t = (*(a->d + 1) ^ *(b->d + 1)) & condition;
      *(a->d + 1) ^= t;
      *(b->d + 1) ^= t;
    case 1:
      t = (*(a->d + 0) ^ *(b->d + 0)) & condition;
      *(a->d + 0) ^= t;
      *(b->d + 0) ^= t;
  }
  return;
}

BIGNUM *BN_mpi2bn(unsigned char const *d, int n, BIGNUM *a);

int BN_bn2mpi(BIGNUM const *a, unsigned char *d);

int BN_bn2mpi(BIGNUM const *a, unsigned char *d)
{
  int __retres;
  int bits_0;
  int num;
  int ext;
  long l;
  num = 0;
  ext = 0;
  bits_0 = BN_num_bits(a);
  num = (bits_0 + 7) / 8;
  if (bits_0 > 0) ext = (bits_0 & 0x07) == 0;
  if (d == (void *)0) {
    __retres = (num + 4) + ext;
    goto return_label;
  }
  l = (long)(num + ext);
  *(d + 0) = (unsigned char)((int)((unsigned char)(l >> 24)) & 0xff);
  *(d + 1) = (unsigned char)((int)((unsigned char)(l >> 16)) & 0xff);
  *(d + 2) = (unsigned char)((int)((unsigned char)(l >> 8)) & 0xff);
  *(d + 3) = (unsigned char)((int)((unsigned char)l) & 0xff);
  if (ext) *(d + 4) = (unsigned char)0;
  num = BN_bn2bin(a,d + (4 + ext));
  if (a->neg) *(d + 4) = (unsigned char)((int)*(d + 4) | 0x80);
  __retres = (num + 4) + ext;
  return_label: return __retres;
}

BIGNUM *BN_mpi2bn(unsigned char const *d, int n, BIGNUM *a)
{
  BIGNUM *__retres;
  long len;
  int neg;
  BIGNUM *tmp;
  neg = 0;
  if (n < 4) {
    ERR_put_error(3,112,106,"crypto/bn/bn_mpi.c",98);
    __retres = (BIGNUM *)((void *)0);
    goto return_label;
  }
  len = ((((long)*(d + 0) << 24) | ((long)*(d + 1) << 16)) | (long)((int)*(
                                                                    d + 2) << 8)) | (long)((int)*(
        d + 3));
  if (len + (long)4 != (long)n) {
    ERR_put_error(3,112,104,"crypto/bn/bn_mpi.c",104);
    __retres = (BIGNUM *)((void *)0);
    goto return_label;
  }
  if (a == (void *)0) a = BN_new();
  if (a == (void *)0) {
    __retres = (BIGNUM *)((void *)0);
    goto return_label;
  }
  if (len == (long)0) {
    a->neg = 0;
    a->top = 0;
    __retres = a;
    goto return_label;
  }
  d += 4;
  if ((int)*d & 0x80) neg = 1;
  tmp = BN_bin2bn(d,(int)len,a);
  if (tmp == (void *)0) {
    __retres = (BIGNUM *)((void *)0);
    goto return_label;
  }
  a->neg = neg;
  if (neg) {
    int tmp_0;
    {
      /*sequence*/
      tmp_0 = BN_num_bits((BIGNUM const *)a);
      ;
    }
    BN_clear_bit(a,tmp_0 - 1);
  }
  __retres = a;
  return_label: return __retres;
}

int BN_lshift(BIGNUM *r, BIGNUM const *a, int n);

int BN_lshift1(BIGNUM *r, BIGNUM const *a);

int BN_rshift(BIGNUM *r, BIGNUM const *a, int n);

int BN_rshift1(BIGNUM *r, BIGNUM const *a);

int BN_lshift1(BIGNUM *r, BIGNUM const *a)
{
  int __retres;
  register unsigned long *ap;
  register unsigned long *rp;
  register unsigned long t;
  register unsigned long c;
  int i;
  if (r != a) {
    BIGNUM *tmp_0;
    r->neg = a->neg;
    if (a->top + 1 <= r->dmax) tmp_0 = r;
    else tmp_0 = bn_expand2(r,a->top + 1);
    if (tmp_0 == (void *)0) {
      __retres = 0;
      goto return_label;
    }
    r->top = a->top;
  }
  else {
    BIGNUM *tmp_2;
    if (a->top + 1 <= r->dmax) tmp_2 = r;
    else tmp_2 = bn_expand2(r,a->top + 1);
    if (tmp_2 == (void *)0) {
      __retres = 0;
      goto return_label;
    }
  }
  ap = a->d;
  rp = r->d;
  c = (unsigned long)0;
  i = 0;
  while (i < a->top) {
    {
      unsigned long *tmp_3;
      unsigned long *tmp_4;
      {
        /*sequence*/
        tmp_3 = ap;
        ap ++;
        t = *tmp_3;
      }
      {
        /*sequence*/
        tmp_4 = rp;
        rp ++;
        *tmp_4 = ((t << 1) | c) & 0xffffffffffffffffL;
      }
      if (t & 0x8000000000000000L) c = (unsigned long)1;
      else c = (unsigned long)0;
    }
    i ++;
  }
  if (c) {
    *rp = (unsigned long)1;
    (r->top) ++;
  }
  __retres = 1;
  return_label: return __retres;
}

int BN_rshift1(BIGNUM *r, BIGNUM const *a)
{
  int __retres;
  unsigned long *ap;
  unsigned long *rp;
  unsigned long t;
  unsigned long c;
  int i;
  int j;
  if (a->top == 0) {
    BN_set_word(r,(unsigned long)0);
    __retres = 1;
    goto return_label;
  }
  i = a->top;
  ap = a->d;
  j = i - (*(ap + (i - 1)) == (unsigned long)1);
  if (a != r) {
    BIGNUM *tmp_0;
    if (j <= r->dmax) tmp_0 = r; else tmp_0 = bn_expand2(r,j);
    if (tmp_0 == (void *)0) {
      __retres = 0;
      goto return_label;
    }
    r->neg = a->neg;
  }
  rp = r->d;
  {
    /*sequence*/
    i --;
    t = *(ap + i);
  }
  if (t & (unsigned long)1) c = 0x8000000000000000L;
  else c = (unsigned long)0;
  t >>= 1;
  if (t) *(rp + i) = t;
  while (i > 0) {
    {
      /*sequence*/
      i --;
      t = *(ap + i);
    }
    *(rp + i) = ((t >> 1) & 0xffffffffffffffffL) | c;
    if (t & (unsigned long)1) c = 0x8000000000000000L;
    else c = (unsigned long)0;
  }
  r->top = j;
  __retres = 1;
  return_label: return __retres;
}

int BN_lshift(BIGNUM *r, BIGNUM const *a, int n)
{
  int __retres;
  int i;
  int nw;
  int lb;
  int rb;
  unsigned long *t;
  unsigned long *f;
  unsigned long l;
  BIGNUM *tmp_0;
  r->neg = a->neg;
  nw = n / 64;
  if ((a->top + nw) + 1 <= r->dmax) tmp_0 = r;
  else tmp_0 = bn_expand2(r,(a->top + nw) + 1);
  if (tmp_0 == (void *)0) {
    __retres = 0;
    goto return_label;
  }
  lb = n % 64;
  rb = 64 - lb;
  f = a->d;
  t = r->d;
  *(t + (a->top + nw)) = (unsigned long)0;
  if (lb == 0) {
    i = a->top - 1;
    while (i >= 0) {
      *(t + (nw + i)) = *(f + i);
      i --;
    }
  }
  else {
    i = a->top - 1;
    while (i >= 0) {
      l = *(f + i);
      *(t + ((nw + i) + 1)) |= (l >> rb) & 0xffffffffffffffffL;
      *(t + (nw + i)) = (l << lb) & 0xffffffffffffffffL;
      i --;
    }
  }
  memset_unsigned_long(t,0,(unsigned int)((unsigned long)nw * sizeof(*(t + 0))));
  r->top = (a->top + nw) + 1;
  {
    unsigned long *ftl;
    int tmp_top;
    tmp_top = r->top;
    if (tmp_top > 0) {
      ftl = r->d + (tmp_top - 1);
      while (tmp_top > 0) {
        unsigned long *tmp_1;
        {
          /*sequence*/
          tmp_1 = ftl;
          ftl --;
          ;
        }
        if (*tmp_1) break;
        tmp_top --;
      }
      r->top = tmp_top;
    }
  }
  __retres = 1;
  return_label: return __retres;
}

int BN_rshift(BIGNUM *r, BIGNUM const *a, int n)
{
  int __retres;
  int i;
  int j;
  int nw;
  int lb;
  int rb;
  unsigned long *t;
  unsigned long *f;
  unsigned long l;
  unsigned long tmp;
  int tmp_0;
  nw = n / 64;
  rb = n % 64;
  lb = 64 - rb;
  if (nw >= a->top) goto _LOR;
  else 
    if (a->top == 0) {
      _LOR: BN_set_word(r,(unsigned long)0);
            __retres = 1;
            goto return_label;
    }
  {
    /*sequence*/
    tmp_0 = BN_num_bits(a);
    i = ((tmp_0 - n) + (64 - 1)) / 64;
  }
  if (r != a) {
    BIGNUM *tmp_2;
    r->neg = a->neg;
    if (i <= r->dmax) tmp_2 = r; else tmp_2 = bn_expand2(r,i);
    if (tmp_2 == (void *)0) {
      __retres = 0;
      goto return_label;
    }
  }
  else 
    if (n == 0) {
      __retres = 1;
      goto return_label;
    }
  f = a->d + nw;
  t = r->d;
  j = a->top - nw;
  r->top = i;
  if (rb == 0) {
    i = j;
    while (i != 0) {
      unsigned long *tmp_3;
      unsigned long *tmp_4;
      {
        /*sequence*/
        tmp_3 = t;
        t ++;
        tmp_4 = f;
        f ++;
        *tmp_3 = *tmp_4;
      }
      i --;
    }
  }
  else {
    unsigned long *tmp_5;
    {
      /*sequence*/
      tmp_5 = f;
      f ++;
      l = *tmp_5;
    }
    i = j - 1;
    while (i != 0) {
      {
        unsigned long *tmp_6;
        unsigned long *tmp_7;
        tmp = (l >> rb) & 0xffffffffffffffffL;
        {
          /*sequence*/
          tmp_6 = f;
          f ++;
          l = *tmp_6;
        }
        {
          /*sequence*/
          tmp_7 = t;
          t ++;
          *tmp_7 = (tmp | (l << lb)) & 0xffffffffffffffffL;
        }
      }
      i --;
    }
    l = (l >> rb) & 0xffffffffffffffffL;
    if (l) *t = l;
  }
  __retres = 1;
  return_label: return __retres;
}

unsigned long BN_mod_word(BIGNUM const *a, unsigned long w);

unsigned long BN_div_word(BIGNUM *a, unsigned long w);

int BN_mul_word(BIGNUM *a, unsigned long w);

int BN_add_word(BIGNUM *a, unsigned long w);

int BN_sub_word(BIGNUM *a, unsigned long w);

unsigned long BN_mod_word(BIGNUM const *a, unsigned long w)
{
  unsigned long __retres;
  unsigned long ret;
  int i;
  ret = (unsigned long)0;
  if (w == (unsigned long)0) {
    __retres = (unsigned long)(-1);
    goto return_label;
  }
  w &= 0xffffffffffffffffL;
  i = a->top - 1;
  while (i >= 0) {
    ret = ((ret << 32) | ((*(a->d + i) >> 32) & (unsigned long)0xffffffffL)) % w;
    ret = ((ret << 32) | (*(a->d + i) & (unsigned long)0xffffffffL)) % w;
    i --;
  }
  __retres = ret;
  return_label: return __retres;
}

unsigned long BN_div_word(BIGNUM *a, unsigned long w)
{
  unsigned long __retres;
  unsigned long ret;
  int i;
  int j;
  int tmp;
  int tmp_0;
  ret = (unsigned long)0;
  w &= 0xffffffffffffffffL;
  if (! w) {
    __retres = (unsigned long)(-1);
    goto return_label;
  }
  if (a->top == 0) {
    __retres = (unsigned long)0;
    goto return_label;
  }
  {
    /*sequence*/
    tmp = BN_num_bits_word(w);
    j = 64 - tmp;
  }
  w <<= j;
  tmp_0 = BN_lshift(a,(BIGNUM const *)a,j);
  if (! tmp_0) {
    __retres = (unsigned long)(-1);
    goto return_label;
  }
  i = a->top - 1;
  while (i >= 0) {
    {
      unsigned long l;
      unsigned long d;
      l = *(a->d + i);
      d = bn_div_words(ret,l,w);
      ret = (l - (d * w & 0xffffffffffffffffL)) & 0xffffffffffffffffL;
      *(a->d + i) = d;
    }
    i --;
  }
  if (a->top > 0) 
    if (*(a->d + (a->top - 1)) == (unsigned long)0) (a->top) --;
  ret >>= j;
  __retres = ret;
  return_label: return __retres;
}

int BN_add_word(BIGNUM *a, unsigned long w)
{
  int __retres;
  unsigned long l;
  int i;
  w &= 0xffffffffffffffffL;
  if (! w) {
    __retres = 1;
    goto return_label;
  }
  if (a->top == 0) {
    int tmp;
    tmp = BN_set_word(a,w);
    __retres = tmp;
    goto return_label;
  }
  if (a->neg) {
    a->neg = 0;
    i = BN_sub_word(a,w);
    if (! (a->top == 0)) a->neg = ! a->neg;
    __retres = i;
    goto return_label;
  }
  i = 0;
  while (1) {
    if (w != (unsigned long)0) {
      if (! (i < a->top)) break;
    }
    else break;
    {
      /*sequence*/
      l = (*(a->d + i) + w) & 0xffffffffffffffffL;
      *(a->d + i) = l;
    }
    if (w > l) w = (unsigned long)1; else w = (unsigned long)0;
    i ++;
  }
  if (w) 
    if (i == a->top) {
      BIGNUM *tmp_1;
      if (a->top + 1 <= a->dmax) tmp_1 = a;
      else tmp_1 = bn_expand2(a,a->top + 1);
      if (tmp_1 == (void *)0) {
        __retres = 0;
        goto return_label;
      }
      (a->top) ++;
      *(a->d + i) = w;
    }
  __retres = 1;
  return_label: return __retres;
}

int BN_sub_word(BIGNUM *a, unsigned long w)
{
  int __retres;
  int i;
  w &= 0xffffffffffffffffL;
  if (! w) {
    __retres = 1;
    goto return_label;
  }
  if (a->top == 0) {
    i = BN_set_word(a,w);
    if (i != 0) BN_set_negative(a,1);
    __retres = i;
    goto return_label;
  }
  if (a->neg) {
    a->neg = 0;
    i = BN_add_word(a,w);
    a->neg = 1;
    __retres = i;
    goto return_label;
  }
  if (a->top == 1) 
    if (*(a->d + 0) < w) {
      *(a->d + 0) = w - *(a->d + 0);
      a->neg = 1;
      __retres = 1;
      goto return_label;
    }
  i = 0;
  while (1) 
    if (*(a->d + i) >= w) {
      *(a->d + i) -= w;
      break;
    }
    else {
      *(a->d + i) = (*(a->d + i) - w) & 0xffffffffffffffffL;
      i ++;
      w = (unsigned long)1;
    }
  if (*(a->d + i) == (unsigned long)0) 
    if (i == a->top - 1) (a->top) --;
  __retres = 1;
  return_label: return __retres;
}

int BN_mul_word(BIGNUM *a, unsigned long w)
{
  int __retres;
  unsigned long ll;
  w &= 0xffffffffffffffffL;
  if (a->top) 
    if (w == (unsigned long)0) BN_set_word(a,(unsigned long)0);
    else {
      ll = bn_mul_words(a->d,(unsigned long const *)a->d,a->top,w);
      if (ll) {
        BIGNUM *tmp_0;
        int tmp_1;
        if (a->top + 1 <= a->dmax) tmp_0 = a;
        else tmp_0 = bn_expand2(a,a->top + 1);
        if (tmp_0 == (void *)0) {
          __retres = 0;
          goto return_label;
        }
        {
          /*sequence*/
          tmp_1 = a->top;
          (a->top) ++;
          *(a->d + tmp_1) = ll;
        }
      }
    }
  __retres = 1;
  return_label: return __retres;
}


